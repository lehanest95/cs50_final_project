AuthorID,Author,Date,Content,Attachments,Reactions
"492450454341550100","WhipStreak23#6131","11-Nov-19 07:23 PM","First!","",""
"112625916781277184","yama#2710","13-Dec-19 08:46 PM","aw damn i was hoping to steal some ideas from here","",""
"112625916781277184","yama#2710","13-Dec-19 08:46 PM","😛","",""
"112625916781277184","yama#2710","13-Dec-19 08:51 PM","Warning, this feels really messy: 
|| ```python
def countLongestStreak(STR: str, sequence: str) -> int:
    """"""count the number of consecutive instances of the STR in the sequence""""""
    for i in range(len(sequence) - len(STR) +1):
        counter = 0
        increment = 0
        lookup = sequence[i:(len(STR) +i)]
        following = sequence[len(STR) + i:(len(STR) *2) +i]

        while lookup == following:
            lookup = following
            following = sequence[(len(STR)*increment) + i : len(STR) * (increment +1) +i]
            increment += 1
            counter += 1
```||
One problem is that the last catch ends up being a false result because I set `lookup = following` I think, been thinking of ways around that, I guess one way would be to at the end `return counter -1`","",""
"112625916781277184","yama#2710","15-Dec-19 03:48 AM","well a day later i feel dumb, just had to put the counter line above","",""
"275290463995691009","Logic#2180","06-Jan-20 03:53 AM","just got into DNA... wish me luck! 😄","",""
"275290463995691009","Logic#2180","06-Jan-20 06:15 AM","just finished","",""
"275290463995691009","Logic#2180","06-Jan-20 06:16 AM","i got a quite nice solution for detecting the groups","",""
"478666949199396867","Venom#0120","07-Jan-20 03:20 PM","```# txt is the sequence
s = 'AGATC' 
pattern = '({})+'.format(s)
m = re.findall(pattern, txt)```","",""
"478666949199396867","Venom#0120","07-Jan-20 03:20 PM","i don't know why but m returns a list in which the longest match isn't","",""
"478666949199396867","Venom#0120","07-Jan-20 03:21 PM","```['AGATC' , 'AGATC' , 'AGATC' , 'AGATC' ]```","",""
"478666949199396867","Venom#0120","07-Jan-20 03:21 PM","returns smth similar to this","",""
"654185948501901312","clarxino#1917","08-Jan-20 11:52 AM","how did you specify which files to use as command-line arguments?","",""
"654185948501901312","clarxino#1917","08-Jan-20 11:58 AM","Unless you don't need to specify the files, just make sure the len(argv) = 3","",""
"333930283101323264","Anya L#2162","08-Jan-20 04:42 PM","@clarxino Read the instructions carefully; they usually say what you need to check for and what you can assume for the input they check for","",""
"654185948501901312","clarxino#1917","08-Jan-20 08:55 PM","@Anya L Thank you. As usual, I read the problem like I read my wife's text messages: for breadth not depth","","🤣 (1)"
"304284804185325570","TheNeekz#1683","10-Jan-20 12:57 AM","I thought that using a dictionary would be easier since the first line of a csv defaults as fieldnames, but I'm having trouble accessing the first row/fieldnames.","",""
"304284804185325570","TheNeekz#1683","10-Jan-20 12:59 AM","nvm 😄","",""
"654185948501901312","clarxino#1917","11-Jan-20 02:48 AM","I love how I realize how dumb I am every time I work on a pset. 
I do a chunk, get stumped, and then I read the documentation. I keep not seeing my error, and then I see the glaring error hours later.","",""
"654185948501901312","clarxino#1917","11-Jan-20 02:48 AM","Then I get stuck on the next part","",""
"333930283101323264","Anya L#2162","11-Jan-20 01:22 PM","@clarxino That's how it works for me too :) And that's why taking a break after all ideas are exhausted is magic - it gives our brain a chance to process information it's been bombarded with","",""
"654185948501901312","clarxino#1917","12-Jan-20 12:32 PM","I'm just debugging at the moment, but I'm not getting seeing matches with the large csv and the associated text files","",""
"654185948501901312","clarxino#1917","12-Jan-20 12:34 PM","I'm just printing the rows out at the moment to see if the file loads and to see how to get through the data, but the large.csv counts of the STRs don't match the counts of the txt file","",""
"654185948501901312","clarxino#1917","12-Jan-20 12:34 PM","||
from sys import argv
import csv
import sys

while True:
    if not len(argv) == 4:
        print('Usage: python dna.py data.csv sequence.txt')
        break

    dnaFile = sys.argv[2]
    with open(dnaFile, 'r') as csvfile:
        csvDR = csv.DictReader(csvfile)

        for line in csvDR:
            print(line['name'], line['AGATC'], line['TTTTTTCT'], line['AATG'], line['TCTAG'], line['GATA'], line['TATC'], line['GAAA'], line['TCTG'])

    filename = sys.argv[3]
    with open(filename, 'r') as f:

        for line in f:
            #print(line, end='') # this just prints the actual name of the file if i remove the break above
            f.read
            print(line.count('AGATC'), line.count('TTTTTTCT'), line.count('AATG'), line.count('TCTAG'), line.count('GATA'), line.count('TATC'), line.count('GAAA'), line.count('TCTG'))

        print()
        break
||","",""
"654185948501901312","clarxino#1917","12-Jan-20 12:35 PM","From how I'm doing it, the small.csv gets exact counts as expected with the first 3 txt files","",""
"333930283101323264","Anya L#2162","12-Jan-20 02:51 PM","@clarxino If all occurences of a certain DNA sequence are back to back, count will have you covered. However, what if DNA sequence occurs several times by 1s and 2s and then sequence of 17 occurences back to back, for example, followed by 1, 1, 1 separate occurences among other DNA sequences? Count counts all of them in total, but csv file has that longest 17 on record, and that's what you need to locate too","",""
"654185948501901312","clarxino#1917","12-Jan-20 09:29 PM","I’m not sure I understand. Count lines up with what I see when I find through the txt file.

Should I be using a different method or use s[i:j] mentioned in the walkthrough? If so, I’m not sure I totally understand how to use it in terms of the STRs","",""
"333930283101323264","Anya L#2162","12-Jan-20 10:57 PM","@clarxino Do I understand correctly that you manually count the occurences of DNA sequences in files and you get the same result as your program but a different one from the large database?","",""
"654185948501901312","clarxino#1917","12-Jan-20 11:48 PM","Correct. When I compare large.csv with 5.txt, I’m supposed to see a match with Lavender. But I’m not getting the same number for nearly any of the STRs. 

Sorry I’m on mobile away from my computer so I can’t see the exact results. But it says Lavender should have a certain number of AGATC count but when I control-f find the 5.txt file, it doesn’t say the same. Neither does the count method. But the control f and the count method match.","",""
"654185948501901312","clarxino#1917","12-Jan-20 11:52 PM","But it all lines up on the small.csv and 1,2,3,4 txt files.","",""
"393854278764068875","curiouskiwi#1671","13-Jan-20 07:30 AM","You have to find the longest consecutive occurrences of the STR... not the total number.","",""
"654185948501901312","clarxino#1917","13-Jan-20 10:27 AM","Oh i see","",""
"654185948501901312","clarxino#1917","13-Jan-20 09:01 PM","I guess I’m still unsure on getting the consecutive occurrences. Could I get a little help on that?","",""
"393854278764068875","curiouskiwi#1671","13-Jan-20 09:10 PM","one way is to have 2 counters.  go through the entire string and each time you find the STR, increment one counter for current count and when you hit a non-STR, set a ""max found so far"" counter.  Then keep going. If you find it again, then start counting etc.  if your current counter is larger than the max, then update the max.  At the very end of the string, you know the max number you found.","",""
"304284804185325570","TheNeekz#1683","14-Jan-20 07:48 AM","So I'm still trying to get my consecutive STR counts to come back correct. 
||
# open csv and read to memory
with open(csv_path, 'r') as csvfile:
    reader = csv.DictReader(csvfile)

    # get fieldnames and store in list 'headers'
    headers = reader.fieldnames

    small = 0
    counter = 0
    match = []
    j = 0
    n = 1
    STR = headers[n]
    l = len(STR)

for z in range(3):
    # open dna sequence and read to memory
    t = open(txt_path, 'r')
    with t:
        sequence = t.read()
        for i in range(len(sequence)-l+1):
            lookup = sequence[(j):(l+j)]

            # if substring is STR
            if lookup == headers[z+1]:
                small += 1
                j += l

            if small > counter:
                counter = small

            else:
                j += 1
                small = 0

        match.append(counter)
        small = 0
        counter = 0
        j = 0
        n += 1
        STR = headers[z+1]
        l = len(STR)

print (match)||

I would love to know why headers[n] does not work inside the main for loop (I had to switch to headers[z +1]). My second main source of frustration right now is that my second STR count for this test is always 0 when it should be 1 (I'm so sick of Alice, Bob and Charlie).","",""
"606445259680907264","Jeet Shah#8293","14-Jan-20 12:22 PM","In python

How to creat multiple arrays in loop

For example
For i in range (30)
    ai = []

Like this show creat 30 arrays 
a0, a1, a2.....","",""
"360091784950317087","Thelias#2825","14-Jan-20 09:48 PM","Anyone had the same result?","https://cdn.discordapp.com/attachments/637500246087434252/666730401158397974/unknown.png",""
"333930283101323264","Anya L#2162","14-Jan-20 10:26 PM","I also had one false positive, in 17 I think","",""
"304284804185325570","TheNeekz#1683","15-Jan-20 03:43 AM","just had to rearrange what I had! thanks rubber ducky!!!! but now large doesn't work :[ thinking I may have approached this the wrong way...","",""
"654185948501901312","clarxino#1917","15-Jan-20 12:45 PM","I am still stuck on iterating through the string to count the consecutive occurrences","",""
"654185948501901312","clarxino#1917","15-Jan-20 12:46 PM","compounded by the fact that debug50 isn't working","",""
"654185948501901312","clarxino#1917","15-Jan-20 12:47 PM","my code is as follows
||
filename = sys.argv[3]
    with open(filename, 'r') as f:

        for line in f:
            f.read
            counter1 = 0
            maxCounterSoFar1 = 0
            test1 = 'AGATC'
            for i in range(len(line)):
                if test1 in line:
                    counter1 += 1
                else:
                    counter1 == 0
            if counter1 > maxCounterSoFar1:
                maxCounterSoFar1 = counter1
                print(maxCounterSoFar1)

        print()
||","",""
"654185948501901312","clarxino#1917","15-Jan-20 12:47 PM","I'm getting the value 5723 for maxCounterSoFar1","",""
"393854278764068875","curiouskiwi#1671","15-Jan-20 09:25 PM","`if test1 in line:`  won't that return true if it finds 'AGATC' in line?  and therefore, your counter will be incremented `i` times?","",""
"393854278764068875","curiouskiwi#1671","15-Jan-20 09:34 PM","You can see that in this simple test @clarxino :  ```
f = ""12345""
for i in range(len(f)):
    if '3' in f:
        print(""3 is in f"")```","",""
"654185948501901312","clarxino#1917","15-Jan-20 10:28 PM","Ok, that would print it 5 times.","",""
"654185948501901312","clarxino#1917","15-Jan-20 10:28 PM","And I know how to go through a string to check for repeated characters","",""
"654185948501901312","clarxino#1917","15-Jan-20 10:29 PM","But how do I do that for repeated substrings?","",""
"393854278764068875","curiouskiwi#1671","15-Jan-20 10:34 PM","you could iterate over the entire sequence one slice at a time.","",""
"654185948501901312","clarxino#1917","16-Jan-20 12:14 PM","I'm wondering if I'm close. I don't know why this has taken me so much longer than all the other problems","",""
"654185948501901312","clarxino#1917","16-Jan-20 12:14 PM","I'm just doing a simple example so I don't have to use spoilers","",""
"654185948501901312","clarxino#1917","16-Jan-20 12:14 PM","```
s = ""ABCDEFGABCDABCDABCDEFG""
counter1 = 0
for string in s[ : : 4]:
    if ""ABCD"" in s:
        counter1 += 1
print(counter1)
```","",""
"654185948501901312","clarxino#1917","16-Jan-20 12:33 PM","I'm getting 6, but I should only be getting 4","",""
"333930283101323264","Anya L#2162","17-Jan-20 01:35 AM","@clarxino Print out s[ : : 4] - exactly 6 letters :) It serves as a counter for how many times the code looks for ""ABCD"" in the *same whole* s string, and since ""ABCD"" is in ""ABCDEFGABCDABCDABCDEFG"" every time it looks, 6 is correct. 
Keep in mind that not all DNA sequences are 4 characters long, so if you slice substrings of length 4 with step 4, you're bound to cut the substring you need in two at some point.","",""
"654185948501901312","clarxino#1917","17-Jan-20 11:47 AM","so this works up to the point after it goes through the elif","",""
"654185948501901312","clarxino#1917","17-Jan-20 11:47 AM","```
s = ""ABCDABCDABCDAAAABBBBCCCCDDDDABCDABCD""
substr = ""ABCD""
counter1 = 0
maxcounter1 = 0
i = 0
j = len(substr)
for k in s[i:j]:
    if substr in s[i:j]:
        counter1 += 1
        if counter1 > maxcounter1:
            maxcounter1 = counter1
    elif not substr in s[i:j]:

    i = i + len(substr)
    j = j + len(substr)

print(maxcounter1)
```","",""
"291997042127929356","peabody#4435","18-Jan-20 11:26 AM","how can i get the the str to scan for from the csv file that i import?","",""
"291997042127929356","peabody#4435","18-Jan-20 12:04 PM","aight i think i have it","",""
"291997042127929356","peabody#4435","18-Jan-20 09:51 PM","guys can i pass in a function as an argument to a function","",""
"291997042127929356","peabody#4435","19-Jan-20 01:48 PM","Hey guys, so I'm really frustrated with this program and I can't seem to get it to work. Nothing I do just makes it work and it's terrible. Here's my program and I've no idea why it won't work","",""
"291997042127929356","peabody#4435","19-Jan-20 01:48 PM","","https://cdn.discordapp.com/attachments/637500246087434252/668421532330229770/JPEG_20200119_144823.jpg",""
"291997042127929356","peabody#4435","19-Jan-20 02:04 PM","Can someone help me?","",""
"333930283101323264","Anya L#2162","19-Jan-20 04:56 PM","@peabody I did it differently, so not sure if this is the issue, but what I've noticed is: 1 - when the loop is initiated, you don't take into account len(STR), so in the end of the sequence, index i+len(STR) will be out of range; 2 - totalcount is only recorded if the slice is not equal to STR, but what if the sequence ends with the longest streak?
You might want to print part whether it meets the condition or not (e.g. in line with spaces between them to save space) + your variables - that way you'll see if there's a mistake and at which points","",""
"291997042127929356","peabody#4435","19-Jan-20 05:40 PM","one of the issues i encountered is that the actual count variable wasn't reflecting the true number of sequences that matches","",""
"291997042127929356","peabody#4435","19-Jan-20 06:03 PM","what im seeing is that it only detects the first instance of each STR","",""
"291997042127929356","peabody#4435","19-Jan-20 06:03 PM","like ik how to detect all occurences of the STR but im not able to get the longest streak","",""
"291997042127929356","peabody#4435","19-Jan-20 06:05 PM","the way im thinking about it is this: ill go through the sequence and then divide it into a chunk thats str size long. then ill look for that str. if i find it, ill increment my cur_counter. if the next part doesnt match, ill then check if my current counter is higher than my max, in which case ill dump my current value as my max and then keep searching","",""
"291997042127929356","peabody#4435","19-Jan-20 06:06 PM","is this wrong?","",""
"291997042127929356","peabody#4435","19-Jan-20 06:06 PM","i feel like my implementation seems correct but there","",""
"291997042127929356","peabody#4435","19-Jan-20 06:06 PM","something im not seeing","",""
"291997042127929356","peabody#4435","19-Jan-20 08:43 PM","@Anya L how did you do it?","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:44 PM","@peabody Ah, reading your explanation, I think I got it: You're using the same step regardless of the result of the check. While you're looking for STR, the check is correct - 1, because STR can start at any time. But once you've found STR, if you keep it 1, next part will be ""ACTT"" - not a match, and the counter goes back to zero. What you need is, once you find the match, get the next 4 char after STR you've found *ends*, keep stepping by 4, and only go back to stepping by 1 once not match. E.g. now you slice: ""T**ACTT**ACTTACT"", and you need ""TACT**TACT**TACT"".","",""
"291997042127929356","peabody#4435","19-Jan-20 09:45 PM","hmmm aight","",""
"291997042127929356","peabody#4435","19-Jan-20 09:45 PM","def streak(STR, sequence):
    cur_count = 1
    #totalcount = 0
    STRsize = len(STR)
    seqsize = len(sequence)
    for i in range(seqsize):
        cursor = sequence[i: i + STRsize]
        nextcursor = sequence[i + STRsize: i + (2 * STRsize)]
        while cursor ==  STR:
            if cursor == nextcursor:
                cur_count += 1
            break
    return cur_count
main()","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:46 PM","I used 2 Python libraries, because I'm lazy. Ask me again once you're done if still interested","",""
"291997042127929356","peabody#4435","19-Jan-20 09:46 PM","would this be more correct? ive been working on this and this is what ive ended up","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:47 PM","idk, does it work?","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:48 PM","Did you look into string methods? There's an easy way to step there, which might be of use here","",""
"291997042127929356","peabody#4435","19-Jan-20 09:48 PM","doesnt really work","",""
"291997042127929356","peabody#4435","19-Jan-20 09:48 PM","it only does for bob and thats about it","",""
"291997042127929356","peabody#4435","19-Jan-20 09:49 PM","its the logic you suggested but it doesnt seem to work","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:50 PM","Well, counter i remains the same, so you can't go too far without adjusting it too somehow","",""
"291997042127929356","peabody#4435","19-Jan-20 09:51 PM","so isnt this basically saying, start at i, then check the next two STR sizes chunks of this string and if theyre the same and they match the STR, increment the counter","",""
"291997042127929356","peabody#4435","19-Jan-20 09:51 PM","and repeat","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:55 PM","Well, yeah, but that ""for i in range(seqsize):"" is keeping you back, because it's only incrementing by 1 each loop. If this is the way you go, *while* might be just easier, because you have full control of your step by manually incrementing i by what you need at any point","",""
"291997042127929356","peabody#4435","19-Jan-20 09:55 PM","what would i increment it by other than 1?","",""
"333930283101323264","Anya L#2162","19-Jan-20 09:57 PM","Reread the logic above :)","",""
"291997042127929356","peabody#4435","19-Jan-20 09:57 PM","so im thinking incrementing by sizeof(STR)","",""
"291997042127929356","peabody#4435","19-Jan-20 09:57 PM","how would i write that in a while loop?","",""
"291997042127929356","peabody#4435","19-Jan-20 09:57 PM","i = 0","",""
"291997042127929356","peabody#4435","19-Jan-20 09:57 PM","while i in seqsize","",""
"291997042127929356","peabody#4435","19-Jan-20 09:58 PM","^?","",""
"291997042127929356","peabody#4435","19-Jan-20 09:59 PM","nvm i tried while i < seqsize","",""
"291997042127929356","peabody#4435","19-Jan-20 09:59 PM","and i get all 1s lmao","",""
"333930283101323264","Anya L#2162","19-Jan-20 10:00 PM","while will have to be limited by the length of whole str, which is not difficult once you recall that all strings end with a \n. Also, the trick is to change your step; if you keep i always +1, there's no point","",""
"291997042127929356","peabody#4435","19-Jan-20 10:03 PM","could i not just find the length of the string with len(sequence)?","",""
"291997042127929356","peabody#4435","19-Jan-20 10:09 PM","aight ill pick this up tomorrow","",""
"291997042127929356","peabody#4435","19-Jan-20 10:10 PM","my latest version:","",""
"291997042127929356","peabody#4435","19-Jan-20 10:10 PM","||def streak(STR, sequence):
    cur_count = 1
    #totalcount = 0
    STRsize = len(STR)
    seqsize = len(sequence)
    i = 0
    while i < seqsize:
        cursor = sequence[i: i + STRsize]
        nextcursor = sequence[i + STRsize: i + (2 * STRsize)]
        while cursor ==  STR:
            if cursor == nextcursor:
                cur_count += 1
            i += STRsize * 2
            break
        i += 1
    return cur_count||","",""
"291997042127929356","peabody#4435","19-Jan-20 10:11 PM","anyone, please tell me whats wrong with it","",""
"291997042127929356","peabody#4435","19-Jan-20 10:11 PM","ive been getting closer to the correct number of STRs but im just confused now","",""
"291997042127929356","peabody#4435","19-Jan-20 10:14 PM","||cur_count is starting at 0, not 1||","",""
"364417667039363072","4shr4f#1055","20-Jan-20 04:55 AM","@peabody I am just as confused thinking of giving up","",""
"364417667039363072","4shr4f#1055","20-Jan-20 04:56 AM","I got only small database to work","",""
"364417667039363072","4shr4f#1055","20-Jan-20 05:28 AM","I have submitted this 4 times only got 7/21 even though i have iterated correctly","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:01 AM","you've hardcoded the filenames","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:02 AM","instead of using whatever csv was given to you in the command line.","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:02 AM","@4shr4f","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:29 AM","isnèt that what you are meant to doÉ","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:31 AM","@4shr4f no, the spec says: 
> The program should require as its first command-line argument the name of a CSV file containing the STR counts for a list of individuals and should require as its second command-line argument the name of a text file containing the DNA sequence to identify.","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:32 AM","there's no requirement that the files have a particular name, and there's no guarantee that they will be identical to the ones you were given as samples.","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:33 AM","> You may assume that the first row of the CSV file will be the column names. The first column will be the word name and the remaining columns will be the STR sequences themselves.","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:33 AM","so if i do this now will i be graded on my first attempt?","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:34 AM","as with all the problems in CS50x, you can submit as many times as you need.","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:34 AM","the last submission will be the one that counts","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:34 AM","thanks i think i have done it","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:34 AM","..","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:36 AM","nope my iteraction is still having issues","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:36 AM","@curiouskiwi I have modified my code as well to be dynamic on file names","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:36 AM","and on the number of STRs?","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:37 AM","yes","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:37 AM","my large file is the issue","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:38 AM","my small one reads fine","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:38 AM","my large one doesnt i used regex.findall and count still not getting correct count....","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:38 AM","@curiouskiwi","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:39 AM","Can I show you my code?","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:39 AM","@4shr4f are you looking for the longest consecutive number?  or just counting how many there are?","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:39 AM","counting how many there are","",""
"393854278764068875","curiouskiwi#1671","20-Jan-20 06:39 AM","so if you are looking for ABC, then   ABCAABCABCAABC will only be 2","",""
"364417667039363072","4shr4f#1055","20-Jan-20 06:40 AM","oh I get it","",""
"364417667039363072","4shr4f#1055","20-Jan-20 08:10 AM","16/21 thank you","",""
"291997042127929356","peabody#4435","20-Jan-20 09:39 AM","@4shr4f what was your psuedocode for telling the consecutive chain?","",""
"364417667039363072","4shr4f#1055","20-Jan-20 10:24 PM","@peabody I cheated and used the pythonic way of multiplying strings and checking string","",""
"364417667039363072","4shr4f#1055","20-Jan-20 10:24 PM","for exact match","",""
"364417667039363072","4shr4f#1055","20-Jan-20 10:25 PM","of course it is not perfect 16/21 means it needs some improving...","",""
"364417667039363072","4shr4f#1055","20-Jan-20 10:26 PM","but 70% seems good","",""
"333930283101323264","Anya L#2162","21-Jan-20 12:51 AM","@4shr4f It's called creative approach to a problem, not cheating ;)","",""
"291997042127929356","peabody#4435","21-Jan-20 06:53 AM","@4shr4f bruh could you tell me what you used?","",""
"291997042127929356","peabody#4435","21-Jan-20 06:53 AM","Like which functions and the general syntax?","",""
"364417667039363072","4shr4f#1055","21-Jan-20 08:34 AM","@peabody I don't understand I used CSV.dictreader and created two list one short for keys and one for all values and from there it was looping","",""
"414660528083042304","Bitcoin#9272","21-Jan-20 09:19 AM","Is there a chance something is wrong with the CSV files given? Like my code works for all the sequences except for sequences 18, database large where it says it should print out no match but my program prints out Harry. After checking the files, my code is working as expected and it should print out Harry? Is there something wrong with answers given on CS50 pset6 dna?","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:24 AM","no","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:25 AM","according to your program, then, the longest run of consecutive `TCTG` occurrences in sequences/18.txt has 40 occurrences of that STR. When you count them manually, is that what you find?","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:29 AM","@Bitcoin ^^","",""
"414660528083042304","Bitcoin#9272","21-Jan-20 09:32 AM","@curiouskiwi so for sequence 18: my str count is:
```
[('AGATC', 46), ('TTTTTTCT', 49), ('AATG', 48), ('TCTAG', 29), ('GATA', 15), ('TATC', 5), ('GAAA', 28), ('TCTG', 41)])
```
and Harry's DNA is:
```
OrderedDict([('name', 'Harry'), ('AGATC', '46'), ('TTTTTTCT', '49'), ('AATG', '48'), ('TCTAG', '29'), ('GATA', '15'), ('TATC', '5'), ('GAAA', '28'), ('TCTG', '40')])
```
As you can see all the DNA matches except the last one, so is my program suppose to print ""no match""?","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:33 AM","there's no match because all the numbers have to match","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:34 AM","it would only be Harry if the file had a sequence for TCTG of 40.","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:35 AM","> If the STR counts match exactly with any of the individuals in the CSV file, your program should print out the name of the matching individual.","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:35 AM","> If the STR counts do not match exactly with any of the individuals in the CSV file, your program should print ""No match"".","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:35 AM","the keyword there is **exactly**","","👍 (1)"
"414660528083042304","Bitcoin#9272","21-Jan-20 09:39 AM","hmm but if i take sequence 19 where it is suppose to print out Fred. My str count is:
```
([('AGATC', 37), ('TTTTTTCT', 40), ('AATG', 10), ('TCTAG', 6), ('GATA', 4), ('TATC', 10), ('GAAA', 28), ('TCTG', 8)])
```
Fred's DNA sequence is:
```
OrderedDict([('name', 'Fred'), ('AGATC', '37'), ('TTTTTTCT', '40'), ('AATG', '10'), ('TCTAG', '6'), ('GATA', '5'), ('TATC', '10'), ('GAAA', '28'), ('TCTG', '8')]),
```
so here my program prints out no match which is suppose to be right but on the CS50 website it says it should print out Fred","",""
"393854278764068875","curiouskiwi#1671","21-Jan-20 09:42 AM","GATA is 5","",""
"414660528083042304","Bitcoin#9272","21-Jan-20 09:43 AM","ah okie, so something is wrong with my code 😦 Thank youuu!!","",""
"414660528083042304","Bitcoin#9272","21-Jan-20 09:44 AM","Dang it, all greens on CS50 submit with 2 reds.","",""
"558812567678484500","ambergristle#9460","22-Jan-20 10:45 AM","@curiouskiwi I submitted my function to find that it failed two of the cs50 checks. It turns out that for two of the .txt files it under-counted one of the patterns (like in @Bitcoin 's seq19 example above).","",""
"558812567678484500","ambergristle#9460","22-Jan-20 10:46 AM","I've checked different parts of my functions with print() to locate the error, but I'm having a hard time figuring out how just one of the patterns would be undercounted.","",""
"558812567678484500","ambergristle#9460","22-Jan-20 10:49 AM","It appears as though the function that determines whether or not a 4-char sequence matches the pattern is ignoring the last iteration.","",""
"558812567678484500","ambergristle#9460","22-Jan-20 10:50 AM","Do you have any thoughts on how I could pinpoint the issue more precisely?","",""
"393854278764068875","curiouskiwi#1671","22-Jan-20 11:23 AM","perhaps when you find a substring like GATA and you then look at the next 4 chars to see if it's GATA and it's not, are you then starting to look from there for the next GATA? or do you go back 3 chars to start looking?  For example, let's say your entire sequence is: ```
GABCGATAABCGATAGATAGATAGATAABC```","",""
"393854278764068875","curiouskiwi#1671","22-Jan-20 11:24 AM","you'd expect to find the longest GATA is 4.  If you run that through your code, do you get 4?  Or 3?","",""
"393854278764068875","curiouskiwi#1671","22-Jan-20 11:25 AM","@ambergristle ^^","",""
"324522780252962816","Sinergy#7605","22-Jan-20 03:55 PM","That sequence won't test what you're trying to find, you will get a count of 4 even if the error is present.  This one will test it:
GABCGATAABCGA**G**ATAGATAGATAGATAABC

See @ambergristle, it's possible your code will look through the sequence and see GA**G**, think ""that last G is not a T, ok next character"", but it is then essentially skipping over the first character of a ""GATA"".  Solution:  ||So if you are counting through and testing character by character and get only a partial match, you need to then start testing from just one character along from the last group of four, i.e. the second character in that group||","",""
"663961814526328912","Reem#0587","22-Jan-20 06:53 PM","Can someone help me understand how to access the OrderedDict that results from csv.DictReader","",""
"663961814526328912","Reem#0587","22-Jan-20 06:54 PM","I tried .items() but that didn't work","",""
"663961814526328912","Reem#0587","22-Jan-20 06:55 PM","DataDict = csv.DictReader(open(argv[1]))
        for row in DataDict:
            print(row)
^^ this is my code and it out puts this:","",""
"663961814526328912","Reem#0587","22-Jan-20 06:55 PM","OrderedDict([('name', 'Alice'), ('AGATC', '2'), ('AATG', '8'), ('TATC', '3')])
OrderedDict([('name', 'Bob'), ('AGATC', '4'), ('AATG', '1'), ('TATC', '5')])
OrderedDict([('name', 'Charlie'), ('AGATC', '3'), ('AATG', '2'), ('TATC', '5')])","",""
"663961814526328912","Reem#0587","22-Jan-20 06:58 PM","How can I just pull out for example ('AGATC', '2') to use it for comparison and then print out just 'Alice' if the comparison is equal? I am a little lost","",""
"663961814526328912","Reem#0587","22-Jan-20 08:12 PM","figured out how to print name but still stuck on comparing tuples","",""
"663961814526328912","Reem#0587","22-Jan-20 08:14 PM","Isn't there a way to iterate through the tuples in each ordereddict?","",""
"324522780252962816","Sinergy#7605","22-Jan-20 09:55 PM","Please note Blauelf's input regarding the list() method just below before reading.  remove exists for lists though.

||I personally used something like
reader = csv.reader(...)
and as a first step
STRs = next(reader) # and ignored STRs[0] later

but if you are using DictReader, I think you are looking for
STRs = DataDict.keys()
STRs.remove('name')

then something like
for row in DataDict:
    for STR in STRs:
        print row[STR]

I haven't tested this, but I'm hoping .keys() will at least get you partway there.||","",""
"234679095378706433","Blauelf#6622","22-Jan-20 10:45 PM","If I remember correctly, that `keys()` does not give you a list, and `remove` does not exist. Which is solvable by wrapping it in `list(...)`. But I might confuse that.","",""
"660349228219891722","appledapple#7734","23-Jan-20 03:28 AM","@Reem I struggled for a long while trying to use an ordered dictionary, then eventually I decided to just try storing the data in a list. Once I did that, everything started falling into place much quicker. I think I was much more comfortable with list methods from using arrays in c. Just a thought 🤔","","👍 (1)"
"558812567678484500","ambergristle#9460","23-Jan-20 07:31 PM","@curiouskiwi @Sinergy I was jumping ahead len(pattern) once repetitions terminated. All fixed!","",""
"663961814526328912","Reem#0587","24-Jan-20 05:47 AM","Hey guys, I finished writing the code but for some reason its not working and I am not really sure why. It doesn't give me any error messages, it just keeps running forever until I do ^C then it says this: Traceback (most recent call last):
  File ""dna.py"", line 72, in <module>
    main ()
  File ""dna.py"", line 35, in main
    person = find_match(Data, countsFound)
  File ""dna.py"", line 64, in find_match
    for row in Data:
  File ""/usr/local/lib/python3.7/codecs.py"", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
KeyboardInterrupt   ... What does this mean? and is there a way I can share my solution with you without breaking the academic honesty guidelines?","",""
"663961814526328912","Reem#0587","24-Jan-20 06:45 AM","Update: I kind of fixed it. I think the problem was that I wrote some functions that couldn't read data from csv because it was opened in main.","",""
"665886217623175187","randomone#1881","24-Jan-20 02:31 PM","hey guys, I just started a DNA and already stuck on csv. Seems like I can't write the csv file dir right. Any help appreciated! Thanks!","",""
"665886217623175187","randomone#1881","24-Jan-20 02:32 PM","","https://cdn.discordapp.com/attachments/637500246087434252/670244460084592650/Screen_Shot_2020-01-24_at_3.31.06_pm.png",""
"665886217623175187","randomone#1881","24-Jan-20 02:46 PM","","https://cdn.discordapp.com/attachments/637500246087434252/670248146374492180/Screen_Shot_2020-01-24_at_3.46.15_pm.png",""
"324522780252962816","Sinergy#7605","24-Jan-20 03:33 PM","you just need the file location relative to the folder you are running your .py from","",""
"665886217623175187","randomone#1881","24-Jan-20 03:54 PM","@Sinergy thanks for that!","",""
"665886217623175187","randomone#1881","25-Jan-20 04:49 PM","started dna again today and here is where I am stuck... I am trying to use Counter func in order to find consecutive substrings in a string and from what I see my code is working ok when it counts small databases (1-4.txt), but once the big ones (remaining) are hit - the terminal shows ""killed' message. Is the code too ineffective?","https://cdn.discordapp.com/attachments/637500246087434252/670641359451062322/SPOILER_Screen_Shot_2020-01-25_at_5.44.56_pm.png",""
"665886217623175187","randomone#1881","25-Jan-20 04:49 PM","if use smaller 1.txt - it is ok","https://cdn.discordapp.com/attachments/637500246087434252/670641409971191818/Screen_Shot_2020-01-25_at_5.42.43_pm.png",""
"665886217623175187","randomone#1881","25-Jan-20 04:49 PM","if use bigger one - 7.txt - it is crashing","https://cdn.discordapp.com/attachments/637500246087434252/670641414912344064/Screen_Shot_2020-01-25_at_5.21.58_pm.png",""
"665886217623175187","randomone#1881","25-Jan-20 04:50 PM","huge thanks for any help)","",""
"234679095378706433","Blauelf#6622","25-Jan-20 05:39 PM","You are only meant to search for repetitions of those sequences mentioned in the csv file, and I doubt `Counter` will help you. I don't think it has an idea of ""contiguous"".","",""
"665886217623175187","randomone#1881","26-Jan-20 05:28 PM","I used pandas for matching the results, but stuck on it forever...","",""
"665886217623175187","randomone#1881","26-Jan-20 05:33 PM","I managed to get an output like that:","https://cdn.discordapp.com/attachments/637500246087434252/671014816760070145/Screen_Shot_2020-01-26_at_6.31.01_pm.png",""
"665886217623175187","randomone#1881","26-Jan-20 05:33 PM","code","https://cdn.discordapp.com/attachments/637500246087434252/671014918555828224/SPOILER_Screen_Shot_2020-01-26_at_6.31.46_pm.png",""
"665886217623175187","randomone#1881","26-Jan-20 05:33 PM","code","https://cdn.discordapp.com/attachments/637500246087434252/671014968568709130/SPOILER_Screen_Shot_2020-01-26_at_6.32.51_pm.png",""
"665886217623175187","randomone#1881","26-Jan-20 05:36 PM","Any method I am trying to use for a match - resulting in errors or doesn't work at all. Probably because of the different data in both data frames (df & df1). So really stuck. Thanks in advance","",""
"665886217623175187","randomone#1881","26-Jan-20 05:36 PM","the code might look really messy though...","",""
"291997042127929356","peabody#4435","27-Jan-20 07:30 AM","hey guys, so ive sorta got something thats working but it only works for bob lmao","",""
"291997042127929356","peabody#4435","27-Jan-20 07:31 AM","@curiouskiwi could you help? or anyone?","",""
"291997042127929356","peabody#4435","27-Jan-20 07:32 AM","||for i in range(len(fieldnames)):
        continuous = False
        maximum = 0
        total = 0
        counter = 0
        while counter < len(readtext):
            bit = readtext[counter : counter + len(fieldnames[i])]
            if bit == fieldnames[i]:
                maximum += 1
                continuous = True
                counter += len(fieldnames[i])
            elif bit != fieldnames[i]:
                continuous = False
                counter += 1
            if continuous:
                if maximum < total:
                    maximum = total
                total = 0
        print(fieldnames[i])
        print(maximum)||","",""
"324522780252962816","Sinergy#7605","27-Jan-20 08:31 AM","ok first up, I think your maximum += 1 should be total += 1.

You also have the structure
```if (something):
  do this
elif (not something):
  do that```
That second test ""not something"" is always going to be true, and the code is always going to be followed.  So you just need an else","",""
"324522780252962816","Sinergy#7605","27-Jan-20 08:35 AM","I haven't quite wrapped my head around your use of the continuous variable, but with that first change you'll at least be counting the longest STR repeat, instead of the total number.","",""
"324522780252962816","Sinergy#7605","27-Jan-20 08:37 AM","You're not showing as online so I won't ping you","",""
"291997042127929356","peabody#4435","27-Jan-20 10:35 AM","hey, thanks for the help","",""
"291997042127929356","peabody#4435","27-Jan-20 10:39 AM","i changed my code as you suggested @Sinergy","",""
"291997042127929356","peabody#4435","27-Jan-20 10:39 AM","and now im showing all ones for bob","",""
"324522780252962816","Sinergy#7605","27-Jan-20 10:46 AM","Oh, I see.  total is reset to 0 for every STR found","",""
"291997042127929356","peabody#4435","27-Jan-20 11:02 AM","should it just stay as max then?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:20 AM","omg i got it work","",""
"291997042127929356","peabody#4435","27-Jan-20 11:20 AM","i am so happy","",""
"599198875806334986","Hades#2274","27-Jan-20 04:24 PM","Hi, Is there a way to change a character in a string? For example: ```s = 'HelloWorld' 
s[1] = h``` Is there a way to do that?","",""
"599198875806334986","Hades#2274","27-Jan-20 04:25 PM","When i try to do it i get an error: 'str' object does not support item assignment.","",""
"234679095378706433","Blauelf#6622","27-Jan-20 08:42 PM","Strings are read-only, you find that with most higher level programming languages. Make a new string.
```Python
s = 'HelloWorld' 
s = s[:1] + h + s[2:]
```
`s[:1]` is all the characters up to (not including) 1. `s[2:]` is all characters starting at index 2.","",""
"291997042127929356","peabody#4435","27-Jan-20 10:21 PM","guys can i compare an array against a row in a csv?","",""
"291997042127929356","peabody#4435","27-Jan-20 10:21 PM","i currently have my STR counts stored within an array and i wanna compare it against the rows in the database","",""
"234679095378706433","Blauelf#6622","27-Jan-20 10:44 PM","Depends on the data structures you want to compare. If both are regular lists, or both are regular tuples, you could compare them using `==`. I had two different kinds of `dict`s rather than list/tuple and used something like `all(counts[seq] == row[seq] for seq in sequences)` to compare them element-wise.","",""
"291997042127929356","peabody#4435","27-Jan-20 10:45 PM","hmmm","",""
"291997042127929356","peabody#4435","27-Jan-20 10:45 PM","for row in reader:
        attmatch = 0
        for i in range(len(fieldnames) - 1):
            if int(match[i]) == int(uniquerow[i + 1]):
                attmatch += 1
            else:
                break
        if attmatch == len(fieldnames) - 1:
            print(f""{row[0]}"")
            found = True
            break
    if not found:
        print(""No match"")","",""
"291997042127929356","peabody#4435","27-Jan-20 10:45 PM","so this is what i have for this part so far and ive made uniquerows into lists","",""
"291997042127929356","peabody#4435","27-Jan-20 10:45 PM","match is an array that contains my STR counts","",""
"291997042127929356","peabody#4435","27-Jan-20 10:45 PM","can i not compare like I am doing here?","",""
"234679095378706433","Blauelf#6622","27-Jan-20 10:51 PM","In that case, you might be able to compare `match == list(map(int, uniquerow[1:]))` or maybe a bit more pythonic `match == [int(x) for x in uniquerow[1:]]`","",""
"291997042127929356","peabody#4435","27-Jan-20 10:53 PM","hmmm i still get no match","",""
"291997042127929356","peabody#4435","27-Jan-20 10:54 PM","for row in reader:
        attmatch = 0
        if match == list(map(int, uniquerow[1:])):
            found = True
        if found == True:
            print(f""{row[0]}"")
            break
    if not found:
        print(""No match"")","",""
"291997042127929356","peabody#4435","27-Jan-20 10:54 PM","is this what you meant?","",""
"234679095378706433","Blauelf#6622","27-Jan-20 10:59 PM","Similar. But depends on what exactly `match` is. You say ""array"", but what is it exactly?
A more pythonic loop would look like
```Python
for row in reader:
    if match == list(map(int, uniquerow[1:])):
        print(row[0])
        break
else:
    print(""No match"")
```
The `else` part is executed only if you don't `break`.","",""
"291997042127929356","peabody#4435","27-Jan-20 11:01 PM","the else is inside the for loop yeh?","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:02 PM","No. It belongs to the loop, on same indentation level.","",""
"291997042127929356","peabody#4435","27-Jan-20 11:02 PM","hmm aight, i still get no match only","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:02 PM","What exactly is `match`?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:03 PM","so from the previous bits, match was a blank array and then i appended the maximum value for each STR repeat to the array","",""
"291997042127929356","peabody#4435","27-Jan-20 11:03 PM","so its an array that contains the values for STR repeats, ordered for the STR","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:03 PM","In same order as in csv?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:04 PM","yeh","",""
"291997042127929356","peabody#4435","27-Jan-20 11:04 PM","im manually skipping the name field but otherwise, its the same order","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:05 PM","Your initial code looks much like C, but not wrong. I'm wondering whether you count right.","",""
"393854278764068875","curiouskiwi#1671","27-Jan-20 11:05 PM","if you `print(match)` using sequences/1.txt  what do you get? (with the small csv)","",""
"291997042127929356","peabody#4435","27-Jan-20 11:06 PM","@curiouskiwi [4,1,5]","",""
"291997042127929356","peabody#4435","27-Jan-20 11:06 PM","@Blauelf i think i am counting right","",""
"393854278764068875","curiouskiwi#1671","27-Jan-20 11:06 PM","yes, that's right","",""
"291997042127929356","peabody#4435","27-Jan-20 11:06 PM","yeh im pretty sure that the count is correct, the issue is with the comparision","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:07 PM","BTW, why `row` and `uniquerow`?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:08 PM","so i stored my rows as lists (so i could compare) as uniquerow","",""
"291997042127929356","peabody#4435","27-Jan-20 11:08 PM","row is from the csv","",""
"291997042127929356","peabody#4435","27-Jan-20 11:08 PM","should i change them?","",""
"393854278764068875","curiouskiwi#1671","27-Jan-20 11:11 PM","I think you need to put print statements all along so you can see if what you think you ar.e comparing is actually what you are comparing","",""
"291997042127929356","peabody#4435","27-Jan-20 11:11 PM","the issue seems to be the comparision statement as i used some print statements","",""
"291997042127929356","peabody#4435","27-Jan-20 11:11 PM","its not even going through that if thing so its probably calling it false and moving on","",""
"291997042127929356","peabody#4435","27-Jan-20 11:17 PM","its not even printing the row","",""
"291997042127929356","peabody#4435","27-Jan-20 11:17 PM","like","",""
"291997042127929356","peabody#4435","27-Jan-20 11:18 PM","for row in reader:","",""
"291997042127929356","peabody#4435","27-Jan-20 11:18 PM","print(row)","",""
"291997042127929356","peabody#4435","27-Jan-20 11:18 PM","doesnt work","",""
"393854278764068875","curiouskiwi#1671","27-Jan-20 11:25 PM","but if you `print(reader)` before that, there is something there?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:27 PM","<csv.DictReader object at 0x7f769473b450>","",""
"291997042127929356","peabody#4435","27-Jan-20 11:27 PM","this mean anything?","",""
"291997042127929356","peabody#4435","27-Jan-20 11:27 PM","ok so i reverted to an earlier version","",""
"291997042127929356","peabody#4435","27-Jan-20 11:27 PM","for i in reader:
        line = i
        print(line)
        for i in range(len(fieldnames) - 1):
            if int(match[i]) == int(line[i + 1]):
                matchatt += 1
            else:
                break
        if matchatt == len(fieldnames) - 1:
            print(f""{line[0]}"")
            found = True
            break
    if not found:
        print(""No match"")","",""
"291997042127929356","peabody#4435","27-Jan-20 11:27 PM","and the output for this is:","",""
"291997042127929356","peabody#4435","27-Jan-20 11:28 PM","[4, 1, 5]
<csv.DictReader object at 0x7f769473b450>
OrderedDict([('name', 'Alice'), ('AGATC', '2'), ('AATG', '8'), ('TATC', '3')])
Traceback (most recent call last):
  File ""test.py"", line 52, in <module>
    main()
  File ""test.py"", line 41, in main
    if int(match[i]) == int(line[i + 1]):
KeyError: 1","",""
"291997042127929356","peabody#4435","27-Jan-20 11:28 PM","so im not quite sure what to make of this","",""
"291997042127929356","peabody#4435","27-Jan-20 11:30 PM","I'll pick this up tomorrow","",""
"291997042127929356","peabody#4435","27-Jan-20 11:30 PM","But @curiouskiwi what could the issue be?","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:34 PM","So... your line is an ordered dict, with sequence names, not an index for the name. In that case, use `int(line[fieldnames[i+1]])` instead of `int(line[i+1])`.","",""
"291997042127929356","peabody#4435","27-Jan-20 11:36 PM","omg ok so now its stopping at bob","",""
"291997042127929356","peabody#4435","27-Jan-20 11:36 PM","but im getting the keyerror of 0","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:37 PM","`line[""name""]`","",""
"291997042127929356","peabody#4435","27-Jan-20 11:38 PM","OMG YES","",""
"291997042127929356","peabody#4435","27-Jan-20 11:38 PM","THANKS SO MUCH","",""
"234679095378706433","Blauelf#6622","27-Jan-20 11:38 PM","It's a dict, so you must provide the key, not a number (though numbers can be keys)","",""
"291997042127929356","peabody#4435","27-Jan-20 11:40 PM","thanks so much guys","",""
"291997042127929356","peabody#4435","27-Jan-20 11:40 PM","ugh ive been stuck on this for so long (mix of being dumb and not finding time) so being able to move on feels so good","",""
"109970729109323776","jackshow#0001","28-Jan-20 11:00 PM","im very upset","",""
"109970729109323776","jackshow#0001","28-Jan-20 11:01 PM","I would have finished this like 6 hrs ago cuz i thought i found a better way to check the words, was reading into it and continually testing, only to find out my initial way was better","",""
"109970729109323776","jackshow#0001","28-Jan-20 11:01 PM","😢","",""
"575580654352334848","Dhairye Kataria#8587","29-Jan-20 07:31 AM","😂  This happens with me all the time","",""
"575580654352334848","Dhairye Kataria#8587","29-Jan-20 10:42 AM","DNA took me 10 days of this process","",""
"654185948501901312","clarxino#1917","29-Jan-20 10:48 PM","I've come back after some time off and I still have some questions about my code for counting consecutive STRs","",""
"654185948501901312","clarxino#1917","29-Jan-20 10:49 PM","``` 
s = ""ABCDABCDABCDAAAABBBBCCCCDDDDABCDABCD""
substr = ""ABCD""
counter1 = 0
maxcounter1 = 0
i = 0
j = len(substr)
for k in s[i:j]:
    if substr in s[i:j]:
        counter1 += 1
        if counter1 > maxcounter1:
            maxcounter1 = counter1
    elif not substr in s[i:j]:
            counter1 = 0

    i = i + len(substr)
    j = j + len(substr)

print(maxcounter1)
```","",""
"654185948501901312","clarxino#1917","29-Jan-20 10:57 PM","So when I run that, I traverse the string (s) letter by letter while the my substring (substr) matches. But if not, it resets the counter to 0 and then stops looking through the string (s).","",""
"654185948501901312","clarxino#1917","29-Jan-20 10:58 PM","Am I at all correct in this?","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:07 PM","I don't understand your `k` loop, and STRs might start at any index, not just those divisible by `len(substr)`.","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:08 PM","I did something similar, but would increment by 1 on miss instead, and use a while loop.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:10 PM","I don't think I understand any better. How do I start the while loop for the string?","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:10 PM","I thought of something like `while j <= len(s):` instead of the `for k ...`","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:11 PM","Oh ok.","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:11 PM","And when you say `substr in s[i:j]`, you really mean `substr == s[i:j]`. Because they are of same length, those are equivalent.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:12 PM","Ohhhh","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:12 PM","Ok I'll try those.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:13 PM","I'm using j for the length of the substr (for when I'm plugging in other STRs). I'd still be looking at using k <= len(s) correct?","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:13 PM","I've never worked so much on an assignment","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:14 PM","while k <= len(s) **","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:14 PM","I think you are using `j` for the end of the current substring?","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:15 PM","Yes.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:15 PM","So wait, shouldn't it be len(substr) + 1?","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:18 PM","Oh, this is a bit confusing, you use the term ""substr"" for the search substring, while I used it for the slice from `s`.
The while loop would have to loop for all the slices that still fit into `s`. If `j > len(s)`, your slice would no longer fit in.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:21 PM","So is my approach completely incorrect?","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:24 PM","I think my approach does work with your suggestions","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:24 PM","```
s = ""ABCDABCDABCDAAAABBBBCCCCDDDDABCDABCD""
substr = ""ABCD""
counter1 = 0
maxcounter1 = 0
i = 0
j = len(substr)
while j <= len(s):
    if substr in s[i:j]:
        counter1 += 1
        if counter1 > maxcounter1:
            maxcounter1 = counter1
    elif not substr in s[i:j]:
            counter1 = 0

    i = i + len(substr)
    j = j + len(substr)

print(maxcounter1)
```","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:25 PM","That prints the maxcounter of 3","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:25 PM","even though counter1 is 2 at the end.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:25 PM","Thank you so much!","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:25 PM","I moved the `i += len(substr)` and `j += len(substr)` into the ""matches"" path, and had a `i += 1` and `j += 1` in the ""else"" path.","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:26 PM","If there's a match, you want to jump right to its end. But if there's a mismatch, the next match might be at the next character.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:26 PM","Oh....that's right","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:35 PM","Thank you so much","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:36 PM","And your `elif` seems a bit redundand, could be a regular `else`.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:41 PM","good call. That was for the for loop","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:43 PM","I really appreciate the help. Now I  have to figure out how to load the STRs as the substr","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:45 PM","unrelated to that specifically, I noticed that when I ran debug50, if I messed up and didn't put a break in a while loop and just ended the process with control + z, I broke my debug50 for hours","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:45 PM","So I'd have to debug in vscode","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:45 PM","Anyone have any fixes for that?","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:47 PM","`Ctrl`+`Z`? Wasn't that for suspending something instead of killing it? In the same terminal, what would typing `fg` do?","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:48 PM","it just prints the previous command on a new line and then stalls","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:49 PM","And can you kill that with `Ctrl`+`C` (sigint)?","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:50 PM","That works","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:51 PM","Thank you","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:51 PM","If it did not work, you could restart your VM (via menu), that would obviously kill any process.","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:52 PM","Thanks again. I'm embarrassed to say I didn't even look to reboot the VM","",""
"654185948501901312","clarxino#1917","29-Jan-20 11:52 PM","What kind of system admin am I?","",""
"234679095378706433","Blauelf#6622","29-Jan-20 11:53 PM","`Ctrl`+`Z` suspends a process. `fg` brings it into foreground. `bg` has it continue in the background, detached from input (not sure how to get it back into foreground, but I'm sure there are ways, I know such stuff because I made mistakes...)","","😆 (1)"
"654185948501901312","clarxino#1917","29-Jan-20 11:54 PM","Oh crap. Lunch break is over. I have to get back to my real job. Thank you for the help!","",""
"174850178384134145","L.S.#6002","30-Jan-20 08:27 AM","1. what's the difference between using `file = open(<file>, ""r"")` and `with open(<file>, ""r"") as file:`?","",""
"174850178384134145","L.S.#6002","30-Jan-20 08:27 AM","2. Do I still have to explicitly close `file` when I'm done using it, or will Python do that automatically for me?","",""
"174850178384134145","L.S.#6002","30-Jan-20 08:29 AM","3. Which exit function should I get into the habit of using, `exit()`, or `sys.exit()`?","",""
"174850178384134145","L.S.#6002","30-Jan-20 08:30 AM","I'm a bit confused by answers on stackoverflow","",""
"234679095378706433","Blauelf#6622","30-Jan-20 08:57 AM","`with` would close the file automatically. This even works if something inside raises an exception. Basically a `try`/`finally`.","","👍 (1)"
"189367162568179722","Reptuce#2196","30-Jan-20 09:05 AM","Hi, running into an issue where it seems like check50 is timing out, can't seem to find the bottleneck, would someone mind taking a look?","",""
"189367162568179722","Reptuce#2196","30-Jan-20 09:06 AM","All the results are correct, it's just a bit slow...","",""
"189367162568179722","Reptuce#2196","30-Jan-20 09:22 AM","`||# Iterate through DNA
            for i in range(1, len(row1)):
                occurance = 0
                for c in seqreader:
                    n = 1

                    while row1[i]*n in seqreader:
                        n += 1
                    if (n - 1) > occurance:
                        occurance = n - 1
                counter.append(occurance)

            # Check if no match
            match = False
            for row in dbreader:
                for c in range(len(counter)):

                    # row itteration
                    if int(row[c+1]) != int(counter[c]):
                        break
                    elif c == (len(counter)-1):
                        print(row[0])
                        match = True
                        break

            # if no match
            if match == False:
                print(""No match"")`||","",""
"654185948501901312","clarxino#1917","30-Jan-20 11:48 AM","So I'm now able to test one STR. How did you pull in the whole row? I'm using csv.reader","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 09:08 AM","well that's the million dollar question isn't it","",""
"234679095378706433","Blauelf#6622","31-Jan-20 09:53 AM","The reader is an iterator, so you can have a `for row in reader:` loop (after getting the first row containing the STRs with `next`). Or do you mean how you would compare a whole row at once? Lists or tuples support the equals operator for element-wise comparison, but if you can't use that, you could use `all` with a generator expression.","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:24 AM","I have a strange problem: my program works correctly for the small database and the smaller .txts, but when i use the large database it's not working","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:25 AM","when I am running through and counting the STRs this is what I get for databases/large.csv and sequences/5.txt: ```['Lavender', '22', '33', '43', '12', '26', '18', '47', '41']
['28', '33', '69', '18', '46', '36', '67', '60']```","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:28 AM","the Lavender line is Lavender's STR counts and the second line is what my STR counter is tallying. It looks like in the mismatching digits, I'm overcounting (never under) and only correct in the longest STR (`'TTTTTTCT'`), (`33`)","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:38 AM","I'm using this python function: ||`string.count(substring)` to count how many times ""substring"" appears in ""string""||","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:40 AM","Figured it out: I was counting how many times the STR appeared, not necessarily the longest consecutive string of STRs","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 11:41 AM","been working on the problem so long i forgot the instructions","","😅 (1)"
"115883119051145219","Alessio#4691","31-Jan-20 11:46 AM","I'm trying to figure out if I'm approaching the problem from the right direction or if I'm wasting time","",""
"115883119051145219","Alessio#4691","31-Jan-20 11:46 AM","Does it make sense to create a dictionary made of the consecutive occurrences of the STRs","",""
"115883119051145219","Alessio#4691","31-Jan-20 11:47 AM","And compare it with the list of dictionaries that you receive from dictreader?","",""
"115883119051145219","Alessio#4691","31-Jan-20 11:48 AM","For example the dictionary first sequence would be:
{'AGATC': 4, 'AATG': 1, 'TATC': 5}","",""
"115883119051145219","Alessio#4691","31-Jan-20 11:48 AM","If you're using the small database at least","",""
"324522780252962816","Sinergy#7605","31-Jan-20 12:40 PM","yeah that sounds good.  As you said, the STRs to check will be different depending on the database, so you need to get the values you will be using as keys somehow","",""
"598396476426682368","Hypnic Jerk#8235","31-Jan-20 12:45 PM","finally got this, on to SQL! feel free to @ me if you have questions about using a list approach","",""
"115883119051145219","Alessio#4691","31-Jan-20 12:49 PM","Yeah I got that figured out, I think my checks are correct too but my function to check consequential occurrences is currently giving higher values on some sequences, so there's probably a bug there","",""
"224265903892594688","Kobistaja#8407","31-Jan-20 10:43 PM","Hi. I am stuck on counting the occurrences of STRs within the string.
For some problems it works 100% however for others it is missing 1 count of a certain STR. For an example, running test with sequence/4.txt it is missing 1 AGATC, however when running with sequence/12.txt it is counting AGATC correctly, but now missing 1 of TATC.

Code:
`for key in keys:
        longest = 0
        counter = 0
        char_count = 0
        max_char = len(key)
        for c in dna:
            if c == key[char_count]:
                char_count += 1
                if char_count == max_char:
                    counter += 1
                    char_count = 0
            else:
                char_count = 0
                if counter > longest:
                    longest = counter
                counter = 0
        STRS[key] = longest`

keys is an array with STRs
dna is the text string.

Update: Got it working with another method.","",""
"654185948501901312","clarxino#1917","31-Jan-20 10:45 PM","@Blauelf could you expand on what you said in your last message?","",""
"234679095378706433","Blauelf#6622","31-Jan-20 10:52 PM","What exactly is your problem? Do you get the list of STRs from the CSV header using `next`?","",""
"324522780252962816","Sinergy#7605","01-Feb-20 03:59 AM","@Kobistaja 
If your code were trying to find the count of ""GATC""  in ""GAGATCGATC"" what would the result be?  Try running through it loop by loop.","",""
"654185948501901312","clarxino#1917","01-Feb-20 04:00 AM","@Blauelf Sorry for the delay. I'm at work. I'm trying to load the STRs to compare that substring to the rest of the string","",""
"654185948501901312","clarxino#1917","01-Feb-20 04:00 AM","I've used csv.Reader","",""
"654185948501901312","clarxino#1917","01-Feb-20 04:02 AM","@Sinergy You would find 2 instances of GATC in your string of GAGATCGATC","",""
"324522780252962816","Sinergy#7605","01-Feb-20 04:03 AM","I'm asking Kobistaja what his code would answer.  Not what the real answer is.  Edited last message for clarity.","",""
"654185948501901312","clarxino#1917","01-Feb-20 04:10 AM","Sorry! Totally didn't understand","",""
"234679095378706433","Blauelf#6622","01-Feb-20 11:17 AM","@clarxino So are you still stuck at how to get the base pair sequences from the csv reader? That would be `next`, a function that gets the next element from an iterator. Applied to your reader, that would be the next row, if you haven't done anything to your reader yet, the next row is the first row.","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 06:41 PM","Can someone help shed a bit of light on an issue I am having?","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 06:42 PM","The result for the txt.file 17 is ""Harry"", according to the assignment. But I am unable to match the first dna-string. I get 50 instead of 46, which is Harry's number of the first string.","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 06:50 PM","The full sequencestring is saved in ""sequencestring"".
The dnafile contains the CSVfile, and I am accessing the dna strings in first row, then searching for them in the sequence string.
It works fine for 1-4, but the later one gives incorrect results, and I can't even produce the right result by calculating manually... 

```
for i in range(len(dnafile[0])-1):
    dnasnippet = dnafile[0][i+1]

    sampleresult = sequencestring.count(dnasnippet)
    print(str(dnasnippet), "" // "", str(sampleresult))
    sampleresults.append(sampleresult)

```","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 06:53 PM","Here is output from the textfile 5 check from the assignment:
```
AGATC  //  28
TTTTTTCT  // 33
AATG  // 69
TCTAG  // 18
GATA  // 46
TATC  // 36
GAAA  //  67
TCTG  //  60
```
The match is supposed to be Lavender, but the numbers are wildly off. This is Lavenders numbers:
```
22
33
43
12
26
18
47
41
```","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 07:01 PM","I just manually went through the list in 5.txt and there is 28 encounters of AGATC, so definitely not a match for Lavenders 22 encounters in the csv file...","",""
"662015941785157654","Dalsnin#3322","01-Feb-20 07:21 PM","Okay, I found the bug. It is consecutive times....","",""
"189367162568179722","Reptuce#2196","03-Feb-20 07:35 PM","Is there a way I could simplify this?

||for row in csvreader:
    for c in range(counterlen):

        # row itteration
        if int(row[c+1]) != int(counter[c]):
            break
        elif c == (counterlen)-1:
            print(row[0])
            match = True
            break||","",""
"189367162568179722","Reptuce#2196","03-Feb-20 07:37 PM","from what I can gather, it iterates unnecessarily and causes a large performance drop.","",""
"234679095378706433","Blauelf#6622","03-Feb-20 10:38 PM","Performance should be fine.
I would maybe turn the `elif` to the `if` into an `else` to the inner `for`. Python loops can have an `else` that runs only if you did not `break` out of the loop.
Also, the inner loop could be written in a more compact way using `all` and a generator expression.","",""
"189367162568179722","Reptuce#2196","03-Feb-20 11:51 PM","@Blauelf Thanks, will look into it. Reason why I'm looking at performance is because check50 is not getting an output fast enough. (5.txt to 21.txt take too long to complete)","",""
"234679095378706433","Blauelf#6622","04-Feb-20 12:24 AM","That's unlikely due to this part.","",""
"234679095378706433","Blauelf#6622","04-Feb-20 12:25 AM","I think it's more likely due to more sequences being tested.","",""
"189367162568179722","Reptuce#2196","04-Feb-20 08:04 AM","@Blauelf That makes sense, when I added timeit, and ran 1.txt it printed Bob about 50+ times. Elapsed time was: 0.0013 if that helps at all","",""
"229486398074388482","P-oppy#5652","04-Feb-20 08:10 AM","Using a generator would be really neat","",""
"236287924734394368","chriso#1172","04-Feb-20 08:30 AM","Hey guys in the pset6 example it says when you run ||python dna.py databases/small.csv sequences/3.txt || you should get no match
I am getting a match on Bob. When I open the 3.txt file and run it through regex101.com it does show there to be a run of 5 TATC STR's which matches Bob's and Charlies in the small.csv file. Is there an extra step I'm missing?","",""
"236287924734394368","chriso#1172","04-Feb-20 08:31 AM","So basically the end result is {'AGATC': 3, 'AATG': 3, 'TATC': 5}
I'm only checking 'TATC': 5 which is the longest","",""
"393854278764068875","curiouskiwi#1671","04-Feb-20 08:31 AM","you must match *all* the STRs","",""
"236287924734394368","chriso#1172","04-Feb-20 08:31 AM","ohh ok","",""
"236287924734394368","chriso#1172","04-Feb-20 08:31 AM","ty","",""
"654185948501901312","clarxino#1917","06-Feb-20 11:53 AM","I figured out how to pass one of the STRs into my loop to check for consecutive occurrences. But I'm not sure how to pass in the rest of them","",""
"654185948501901312","clarxino#1917","06-Feb-20 11:53 AM","Can I paste my code somehwere?","",""
"285408475457126400","Mendax#3549","06-Feb-20 12:34 PM","hi guys, just absolutely stuck on even starting this problem set","",""
"285408475457126400","Mendax#3549","06-Feb-20 12:34 PM","all i can do is make sure the argc entered in correct","",""
"285408475457126400","Mendax#3549","06-Feb-20 12:34 PM","and not sure how to move on from there","",""
"285408475457126400","Mendax#3549","06-Feb-20 12:34 PM","could anyone give me some pointers?","",""
"236287924734394368","chriso#1172","06-Feb-20 01:10 PM","Hey man I would just watch the walkthroughs again, and probably the shorts/Lects. 
But after taking the arguments you need to use the csv import to open the files.","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:19 PM","yea I've tried doing that","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:19 PM","and so far i still dont quite understand how the read function works","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:20 PM","I've read online about how the reader function works","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:21 PM","","https://cdn.discordapp.com/attachments/637500246087434252/674952694791798805/Screenshot_2020-02-06_at_8.20.50_PM.png",""
"285408475457126400","Mendax#3549","06-Feb-20 02:21 PM","but then I dont understand what how the function is reading things into","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:21 PM","we're supposed to read things from the file into memory","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:21 PM","but im not sure how to do that","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:21 PM","😩","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:25 PM","i was thinking of opening the DNA sequences using just reader to put them into a list","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:26 PM","then have dictread open the databases","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:45 PM","@Mendax I am not sure I understand what your challenge is. Can you elaborate a bit? Perhaps I could be of help then (I already completed the DNA exercise)","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:46 PM","aahhh hi @Dalsnin  thanks for replying","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:46 PM","errrrr well im basically stuck on opening the files","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:46 PM","Helping is a good way of reinforcing knowledge, so I am helping you and myself at the same time 🙂","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:46 PM","Which of the files are you stuck on?","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:47 PM","so far, I've been able to open the sequence txt using the following, and I've already implemented a succesful STR_counter","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:47 PM","however, I'm not really sure how to open the database file into a format I want to work with","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:48 PM","Okay, so the CSV is basically an excel, just with the difference of "","" or similiar marking when a cell stops and when a cell starts","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:48 PM","Does that make sense?","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:48 PM","okay yes","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:49 PM","So what the picture is saying above, is basically to read the file row by row.","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:49 PM","uh huh","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:49 PM","But to know when a cell starts/ends, you need to provide it with some info on how to recognize that","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:49 PM","ok","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:49 PM","the last bit I think is done automatically though, as it seems to default to some standard settings","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:50 PM","right right","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:51 PM","So the ""for row in reader"" is basically iterating through the file","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:51 PM","i see","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:51 PM","so its iterating per row?","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:51 PM","if i wanted to index that data into a dictionary","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:52 PM","how might i do that?","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:53 PM","Just a second (looking at my own notes 🙂 )","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:53 PM","ok ahah thanks","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:54 PM","https://docs.python.org/3/library/csv.html","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:54 PM","The documentation","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:54 PM","Specifically:

```
csv.reader(csvfile, dialect='excel', **fmtparams)

Return a reader object which will iterate over lines in the given csvfile.
```","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:57 PM","So for example (code from your picture earlier, with a slightly changed text):

```
with open('innovators.csv', 'r') as file:
    file_with_rows = csv.reader(file)
```

So now you have all the rows in the 'file_with_rows', and can now iterate through them:

```
for row in file_with_rows
  print(row)
```","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 02:58 PM","Does that make sense?","",""
"285408475457126400","Mendax#3549","06-Feb-20 02:59 PM","i kinda understand?","",""
"324522780252962816","Sinergy#7605","06-Feb-20 02:59 PM","(Just for clarity, you need to call the for loop within the ""with open"".  with open() as file: will close the file as soon as you go back to unindented)","","😮 (1)"
"662015941785157654","Dalsnin#3322","06-Feb-20 02:59 PM","Also, the value returned in each row is:

```
Each row read from the csv file is returned as a list of strings.
```","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:00 PM","what I'm getting is the difference here that the reader object is named file_with_rows right?","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:00 PM","ooooooohhhhh","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:00 PM","i see...","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:01 PM","ahhhh....","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:01 PM","so just to take the above example again","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:02 PM","","https://cdn.discordapp.com/attachments/637500246087434252/674963085248823337/Screenshot_2020-02-06_at_9.02.09_PM.png",""
"285408475457126400","Mendax#3549","06-Feb-20 03:02 PM","if i used csv.reader on this csv file","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:03 PM","each row would become a list, each containing values seperated by commas","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:03 PM","ahhhhhhh","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:03 PM","I am not sure if it becomes a list or a long string which you have to cut","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:03 PM","Can't remember 100%, long time ago. But try to print it and see","","❤️ (1)"
"324522780252962816","Sinergy#7605","06-Feb-20 03:05 PM","using ""for row in reader"", it kind of acts like a list.  But it's not a list.  It's still just reading from the file.  You can put it into a list each time it's reading a row if you want.","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:06 PM","yea thats exactly what i want to do","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:06 PM","Basically, instead of print() you can also just use 
```
list.append(row)
```","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:06 PM","Just to elaborate on @Sinergys comment.","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:06 PM","riighht...","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:07 PM","and obviously i would have to decalre an empty list beforehand","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:07 PM","list.append(row) takes the 'list' and adds the 'row' to it as a new entry (ie. if the list is 10 entries long, it will be 11 entries long after, with 'row' being the 11th entry)","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:07 PM","and how it append into the list with the for loop","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:07 PM","Yes, you need to declare an empty list first","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:07 PM","riigghhhtt","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:07 PM","and the ""row"" will be a single element","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:07 PM","is that right?","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:07 PM","Yes, though it can be anything","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:08 PM","Even another list!","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:08 PM","aahhhhh so i can create nested lists with this","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:08 PM","i see","",""
"324522780252962816","Sinergy#7605","06-Feb-20 03:08 PM","there's another thing that's useful with this problem","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:09 PM","For example:
```
list[0][1] = 0
```
Here you assign 0 to the list[1] inside list[0]","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:09 PM","aaahhhhhhh","",""
"324522780252962816","Sinergy#7605","06-Feb-20 03:09 PM","if you use 
variable = reader.next() 
and you are using just the normal csv reader, not the dictreader, then you will read in the header row.  That will also preserve the place you are reading.  So if you use
for row in reader after that, it will start in the first data row","","😮 (1)"
"285408475457126400","Mendax#3549","06-Feb-20 03:09 PM","very much like double array in C","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:10 PM","I wouldnt know about the double array. I am doing the pset5 at the moment 🙂","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:10 PM","@Sinergy oooo okay very interesting","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:10 PM","huh","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:11 PM","@Dalsnin 😮 you arent doing them the psets in order?","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:11 PM","I have past python experience, so it was a lot easier for me. So when I got stuck on spet4, I took a leap to python and back 🙂","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:11 PM","oooooohhhh i see","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:12 PM","i did them in order, learnt C first","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:12 PM","so am having a lot of difficulty moving from C to python","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:13 PM","@Sinergy so with reader.next() I can actually skip the header row and start exactly from the names and numbers","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:13 PM","I think that's what you meant?","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:13 PM","I've built some simple stuff in python, GUI and the like, but was very ineffecient. So going through the C psets is very helpful for better understanding various things in python as well.","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:13 PM","hmmmmm yea","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:13 PM","C is so much lower level","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:13 PM","but Python is much easier","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:13 PM","@Mendax If you get header row, you can just remove it with list[0].pop","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:14 PM","It removes the [] entry from the list","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:14 PM","ooohhhhhhh","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:14 PM","https://www.programiz.com/python-programming/methods/list/pop","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:14 PM","ahhh right","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:14 PM","alright thanks guys for now","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:15 PM","Good luck","",""
"662015941785157654","Dalsnin#3322","06-Feb-20 03:15 PM","!","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:15 PM","will try implementing it and see what happens","",""
"285408475457126400","Mendax#3549","06-Feb-20 03:15 PM","(Y)","",""
"234679095378706433","Blauelf#6622","06-Feb-20 03:43 PM","I prefer slicing the list over pop, as it returns a (shallow) copy. Especially if your list to slice is still in use, like with a DictReader's `fieldnames`..","",""
"324522780252962816","Sinergy#7605","06-Feb-20 04:08 PM","@Mendax yeah you can use it to skip the header row.  alternatively, you can set another variable to the header row, and use that to work out what your STRs are.","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:02 AM","hey guys, just a question that I couldnt undersatnd while doing the problem","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:02 AM","I've finsihed the problem and submitted it","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:03 AM","but I ran into a list index out of range problem while doing the problem and could'nt get my head around it","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:15 AM","here's a simple version of the code","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:15 AM","I understand that error comes from trying to iterate past the list","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:16 AM","but doesnt the while loop execute code only when the expression is true?
I thought the if loop would be sufficient to break j iterating out of the list","",""
"285408475457126400","Mendax#3549","07-Feb-20 11:18 AM","","https://cdn.discordapp.com/attachments/637500246087434252/675269213207789568/Screenshot_2020-02-07_at_5.18.35_PM.png",""
"285408475457126400","Mendax#3549","07-Feb-20 11:37 AM","funnily enough if i switch the ordering of the increment operation with the if conditional the problem goes away.... why?","https://cdn.discordapp.com/attachments/637500246087434252/675274018433138699/Screenshot_2020-02-07_at_5.36.39_PM.png",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:23 PM","Ah","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:23 PM","I can tell you why","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:33 PM","You have to remember that len(list) evaluates to a 'normal' number. Ie. a list with 2 entries evaluates to 2. However, a list with 2 entries only goes to 1.
```
list = ['A', 'B', 'C']
len(list) == 3

BUT:
list[3] does not exist!
```","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:37 PM","So:
```
Iteration 1: J = 0, len(list) = 8
Iteration 2: J = 1, len(list) = 8
Iteration 3: J = 2, len(list) = 8
Iteration 4: J = 3, len(list) = 8
Iteration 5: J = 4, len(list) = 8
Iteration 6: J = 5, len(list) = 8
Iteration 7: J = 6, len(list) = 8
Iteration 8: J = 7, len(list) = 8
```","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:37 PM","So within the scope of your list, it never breaks the loop. And when it reaches the 8th iteration (where it will break), it is exceeding list lenght.","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:37 PM","That is why it works correctly when you move the j incrementer up before the break loop","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:48 PM","aaahhhhhhhhhhhhi see!","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:49 PM","dang thats right","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:49 PM","just so happned that the number worked out well for the problem set","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:49 PM","so i didnt realise","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:49 PM","Stupid thing is, when you do
```
for i in range(len(list)):
print(i)
```

It actually returns 0 and 1","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:50 PM","-_-","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:50 PM","yea... i havent really gotten comforable with the use of range and for loops in python","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","C for loops are much less flexible but cleary to me","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","😩","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","*clear","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","but thanks again dalsnin","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","helped me twice now","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:51 PM","😄","",""
"662015941785157654","Dalsnin#3322","07-Feb-20 12:51 PM","No problem! Good luck with future! 🙂","",""
"285408475457126400","Mendax#3549","07-Feb-20 12:52 PM","how are you with problem set 5?","",""
"324522780252962816","Sinergy#7605","09-Feb-20 11:36 AM","you figured it out?","",""
"654185948501901312","clarxino#1917","09-Feb-20 11:36 AM","yes","",""
"324522780252962816","Sinergy#7605","09-Feb-20 11:36 AM","cool","",""
"654185948501901312","clarxino#1917","09-Feb-20 11:36 AM","Thank you","",""
"654185948501901312","clarxino#1917","09-Feb-20 11:37 AM","I was over-complicating it","",""
"324522780252962816","Sinergy#7605","09-Feb-20 11:44 AM","yeah you can just make your own variable.  Either a list or a dict.","",""
"654185948501901312","clarxino#1917","09-Feb-20 11:50 AM","I did have a question now that I've got a list of the values, how did you go about looking through the csvfile","",""
"654185948501901312","clarxino#1917","09-Feb-20 11:50 AM","?","",""
"324522780252962816","Sinergy#7605","09-Feb-20 11:54 AM","remember you can import csv, which then allows you to use csv.reader or csv.DictReader.  The differences are that:
reader will have a header row, which you will need to collect the relevant STRs from, and each row will be in the form of a list
DictReader will not have a header row because only the data rows will be returned as a dict, with keys from the header row","",""
"654185948501901312","clarxino#1917","09-Feb-20 12:15 PM","Thank you","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:11 PM","I'm kind of stuck doing the match","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:12 PM","In the loop, I can see it match per line","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:13 PM","```
for line in csvR:
  line2 = line
  line2.pop(0)
  line2 = list(map(int, line2))
  #print(line2)
  if line2 == mylist:
    print('Match')
  else:
    print('No Match')
```","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:14 PM","But I can't quite figure out how to just match outside the loop","",""
"234679095378706433","Blauelf#6622","09-Feb-20 01:28 PM","I wouldn't pop, but slice, like `line2 = line[1:]`. Or maybe `name, *line2 = line`, using tuple unpacking.","",""
"234679095378706433","Blauelf#6622","09-Feb-20 01:29 PM","What do you mean by ""just match outside the loop""?","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:30 PM","so right now, It's printing 'no match' on each line, then once it gets to the line it corresponds with, it prints 'match', then continues with 'no match' until the end of the loop","",""
"234679095378706433","Blauelf#6622","09-Feb-20 01:32 PM","You can use like
```Python
for ...:
    if ...:
        print('Match')
        break
else:
    print('No Match')
```","",""
"234679095378706433","Blauelf#6622","09-Feb-20 01:32 PM","The `else` clause of a `for` loop runs after the loop, but only if you did not `break`.","",""
"234679095378706433","Blauelf#6622","09-Feb-20 01:38 PM","One alternative could be adding a flag variable that indicates whether you found something. I just like that Python syntax of `for`..`else`.","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:44 PM","Thanks again! Finished the problem","",""
"654185948501901312","clarxino#1917","09-Feb-20 01:44 PM","21/21 and .98 on style.","",""
"234679095378706433","Blauelf#6622","09-Feb-20 02:46 PM","`style50` supports python files, too.","",""
"654185948501901312","clarxino#1917","09-Feb-20 09:21 PM","Yeah. It was pretty messy before I used style50. I can try tidying up again but I’m ok with that","",""
"654185948501901312","clarxino#1917","09-Feb-20 09:22 PM","I really appreciate the help from you. Turns out it was always a few words.","",""
"620721524730757120","mariazaharin#7511","10-Feb-20 12:39 AM","Could I get some help with the following part of my code?

# strs is the list of the highest number of each STR

for row in reader:
        for dna in strs:
            if strs[dna] == int(row[dna]):

So strs[dna] is the correct integer that needs to be compared with the each row from the csv file. I don't know how I managed to get to here and get stuck here... but it's getting late and I'd appreciate some light on this","",""
"234679095378706433","Blauelf#6622","10-Feb-20 01:01 AM","So you are using a DictReader?","",""
"234679095378706433","Blauelf#6622","10-Feb-20 01:06 AM","On a match, you could increment some counter to check later. I might instead just `break` on `!=` and do something in the loop's `else:` path (https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops), or turn this inner loop into an `all` with a generator expression. Python has so many awesome features.","",""
"620721524730757120","mariazaharin#7511","10-Feb-20 12:25 PM","I dont use the dictreader but only reader. And this is the error I get: TypeError: list indices must be integers or slices, not str","",""
"234679095378706433","Blauelf#6622","10-Feb-20 03:54 PM","Where do you store the list of sequences?","",""
"234679095378706433","Blauelf#6622","10-Feb-20 03:55 PM","Iterate that one, so you get both index and sequence.","",""
"620721524730757120","mariazaharin#7511","10-Feb-20 03:59 PM","The problem was elsewhere and I think I fixed it. Now will try to fix everything else and test it","",""
"620721524730757120","mariazaharin#7511","10-Feb-20 05:13 PM","It works with the small groups but not with the big ones. The problem is that my index stops iterating after the 4th STR. Which is really strange... Could I post my code here?","",""
"533017081319391242","Stanisloth#4572","10-Feb-20 11:17 PM","Was wondering if anyone can help point out the error in my sequence counter. When using the sequences from larger databases I get small errors by 1-2 counts.   ||`# for each str, compute the longest run of consecutive repeats in the dna sequence
seqlen = len(sequence)
typedict = {}
# loop for each str type
for type in strtype:

    #dictionary to store type and longest repetition
    typedict[type] = 0

    #variables to count str repetitions
    counter = 0
    HC = 0

    #length of str type
    typelen = len(type)

# print(typedict)********

    # sequence splice variables
    i = 0
    j = typelen

    # loop thru sequence
    for c in sequence:

        while sequence [i:j] == type:
            counter += 1
            i += typelen
            j += typelen

        #increase incrementors
        i += 1
        j += 1

        # counter checker
        if counter > HC:
            HC = counter
            counter = 0
            typedict[type] = str(HC)

print(typedict)||`","",""
"533017081319391242","Stanisloth#4572","10-Feb-20 11:32 PM","never mind, found out that I forget to keep resetting my counter","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:03 AM","@Stanisloth For a code block, write it like
\|\|\`\`\`Python
print(""Hello {}"".format(""world""))
\`\`\`\|\|
becomes
||```Python
print(""Hello {}"".format(""world""))
```||
(the \|\| are for the spoiler, the triple backticks for code block the ""Python"" for syntax highlighting)","",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:03 AM","spoilers don't work on code blocks 😦","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:04 AM","That's... odd. They used to work. Maybe they work on the mobile client only?","",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:04 AM","seems that way","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:05 AM","They do work on the mobile client.","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:05 AM","That's the first thing that would work better on the mobile client.","",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:05 AM","but not in desktop","https://cdn.discordapp.com/attachments/637500246087434252/676549320249442324/Screen_Shot_2020-02-11_at_11.06.18_AM.png",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:06 AM","on mobile, though, the code block is not formatted","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:06 AM","Oh - you mean those two collide?","",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:06 AM","","https://cdn.discordapp.com/attachments/637500246087434252/676549624231755817/image0.png",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:07 AM","Pretty much possible that the syntax highlighting does not like the spoiler, or the other way around.
||```
without syntax highlighting
```||","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:08 AM","Not working on desktop 😦","",""
"393854278764068875","curiouskiwi#1671","11-Feb-20 12:08 AM","||`single line spoiler`||","",""
"234679095378706433","Blauelf#6622","11-Feb-20 12:10 AM","Making the inline spoiler have multiple lines looks odd. I want that feature of spoiler code blocks on desktop :P
(not a paying discord customer, though)","",""
"376187384376852481","YoYoO#2555","13-Feb-20 02:56 PM","@Blauelf @Sanath","",""
"361235692019384323","Sanath#7244","13-Feb-20 02:58 PM","Haven't done this pset and my python is very rusty sorry","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:13 PM","I would replace the inner for loop with a while. Increment i by sequence length on match, and by 1 on mismatch.","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:14 PM","Most importantly: Set a default of 0.","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:32 PM","Could be like
```Python
if Matches.get(SRTs[i]) == row[i + 1]:
```","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:34 PM","Ok, this is a default of `None`...
Also, you might overwrite the maximum length. Use some check before assigning.","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:37 PM","Doesn't work :/","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:39 PM","Is the content of `Matches` correct?","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:40 PM","@Blauelf Yeah look below at the terminal. That is the DNA of Lavender.","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:40 PM","(the example given in the checker on the website)","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:40 PM","Matches perfectly","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:41 PM","Here","https://cdn.discordapp.com/attachments/637500246087434252/677524781565739048/11.PNG",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:42 PM","Oh, one detail: `int(row[i+1])` might work. Those are strings.","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:45 PM","This what happens if I print out [row+1]","",""
"376187384376852481","YoYoO#2555","13-Feb-20 04:45 PM","It looks like [row+1] is not 1 value... but rather a whole column of values.","",""
"234679095378706433","Blauelf#6622","13-Feb-20 04:47 PM","Looks as expected. Prints all the first numbers.","",""
"234679095378706433","Blauelf#6622","13-Feb-20 05:37 PM","Each row is a list. You insert them into another list.","",""
"234679095378706433","Blauelf#6622","13-Feb-20 05:37 PM","Break lets you insert only one, so there's no second element in the list.","",""
"376187384376852481","YoYoO#2555","13-Feb-20 05:42 PM","@Blauelf I got it to work. Thanks.","",""
"567509736463794186","lexi#9144","14-Feb-20 05:56 AM","Hi! I am struggling with the list(map(int, row[1:])) function that I saw earlier. I am seeing ""unhashable type: 'slice'"" when I try to run a function that tries to find a match using: ""if maxstr == list(map(int,row[1:])):"" where maxstr is the max STR sequences of the .txt file selected. Thanks!!","",""
"234679095378706433","Blauelf#6622","14-Feb-20 08:49 AM","Are you comparing two lists here? Do both lists contain integers only?","",""
"567509736463794186","lexi#9144","14-Feb-20 04:52 PM","Yes I am trying! I had thought they contained ints only","",""
"567509736463794186","lexi#9144","14-Feb-20 04:53 PM","Would I be able to just put the (int) function around these lists to convert them to ints?","",""
"234679095378706433","Blauelf#6622","14-Feb-20 05:10 PM","Map would do that element-wise, and wrapping it in a `list` would convert the result to list again.","",""
"567509736463794186","lexi#9144","14-Feb-20 05:13 PM","Hmm","",""
"567509736463794186","lexi#9144","14-Feb-20 05:13 PM","Ok","",""
"567509736463794186","lexi#9144","14-Feb-20 05:14 PM","So maybe it’s better to iterate for each row, and then for each element in the newly created STR list","",""
"567509736463794186","lexi#9144","14-Feb-20 05:15 PM","And to compare int(database+1) == int(Maxstr)","",""
"234679095378706433","Blauelf#6622","14-Feb-20 05:27 PM","What is maxstr? Is it really a list of integers representing the maximum number of contiguous repetitions each?","",""
"567509736463794186","lexi#9144","14-Feb-20 05:35 PM","Yeah I think so","",""
"567509736463794186","lexi#9144","14-Feb-20 05:35 PM","I designated maxstr{}","",""
"567509736463794186","lexi#9144","14-Feb-20 05:36 PM","And then created a counter to count maximum substrings and added that counter to maxstr[i]","",""
"567509736463794186","lexi#9144","14-Feb-20 05:36 PM","So I think maxstr is a list of integers that are derived from counters that represent the maximum contiguous repetitions","",""
"234679095378706433","Blauelf#6622","14-Feb-20 10:07 PM","So `type(maxstr)` says `<class 'list'>`? And `type(maxstr[0])` says `<class 'int'>`?","",""
"567509736463794186","lexi#9144","14-Feb-20 11:04 PM","Oh interesting","",""
"567509736463794186","lexi#9144","14-Feb-20 11:04 PM","Now it returns ""name 'maxstr' is not defined""","",""
"219913920842956801","nutcase13#4668","15-Feb-20 04:24 PM","Hello, my code seems to work correctly for the small database and I pass those tests correctly, but for the large database it's always a couple off and hence i don't pass those tests, anyone else had similar issues?","",""
"219913920842956801","nutcase13#4668","15-Feb-20 04:28 PM","when i work on the large dataset, the counts mess up a bit, so the counts for each STR is always +-2/3 from the count it should be, do we have to account for STR overlap or something?","",""
"219913920842956801","nutcase13#4668","15-Feb-20 04:32 PM","nvm i've just realised it says consecutive times XD","",""
"167593654452617216","Cellico#2608","16-Feb-20 05:37 PM","learning python is so painful after getting used to coding in C","",""
"167593654452617216","Cellico#2608","16-Feb-20 05:38 PM","the flexibility it offers makes me undecided on which way should be my goto","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:02 PM","anyone here to help?","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:02 PM","my code works for all the small database cases","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:03 PM","but it doesn't work for the large database cases","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:03 PM","not sure why","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:03 PM","i didn't hardcode the SRTs into it","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:04 PM","https://pastebin.com/tuQKgEax","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:06 PM","i found the problem but i don't know what's causing it","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:07 PM","my function i created called checkSRT which checks for the SRT in the sequence provided and returns the highest number of consecutive repeated times the SRT appears in the sequence","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:07 PM","it works fine for the small databases","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:08 PM","but it gives some wrong values for the large databases","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:09 PM","only thing i can think of is that somehow the size of the database is affecting my results","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:09 PM","despite me not hardcoding any of that in my code","",""
"567509736463794186","lexi#9144","16-Feb-20 08:31 PM","I am still having a lot of trouble with the last step of this problem set. I now have two variables: integerlistofSTRS and truelist","",""
"567509736463794186","lexi#9144","16-Feb-20 08:31 PM","with open(argv[1],""r"") as fulldatabase:
        next(fulldatabase)
        reader = csv.reader(fulldatabase)
        truelist = [cols[1:] for cols in reader]

        integerlistofSTRs = list(maxstr.values())
        print(integerlistofSTRs)


        new_truelist = [int(i) for i in truelist]
        print(new_list)","",""
"567509736463794186","lexi#9144","16-Feb-20 08:31 PM","the problem is that integerlistofstrs is truly a list of integers: ""[37, 40, 10, 6, 5, 10, 28, 8]""","",""
"567509736463794186","lexi#9144","16-Feb-20 08:31 PM","and truelist is strings I believe: ""['15', '49', '38', '5', '14', '44', '14', '12'], ['31', '21', '41', '28', '30', '9', '36', '44'], ['9', '13', '8', '26', '15', '25', '41', '39'], ['37', '40', '10', '6', '5', '10', '28', '8'], ['37', '47', '10', '23', '5', '48', '28', '23'], ['25', '38', '45', '49', '39', '18', '42', '30'], ['46', '49', '48', '29', '15', '5', '28', '40']""","",""
"567509736463794186","lexi#9144","16-Feb-20 08:32 PM","This function:  (new_truelist = [int(i) for i in truelist]
        print(new_list)) is not working and returns error: int() argument must be a string, a bytes-like object or a number, not 'list'","",""
"567509736463794186","lexi#9144","16-Feb-20 08:32 PM","How can I convert this list ['15', '49', '38', '5', '14', '44', '14', '12'], ['31', '21', '41', '28', '30', '9', '36', '44'], ['9', '13', '8', '26', '15', '25', '41', '39'], to integers and then compare to the maxstr string that is in the .txt file?","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:33 PM","try using int()?","",""
"567509736463794186","lexi#9144","16-Feb-20 08:34 PM","Yeah","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:34 PM","oh wait","",""
"567509736463794186","lexi#9144","16-Feb-20 08:34 PM","I use int and","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:34 PM","oh","",""
"567509736463794186","lexi#9144","16-Feb-20 08:34 PM","it says int() argument must be a string, a bytes-like object or a number, not 'list'","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:34 PM","i dont understand fully what you're saying because i can't rly see the full code","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:34 PM","ohh","",""
"567509736463794186","lexi#9144","16-Feb-20 08:34 PM","Yeah 😦","",""
"567509736463794186","lexi#9144","16-Feb-20 08:35 PM","Basically I am at the point where I have two lists","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:35 PM","have u tried","",""
"567509736463794186","lexi#9144","16-Feb-20 08:35 PM","1 list is the str maximum counts for the .txt file in integers, which is good","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:35 PM","list(int(maxstr.values()))","",""
"567509736463794186","lexi#9144","16-Feb-20 08:36 PM","Yeah it returns: AttributeError: 'list' object has no attribute 'values'","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:36 PM","hmm","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:36 PM","where is this","",""
"567509736463794186","lexi#9144","16-Feb-20 08:36 PM","I'm using .reader not .DictReader","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:36 PM","maxstr.values()","",""
"167593654452617216","Cellico#2608","16-Feb-20 08:36 PM","coming from","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:10 PM","anyone please help me, my code works for small database but not the large database. https://pastebin.com/tuQKgEax","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:11 PM","the checkSRT function i made returns wrong values when i use the large database","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:11 PM","not sure why","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:14 PM","yes please","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:15 PM","are you counting all occurrences of a STR or only the consecutive ones?  For example, `""ABCABBABCABCABBXYZ""`  should have 2 for ""ABC"" and 1 for ""ABB""","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:15 PM","only consecutive i believe","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:16 PM","based on how i wrote checkSRT","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:16 PM","so if you run seq5.txt, what do you get for all the values?","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:16 PM","hold on","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:16 PM","let me add a print function","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:17 PM","['Highest repeated value', '28', '33', '69', '18', '46', '36', '67', '60']","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:17 PM","I'd expect ```
[22, 33, 43, 12, 26, 18, 47, 41]```","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:17 PM","yeah","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:17 PM","it works completely fine for the small databases tho","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:17 PM","thats why im puzzled","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:17 PM","you are counting all occurrences","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:18 PM","oh","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:18 PM","am i?","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:18 PM","here's my print that shows total number versus max occurrence","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:18 PM","```attempts: 28 AGATC 22
attempts: 33 TTTTTTCT 33
attempts: 69 AATG 43
attempts: 18 TCTAG 12
attempts: 46 GATA 26
attempts: 36 TATC 18
attempts: 67 GAAA 47
attempts: 60 TCTG 41```  for my code","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:18 PM","ah","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:18 PM","hmm","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:18 PM","create a file with this example I gave `""ABCABBABCABCABBXYZ""`","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:19 PM","and you can debug with it so you can see what you are doing","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:19 PM","look for ABC","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","ah thanks","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","now that i know im counting all occurences","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","actually","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","i think i can just find the faulty code","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","by following the logic","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:19 PM","ok","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","without using the debugger","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:19 PM","good luck","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:19 PM","thanks","",""
"393854278764068875","curiouskiwi#1671","16-Feb-20 09:20 PM","(I didn't mean using the debugger... I mean debug as in follow the logic :))","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:20 PM","ah","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:20 PM","lol","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:20 PM","ok","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:40 PM","ah","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:40 PM","my recursion wasnt working","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:41 PM","cause i had a weak understanding of function and calling them","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:41 PM","sigh","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:41 PM","and the fact that i looped my count without resetting it led me to pass all the small database checks by luck","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:41 PM","and made me think my recursion actually worked","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:48 PM","woo got it","",""
"167593654452617216","Cellico#2608","16-Feb-20 09:48 PM","thanks a lot curiouskiwi","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:03 AM","the syntax in python is killing me","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:03 AM","","https://cdn.discordapp.com/attachments/637500246087434252/678768377296060416/unknown.png",""
"558678172372041764","Aimer#8978","17-Feb-20 03:03 AM","does anybody know why they not print as what i would expected?","",""
"324522780252962816","Sinergy#7605","17-Feb-20 03:13 AM","read changes where the cursor in the file is.  By calling it again, you are reading something else.  The second time you are at end of file, so read returns nothing @Aimer .  I am uncertain offhand how much of the file .read() reads, but since sequence has just one line of data, I know that this much is true.","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 03:16 AM","```python
import csv
sequence = open(""sequences/1.txt"")
print(len(sequence.read()))
sequence.seek(0)
length = len(sequence.read())
print(f""{length}"")```  you have to seek back to the start if you want to read in again.  Much like in C with fread and fseek","","😄 (1)"
"558678172372041764","Aimer#8978","17-Feb-20 03:22 AM","to asses the char in python.","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:22 AM","do they have another syntactic sugar","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:22 AM","where in C u compare using strcmp","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 03:25 AM","are comparing strings or chars?","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 03:25 AM","you can just use `==`","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:34 AM","does this mean if i want to iterate over the sequence","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:34 AM","i need to continuously call f.seek(0)","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:34 AM","?","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 03:42 AM","no, I'd expect that you would read the entire file into a variable and then use that.  Doing lots of file i/o is slow and unnecessary","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 03:44 AM","in your example on line 10, I'd say something like `db = database.read()`  rather than just printing it.  and now you have `db` to use.","",""
"558678172372041764","Aimer#8978","17-Feb-20 03:56 AM","yeah that seems more reasonable","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:11 AM","","https://cdn.discordapp.com/attachments/637500246087434252/678785483630706708/unknown.png",""
"558678172372041764","Aimer#8978","17-Feb-20 04:11 AM","","https://cdn.discordapp.com/attachments/637500246087434252/678785598441390091/unknown.png",""
"558678172372041764","Aimer#8978","17-Feb-20 04:11 AM","AGAT","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:11 AM","or AGATC","",""
"188578948937023488","Indra Reddy#2687","17-Feb-20 04:13 AM","@Aimer Here AGAT was referencing to example in pset page.","","😅 (1)"
"558678172372041764","Aimer#8978","17-Feb-20 04:14 AM","so its AGATC right","",""
"188578948937023488","Indra Reddy#2687","17-Feb-20 04:15 AM","It can be any sequence TBH!","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:15 AM","well im comparing a char","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:16 AM","as my head is still with C and when i do that, only the AGAT yield the wrong result","",""
"188578948937023488","Indra Reddy#2687","17-Feb-20 04:16 AM","As far as this pset goes, AGAT isn't given in database file","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:41 AM","ok seems that my coding is applicable for small database","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:42 AM","need to learn strcmp then","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 04:47 AM","there is no strcmp","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 04:47 AM","just use `==`","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 04:48 AM","```python
if ""Aimer"" == ""Aimer"":
    print(""same"")```","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:52 AM","ahh thats nice","",""
"558678172372041764","Aimer#8978","17-Feb-20 04:52 AM","simpler than C","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 06:22 AM","because, just like in C where fwrite returns the number of chars that were written, `write` in python does the same.","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 06:23 AM","if you open ""result.txt"" (in the editor) do you see ""hello""?","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 06:23 AM","why are you writing to files?  There's no need to do that for this problem.","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 06:28 AM","yes, but everyone will assume that if you are asking questions in a specific problem channel, they are problem related.","",""
"558678172372041764","Aimer#8978","17-Feb-20 06:29 AM","ahh i see. i delete it now","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 06:35 AM","it's fine to ask questions.  Perhaps just mention that you are just trying out different things to learn so no one is confused.","",""
"558678172372041764","Aimer#8978","17-Feb-20 09:11 AM","why is it not printing the latter","https://cdn.discordapp.com/attachments/637500246087434252/678861160962850816/unknown.png",""
"234679095378706433","Blauelf#6622","17-Feb-20 09:17 AM","@Aimer Your generator expression in `sum` exhausted the iterator, it basically read the whole file.
If you want to iterate it multiple times, consider turning it into a list.","",""
"558678172372041764","Aimer#8978","17-Feb-20 09:23 AM","nver knew that u can do such thing to the iterator","",""
"558678172372041764","Aimer#8978","17-Feb-20 09:23 AM","thanks for the enlightenment","",""
"234679095378706433","Blauelf#6622","17-Feb-20 09:27 AM","A generator is paused code. It will continue to work once you ask it for more data. In this case, it would read a line each time someone does the equivalent of `next(db)`. While your generator expression is consumed by `sum`, it also consumes `db`, and later you are at file end, nothing more to read.","",""
"393854278764068875","curiouskiwi#1671","17-Feb-20 09:35 AM","ie, if you change line 125 to `db = list(csv.reader(csvfile))` then it will work as you expect","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:31 AM","","https://cdn.discordapp.com/attachments/637500246087434252/678896294609158183/unknown.png",""
"558678172372041764","Aimer#8978","17-Feb-20 11:31 AM","i cant change a list into an int","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:31 AM","is there anyway for me to do so","",""
"234679095378706433","Blauelf#6622","17-Feb-20 11:45 AM","`int` function would do. For a single number.","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:48 AM","i would type in like this","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:48 AM","","https://cdn.discordapp.com/attachments/637500246087434252/678900668399878144/unknown.png",""
"558678172372041764","Aimer#8978","17-Feb-20 11:49 AM","all the way to 7th row","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:49 AM","since it is python","",""
"558678172372041764","Aimer#8978","17-Feb-20 11:49 AM","i thought there's a way for this","",""
"234679095378706433","Blauelf#6622","17-Feb-20 11:58 AM","Why not use `all` with a generator expression?","",""
"558678172372041764","Aimer#8978","17-Feb-20 12:15 PM","can i pm you @Blauelf as i would post an actual solution if i share my code","",""
"234679095378706433","Blauelf#6622","17-Feb-20 12:17 PM","I'm on mobile, so no large code dump, please.","",""
"558678172372041764","Aimer#8978","17-Feb-20 12:17 PM","ahaha sure","",""
"442101867057643520","R0ARK#5128","18-Feb-20 12:58 AM","Does anyone know why in the official python manual, the page on csv.reader says you can open a file without specifying the permission mode? For example, why is it not 

With open(filename, 'r', newline='') as f:

How does the interpreter know whether we'll be writing or reading before calling method csv.reader or csv.writer?","",""
"234679095378706433","Blauelf#6622","18-Feb-20 01:00 AM","Python's parameter can have default values, in case you don't pass a value for that one. I would assume `'r'` is simply the default value.","",""
"234679095378706433","Blauelf#6622","18-Feb-20 01:01 AM","https://docs.python.org/3/library/functions.html#open mentions a whole bunch of those default values.
`open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)`","",""
"503232590900232212","AznBadBoy#2865","19-Feb-20 09:01 AM","Hi, when I run the test for sequence 3, it returns Charlie and when I look inside 3.txt I do see the STR. but how come the answer is suppose to be ""No match"" any suggestions on where I should look.","",""
"393854278764068875","curiouskiwi#1671","19-Feb-20 09:14 AM","do all the STRs match?","",""
"339078915886678017","Mo#6561","19-Feb-20 11:02 PM","hey guys , i am trying to create a function that find the longest repeat for a STR","",""
"339078915886678017","Mo#6561","19-Feb-20 11:02 PM","and i still get some logical errors","",""
"339078915886678017","Mo#6561","19-Feb-20 11:02 PM","can someone help me with my code","",""
"339078915886678017","Mo#6561","19-Feb-20 11:02 PM","https://pastebin.com/skR4iaMN","",""
"339078915886678017","Mo#6561","19-Feb-20 11:03 PM","its kinda bad function but i trying to fix it","",""
"234679095378706433","Blauelf#6622","19-Feb-20 11:06 PM","@Mo The range iterator does not care about your `i`. If you increment it inside the loop, that has no effect.","",""
"339078915886678017","Mo#6561","19-Feb-20 11:08 PM","oh it is not like the c lang","",""
"234679095378706433","Blauelf#6622","19-Feb-20 11:08 PM","Next iteration, it will get the next number from the iterator, overwriting your incremented value.","",""
"234679095378706433","Blauelf#6622","19-Feb-20 11:08 PM","You could build a C-like loop with `while`.","",""
"339078915886678017","Mo#6561","19-Feb-20 11:09 PM","i will try it with while","",""
"234679095378706433","Blauelf#6622","19-Feb-20 11:10 PM","I did that in one of my versions (might be the one I submitted). Increment by length on match and update streak+longest, or increment by 1 and reset streak.","",""
"339078915886678017","Mo#6561","19-Feb-20 11:12 PM","yeah i'll remake it","",""
"339078915886678017","Mo#6561","19-Feb-20 11:12 PM","thx tho","",""
"503232590900232212","AznBadBoy#2865","20-Feb-20 08:53 AM","@curiouskiwi I think I know what my problem is after scrolling up to see what others have said.  My script uses .find and just searches for lets say AA and finds it, but in reality the dna sequence is AAAA.  Since string was found, it comes back and says found but it should say no since the actual sequence is longer.","",""
"675841295176171550","essam#9028","21-Feb-20 09:56 PM","Hello
I'm facing an issue in completing this pset, as described in pset page:
Run your program as python dna.py databases/small.csv sequences/3.txt. Your program should output No match.
But my code returning ""Charlie""
and if you open this files manually ""databases/small.csv and sequences/3.txt"" you will find that SRT ""AGATC"" repeated 3 times and ""Charlie"" has 3 of the same SRT in the ""databases/small.csv""..

So what I'm missing here?","",""
"676463066942144512","drail159#6376","21-Feb-20 10:03 PM","But the longest aatg sequence in 3.txt is 3 and for charlie it is two, so charlie doesn't match.","",""
"676463066942144512","drail159#6376","21-Feb-20 10:04 PM","All three have to match in order to return a match.","",""
"676463066942144512","drail159#6376","21-Feb-20 10:07 PM","the longest sequences for these are `agatc - 3, aatg - 3, tatc - 5` so you should look for an entry that says `name 3, 3, 5`","",""
"675841295176171550","essam#9028","21-Feb-20 10:19 PM","Thanks a lot 👍","",""
"676463066942144512","drail159#6376","21-Feb-20 10:42 PM","Np","",""
"234679095378706433","Blauelf#6622","22-Feb-20 03:47 PM","I feel this sentence is missing a verb.","",""
"553340374836314142","Holder#7561","22-Feb-20 07:12 PM","why cant i do this?","",""
"553340374836314142","Holder#7561","22-Feb-20 07:12 PM","# Open sequences
with open(seqence_file, 'r') as seq:
    sreader = csv.reader(seq)
    for i in range(len(sreader)):
        print(sreader[i])","",""
"553340374836314142","Holder#7561","22-Feb-20 07:13 PM","i want to reader the csv file as a string so that i can go thro it and check if the sequences are there","",""
"339078915886678017","Mo#6561","22-Feb-20 08:58 PM","have anybody used the find function ?","",""
"339078915886678017","Mo#6561","22-Feb-20 08:58 PM","length =len(readerseq)
    st = readerseq.find(""AATG"", 0, length)
    rep = 1
    i = st
    while i < length:
        j = i+4
        NextLoc = 0
        if j < length:
            NextLoc = readerseq.find(""AATG"", j, length)
 
        if NextLoc == i+4:
            rep +=1
            lo =longest(rep)
        else:
           rep=1
 
        if NextLoc == 0:
            break
        if NextLoc < length and NextLoc != i :
            i = NextLoc
        else:
            break
 
        print(NextLoc)
 
    print(lo)
# ------------------------------------------------------ end of main","",""
"339078915886678017","Mo#6561","22-Feb-20 08:59 PM","why the next loc return  to 0","",""
"234679095378706433","Blauelf#6622","22-Feb-20 09:05 PM","@Holder The reader has no length. You could turn it list, like `csv_as_list = list(sreader)`. It isn't required to read any line twice, but if that makes things work your way...","",""
"553340374836314142","Holder#7561","22-Feb-20 09:06 PM","with open(seqence_file, 'r') as seq:
        sreader = csv.reader(seq)
        for row in sreader:
            seq_str = str(row)
            AGATC = 0
        for l in range(len(seq_str)):
            while seq_str[l] == 'A' and seq_str[l+1] == 'G' and seq_str[l+2] == 'A' and seq_str[l+3] == 'T' and seq_str[l+4] == 'C':
                l = l + 4
                AGATC += 1
        print(AGATC)","",""
"553340374836314142","Holder#7561","22-Feb-20 09:07 PM","i ended up doing this. basically works the same","",""
"553340374836314142","Holder#7561","22-Feb-20 09:07 PM","idealy i will make a count for each sequence and then introduce them into a dict","",""
"553340374836314142","Holder#7561","22-Feb-20 09:10 PM","any hint on how i can only count the longest sequence @Blauelf ?","",""
"234679095378706433","Blauelf#6622","22-Feb-20 09:16 PM","Umm... Do you use the csv reader on the sequence text file rather than the csv file?","",""
"553340374836314142","Holder#7561","22-Feb-20 09:18 PM","yes","",""
"553340374836314142","Holder#7561","22-Feb-20 09:18 PM","why?","",""
"553340374836314142","Holder#7561","22-Feb-20 09:21 PM","shouldn't i? because if i do i can create a dict with the same keys as the data file","",""
"234679095378706433","Blauelf#6622","22-Feb-20 09:27 PM","You don't need a csv reader for reading a single line.","",""
"553340374836314142","Holder#7561","22-Feb-20 09:27 PM","yes but i can still use it","",""
"553340374836314142","Holder#7561","22-Feb-20 09:28 PM","and i dont know how to use that many funtions so i figured it would be easer","",""
"553340374836314142","Holder#7561","22-Feb-20 09:28 PM","even tho they must have a read() funtion","",""
"553340374836314142","Holder#7561","22-Feb-20 11:33 PM","so im trying to compare to dicts now, having a hell of a hard time","",""
"234679095378706433","Blauelf#6622","22-Feb-20 11:33 PM","Wouldn't `seq_str = seq.read()` give about the same string?","",""
"553340374836314142","Holder#7561","22-Feb-20 11:34 PM","yes but one will allow me use it like an array meaning seq_str[i]","",""
"553340374836314142","Holder#7561","22-Feb-20 11:34 PM","dreader = csv.DictReader(data)
    for row in dreader:
        if row == seq_dict:
            print(row)
        else:
            print('error')","",""
"553340374836314142","Holder#7561","22-Feb-20 11:35 PM","i cant seem to get it to compare the values in the dict i created","",""
"553340374836314142","Holder#7561","22-Feb-20 11:36 PM","print(row) prints the 'name' the dict i created not the one from the csv file","",""
"234679095378706433","Blauelf#6622","22-Feb-20 11:44 PM","@Mo How do you handle `find` not finding the string? `find` would return -1 in that case, so maybe you should set `NextLoc` to -1 instead of 0, and check for that later. Also not sure how `NextLoc` could be `i`. And would you be able to tell apart 0 and 1 repetition?","",""
"234679095378706433","Blauelf#6622","22-Feb-20 11:46 PM","@Holder That is always meant to fail, as your `seq_dict` does not contain the name.
You could have your own comparison, for example `all` with a generator expression.
Is `seq_dict` storing the numbers as integers? Because `row` is containing strings, you would have to convert one side to the other.","",""
"553340374836314142","Holder#7561","23-Feb-20 02:05 AM","understood","",""
"553340374836314142","Holder#7561","23-Feb-20 02:06 AM","and do you know why this only works for the small databases and not for the large ones @Blauelf ?","",""
"553340374836314142","Holder#7561","23-Feb-20 02:06 AM","suspect = 0
        # Compare for small
        if dna_file == 'databases/small.csv':
            if row['AGATC'] == seq_dict['AGATC'] and row['AATG'] == seq_dict['AATG'] and  row['TATC'] == seq_dict['TATC']:
                print(row['name'])
                suspect = 1

        # Compare for large
        elif dna_file == 'databases/large.csv':
            if row['AGATC'] == seq_dict['AGATC'] and row['TTTTTTCT'] == seq_dict['TTTTTTCT'] and  row['AATG'] == seq_dict['AATG'] and row['TCTAG'] == seq_dict['TCTAG'] and row['GATA'] == seq_dict['GATA'] and  row['TATC'] == seq_dict['TATC'] and row['GAAA'] == seq_dict['GAAA'] and row['TCTG'] == seq_dict['TCTG']:
                print(row['name'])
                suspect = 1

    # Print no match if no suspect
        elif suspect == 0:
            print('No Match')","",""
"234679095378706433","Blauelf#6622","23-Feb-20 02:07 AM","Do not write any sequences into your code. Use the sequences from the CSV file instead.","",""
"553340374836314142","Holder#7561","23-Feb-20 02:08 AM","what do you mean?","",""
"553340374836314142","Holder#7561","23-Feb-20 02:09 AM","i know there are faster and easer ways to do this but i dont know them so i did this. and it kind of works","",""
"234679095378706433","Blauelf#6622","23-Feb-20 02:11 AM","Use `dreader.fieldnames[1:]` or something like that for a list of sequences to search for, that's what the problem specification wants you to do.","",""
"553340374836314142","Holder#7561","23-Feb-20 02:12 AM","oh, did not know that was a requirement","",""
"234679095378706433","Blauelf#6622","23-Feb-20 02:12 AM","It should work for any csv file, right?","",""
"553340374836314142","Holder#7561","23-Feb-20 02:14 AM","sound logical when you say it","",""
"553340374836314142","Holder#7561","23-Feb-20 02:15 AM","i will look into dreader.fieldnames[1:]","",""
"234679095378706433","Blauelf#6622","23-Feb-20 02:15 AM","> * For each of the STRs (*from the first line of the CSV file*), your program should compute the longest run of consecutive repeats of the STR in the DNA sequence to identify.","","😅 (1)"
"234679095378706433","Blauelf#6622","23-Feb-20 02:16 AM","The `[1:]` is a slice without the first element, as that would be `'name'`.","",""
"553340374836314142","Holder#7561","23-Feb-20 02:17 AM","makes sense i will get working on that right away","",""
"362579195349565443","bettsy#7406","23-Feb-20 08:07 AM","This passes check50 when I submitted, but I feel its a bit c like. Can anyone provide any hints on how to make it more 'python like' - here are the loops that do the bulk:","",""
"362579195349565443","bettsy#7406","23-Feb-20 08:07 AM","||it = 0
for strs in sequences:
    temp = 0
    count = 0
    # index to look for substring
    i = 0
    j = len(strs)
    # loop each char and find a match for strs at [i:j]
    for c in dna_sequence:
        while dna_sequence[i:j] == strs:
            temp += 1
            i += len(strs)
            j += len(strs)
            # temp is now higher than previous count, update the list
            if temp > count:
                count = temp
                vals[it] += 1
        temp = 0
        i += 1
        j += 1

    it += 1

# loop through the db, and see if we have a match on a row
for i in range(1, len(db)):
    match = 0
    for j in range(1, len(vals) + 1):
        if int(db[i][j]) == vals[j - 1]:  # we are matching
            match += 1
            if match == len(vals):
                # We have a winner so now print the name
                print(db[i][0])
                quit()
print(""No match"")||","",""
"234679095378706433","Blauelf#6622","23-Feb-20 12:19 PM","@bettsy In detection, your inner for loop should probably be a while loop. Last iterations are doing nothing but increment `i` and `j`.
You could have your outer for loop `for it, strs in enumerate(sequences):` and no longer have to iterate `it` manually with the loop. Alternatively, you could make `vals` a `dict` and use `strs` as the key directly. Would maybe match the style of a `DictReader`-using version.
I see a bunch of redundancy, like `count` is always kept at the same value as `vals[it]`, and the `+= 1` could be a `= temp`, which would also work after that innermost loop, reducing the number of checks.
`for i in range(1, len(db)):` would be more pythonic if you wrote for example `for row in db[1:]:`, with `row` replacing `db[i]`.
Counting the matches could be `all` with a generator expression, like `if all(something for j in range(len(vals))):`, returning `True` if the expression was truthy for all the `j`.
Python's `for` loops can have an `else` clause, run only if you do not `break` out of the loop, not sure how common it is, I like it. This could be appled to the inner `for` (if you don't want to use `all`) and the outer `for`.","",""
"362579195349565443","bettsy#7406","23-Feb-20 12:39 PM","@Blauelf Thanks!","",""
"362579195349565443","bettsy#7406","24-Feb-20 04:05 AM","I worked out a much more python way for the matching:","",""
"362579195349565443","bettsy#7406","24-Feb-20 04:05 AM","||for row in db[1:]:
    test = []

    for n in row[1:]:
        test.append(int(n))

    if test[:] == vals[:]:
        print(row[name])
        quit()

print(""No match"")||","",""
"234679095378706433","Blauelf#6622","24-Feb-20 04:25 AM","You could do ||`test = [int(n) for n in row[1:]]`||, and I don't think you would need those `[:]` in the comparison, those create a shallow copy, which should compare the same.","",""
"614024394905354240","bobbydilano#2184","24-Feb-20 08:23 AM","Can someone help me? I'm confused with my implementation thus far.

||`import sys
import csv

if len(sys.argv) != 3:
    print(""Enter valid names of CSV and Text files!"")
else:
    # dictionary of STR and count
    str_count = dict()

    # open dna db csv file, read contents into memory
    with open(sys.argv[1], ""r"") as dna_file:
        # dna_db = dna_file.read()
        reader = csv.reader(dna_file)
        for row in reader:
            strs = row[1:]
            break
        print(strs)

        # open dna sequence text, read contents into memory
        with open(sys.argv[2], ""r"") as seqtext:
            seq = seqtext.read()
            count = 0
            # for each STR, compute longest run of consecutive repeats in dna sequence
            for d in strs:
                for s in range(len(seq)):
                    chunk = seq[s:s+5]
                    if d == chunk:
                        count += 1
                print(""Count: "", count)

    # compare STR counts against each row in CSV file `||","",""
"234679095378706433","Blauelf#6622","24-Feb-20 09:13 AM","@bobbydilano Your spoiler does not work, because it is inside the code.
The `for` loop with the `break` looks odd. I would use `strs = next(reader)[1:]` instead. `next` gets the next item from an iterator.
Your ""count"" would have to be reset for the current STR, and also store the longest run (highest number of consecutive repetitions) for each STR. Also, the length would not always be 5. And you would have to find some way to check for those consecutive runs only, not simply count.","",""
"614024394905354240","bobbydilano#2184","24-Feb-20 10:09 AM","> @bobbydilano Your spoiler does not work, because it is inside the code.
> The `for` loop with the `break` looks odd. I would use `strs = next(reader)[1:]` instead. `next` gets the next item from an iterator.
> Your ""count"" would have to be reset for the current STR, and also store the longest run (highest number of consecutive repetitions) for each STR. Also, the length would not always be 5. And you would have to find some way to check for those consecutive runs only, not simply count.
@Blauelf how do I check for consecutive repetitions?","",""
"234679095378706433","Blauelf#6622","24-Feb-20 10:12 AM","I've done multiple ways. One would be to keep a position counter. In a while loop, I would check if the substring at the current position matches the STR. If so, increment the position by STR length (to look for the next match right behind the current one), increment the counter by 1, update the longest count for this STR if applicable. If a mismatch, increment the position by 1 (the next run might start at any position), reset the counter to 0.","",""
"234679095378706433","Blauelf#6622","24-Feb-20 10:13 AM","Due to how `for` loops work in Python, I couldn't use that one to iterate the string with varying steps.","",""
"614024394905354240","bobbydilano#2184","24-Feb-20 10:16 AM","@Blauelf hmm alright will give it a crack. Thanks!","",""
"678377940030980120","ziller#6589","26-Feb-20 01:21 AM","aw ffs","",""
"678377940030980120","ziller#6589","26-Feb-20 01:21 AM","have tried so many methods to try and get this to work...","",""
"678377940030980120","ziller#6589","26-Feb-20 01:22 AM","many times redesigning the way info from both files was stored in the programme before comparing them","",""
"678377940030980120","ziller#6589","26-Feb-20 01:22 AM","at no point did I notice that in the version read from the csv, all the numbers were strings","",""
"678377940030980120","ziller#6589","26-Feb-20 01:22 AM","and in the version created by counting repetitions of basepairs, all the numbers were well, numbers...","",""
"678377940030980120","ziller#6589","26-Feb-20 01:23 AM","and in fact each one of my versions essentially works (apart from that bug)","",""
"678377940030980120","ziller#6589","26-Feb-20 01:23 AM","picard facepalm . gif","",""
"678377940030980120","ziller#6589","26-Feb-20 01:35 AM","","https://cdn.discordapp.com/attachments/637500246087434252/682007710966874112/image0.png",""
"678377940030980120","ziller#6589","26-Feb-20 01:35 AM","finally","",""
"678377940030980120","ziller#6589","26-Feb-20 01:35 AM","I think i made more of a meal of this than I needed to","",""
"678377940030980120","ziller#6589","26-Feb-20 01:46 AM","I’m not sure how to judge the pythonicality of a given solution... but I was mildly pleased with my way of finding the maximum repetition of a specific substring in the sequence...","",""
"678377940030980120","ziller#6589","26-Feb-20 01:47 AM","||`while str * n in sequence: n+= 1`||","",""
"234679095378706433","Blauelf#6622","26-Feb-20 08:53 AM","I would see the problem not in whether it's pythonic, but in runtime. It's O(n²), while other solutions are O(n).
But... my first version did exactly that 😛","",""
"678377940030980120","ziller#6589","26-Feb-20 10:04 AM","well naturally all thoughts of optimisation have completely gone out the window now I’m not writing c 😛","",""
"254622976710803456","bec#7264","27-Feb-20 07:51 AM","csv = csv.reader(filecsv)
UnboundLocalError: local variable 'csv' referenced before assignment","",""
"254622976710803456","bec#7264","27-Feb-20 07:52 AM","","https://cdn.discordapp.com/attachments/637500246087434252/682465002292248576/SPOILER_unknown.png",""
"254622976710803456","bec#7264","27-Feb-20 07:52 AM","any idea what's up with line 14","",""
"254622976710803456","bec#7264","27-Feb-20 07:52 AM","odd thing is it was working before when I tested out if the loading was working","",""
"254622976710803456","bec#7264","27-Feb-20 07:53 AM","it printed out the csv successfully","",""
"234679095378706433","Blauelf#6622","27-Feb-20 08:05 AM","@bec Name confusion, as you use `csv` as both the module and a variable. With the assignment, you declare a local variable of that name, but then you access `csv.reader`, which for the local variable cannot exist yet.
Rename your local variable `csv` to some non-conflicting name.","",""
"254622976710803456","bec#7264","27-Feb-20 08:13 AM","oh ok thanks","",""
"614024394905354240","bobbydilano#2184","27-Feb-20 10:01 AM","@Blauelf can you tell me what's wrong with my code...the count variable isn't updating as expected...

||`import sys
import csv

if len(sys.argv) != 3:
    print(""Enter valid names of CSV and Text files!"")
else:
    # dictionary of STR and count
    str_count = dict()

    # open dna db csv file, read contents into memory
    with open(sys.argv[1], ""r"") as dna_file:
        # dna_db = dna_file.read()
        reader = csv.reader(dna_file)
        strs = next(reader)[1:]
        print(strs)

        # open dna sequence text, read contents into memory
        with open(sys.argv[2], ""r"") as seqtext:
            seq = seqtext.read()
            # for each STR, compute longest run of consecutive repeats in dna sequence

            count = 0
            j = 0

            for d in strs:
                while j <= len(seq):
                    if d == seq[j:j + len(d)]:
                        count += 1
                        j += len(d)
                    else:
                        count = 0
                        j += 1
                print(f""STR: {d} Count: {count}"")
`||","",""
"614024394905354240","bobbydilano#2184","27-Feb-20 10:34 AM","am I on the right track?","",""
"234679095378706433","Blauelf#6622","27-Feb-20 11:26 AM","`count` and `j` should probably be initialised in the `for d in strs:` loop. You don't save the largest value of `count`.","",""
"395585988857954304","siafa#4740","27-Feb-20 02:00 PM","This is the one of the ugliest code I've written","",""
"395585988857954304","siafa#4740","27-Feb-20 02:14 PM","Anyone care to have a second look?","",""
"614024394905354240","bobbydilano#2184","27-Feb-20 04:27 PM","@Blauelf can't seem to figure out what's wrong. Pls help
||`
    max_count = dict()
    str_count = dict()

    with open(sys.argv[1], ""r"") as dna_file:
        # dna_db = dna_file.read()
        reader = csv.reader(dna_file)

        # get strs
        strs = next(reader)[1:]
        print(""STRs in DB:"", strs)

        names = []

        # get names

        # store str counts in str_count dictionary
        for index, row in enumerate(reader):
            str_count[index] = row[1:]
            names.append(row[0])
        print(""str_count:"", str_count)
        print(""Names:"", names)

        # open dna sequence text, read contents into memory
        with open(sys.argv[2], ""r"") as seqtext:
            seq = seqtext.read()

            # for each STR, compute longest run of consecutive repeats in dna sequence
            for d in strs:
                count = 0
                j = 0
                while j <= len(seq):
                    chunk = seq[j:j + len(d)]
                    if d == chunk:
                        count += 1
                        max_count[d] = count
                        j += len(d)
                    else:
                        count = 0
                        j += 1
            print(max_count)

            # compare STR counts against each row in CSV file
            max_count_list = list(max_count.values())
            print(""max_count_list:"", max_count_list)

            str_count_list = list(str_count.values())

            # convert string items to int items
            for i in range(len(str_count_list)):
                for j in range(len(str_count_list[i])):
                    str_count_list[i][j] = (int(str_count_list[i][j]))
            print(""str_count_list:"", str_count_list)

            for i in range(len(str_count_list)):
                if max_count_list == str_count_list[i]:
                    print(names[i])
                    break
            print(""No match"")`
||","",""
"254622976710803456","bec#7264","27-Feb-20 04:35 PM","lad I don't get the last part, after you print the dudes name and then break wouldn't you print ""no match after""","",""
"614024394905354240","bobbydilano#2184","27-Feb-20 04:36 PM","yeh sorry, just realised. That's a mistake.","",""
"254622976710803456","bec#7264","27-Feb-20 04:37 PM","anyways lad have you tried checking your program in parts","",""
"254622976710803456","bec#7264","27-Feb-20 04:37 PM","ie seeing if the load funcs work","",""
"254622976710803456","bec#7264","27-Feb-20 04:37 PM","then if the count funcs work","",""
"254622976710803456","bec#7264","27-Feb-20 04:38 PM","my count function is very 🥴  for some reason, it accurately counts AATG and TATC but always returns 1 for AGAT","",""
"254622976710803456","bec#7264","27-Feb-20 04:39 PM","there's a loop for the function so it should be implementing the same code for it as it's for AATG and TATC","",""
"254622976710803456","bec#7264","27-Feb-20 04:39 PM","🥴","",""
"254622976710803456","bec#7264","27-Feb-20 04:51 PM","I just checked large.csv apparently there are other STR's in large looks like you gotta make a seperate function just to make a list with all the things you wanna check with","",""
"254622976710803456","bec#7264","27-Feb-20 04:52 PM","it outputs the first count as 1 but ouputs the other 2 correctly","https://cdn.discordapp.com/attachments/637500246087434252/682601002683203617/SPOILER_unknown.png",""
"234679095378706433","Blauelf#6622","27-Feb-20 06:47 PM","@bec Definitely check out substring/slice syntax in Python. If your sequences are strings, not lists, you can do things like `if txt[j:j+len(STR[i])] == STR[i]:`","",""
"234679095378706433","Blauelf#6622","27-Feb-20 06:50 PM","Also, don't hard-code sequences. `next(csvfl)` would read the next line, so you could do `STR = next(csvfl)[1:]`, discarding the first entry of `'name'`","",""
"254622976710803456","bec#7264","27-Feb-20 06:52 PM","yeah lad the hard coding is temporary, will fix it up with dynamic STRs once it checks properly","",""
"254622976710803456","bec#7264","27-Feb-20 09:46 PM","anyways any ideas why my function is only screwing up at the first iteration of the loop","",""
"614024394905354240","bobbydilano#2184","28-Feb-20 03:56 AM","@Blauelf  any suggestions for my code?","",""
"234679095378706433","Blauelf#6622","28-Feb-20 08:10 AM","@bobbydilano Good morning. Which part seems wrong? In which way is it misbehaving, errors, wrong counts, printing wrong people?
Shouldn't `max_count[d] = count` be something like `max_count[d] = max(max_count[d], count)`? Would require a `max_count[d] = 0` inside your `for d in strs:` loop.
I find it somewhat odd to store the names and sequences separately, and in a dict with a numeric index. And I would recommend learning about list comprehensions like ||`str_count_list = [[int(elem) for elem in row] for row in str_count.values()]`||.
Did you know that Python's loops can have an `else`? Would be executed if the loop ends without `break`, so it would be the natural choice for your `print(""No match"")`.","",""
"254622976710803456","bec#7264","28-Feb-20 10:24 AM","I don't understand why maxval should return 4 for AGAT when there aren't 4 continuos AGATS","",""
"254622976710803456","bec#7264","28-Feb-20 10:25 AM","in sequence1 it's ""AGATCAGATCAGATCAGAT""","",""
"254622976710803456","bec#7264","28-Feb-20 10:26 AM","there are Cs between AGATs but the answer on the documentation for sequence1 is bob who's maxvals are [4,1,5] when the maxvals for the sequence are [1,1,5]","",""
"254622976710803456","bec#7264","28-Feb-20 10:27 AM","I don't get it","",""
"234679095378706433","Blauelf#6622","28-Feb-20 10:41 AM","Maybe you are not resetting your counter properly?","",""
"254622976710803456","bec#7264","28-Feb-20 10:43 AM","that should effect more than the first maximum value then","",""
"254622976710803456","bec#7264","28-Feb-20 10:44 AM","it resets after every finding the maxval from one alphabet of the txt","",""
"254622976710803456","bec#7264","28-Feb-20 10:45 AM","I still don't get it I looked through the TXT file and I ran a pen test for my code it seems like the maxvals for the sequence should be [1,1,5] as the longest continuous chain of AGAT I could find was AGAT","",""
"254622976710803456","bec#7264","28-Feb-20 10:45 AM","i used control f btw","",""
"324522780252962816","Sinergy#7605","28-Feb-20 02:58 PM","@bec you are using the wrong STRs.  The first STR in the small database is AGATC (a STR five units long).  I had a look at your code, it looks good.  I would suggest that instead of calling whatever your trans function is, just increment count when j == 3 AND you have a matched character.  Well, it wouldn't be as simple as j == 3 anymore I guess.","",""
"254622976710803456","bec#7264","28-Feb-20 03:26 PM","thanks a lot lad you really helped me out","",""
"254622976710803456","bec#7264","28-Feb-20 03:27 PM","all my trans function does is ""yo = math.floor(yo/4)""","",""
"254622976710803456","bec#7264","28-Feb-20 03:27 PM","I could add it to the main function but it would be uggly","",""
"324522780252962816","Sinergy#7605","28-Feb-20 03:28 PM","yvw","",""
"234679095378706433","Blauelf#6622","28-Feb-20 07:24 PM","@bec Check out `//` integer division operator.","",""
"254622976710803456","bec#7264","28-Feb-20 07:35 PM","oh I thought they got rid of that in python anyways thanks for the tip","",""
"254622976710803456","bec#7264","28-Feb-20 07:35 PM","my programs been running correctly but gonna implement that just incase","",""
"234679095378706433","Blauelf#6622","28-Feb-20 07:55 PM","They had automatic integer/floating point division, but as Python is dynamically typed, it can be confusing, so they separated them into different operators with Python 3.","",""
"309931673368395778","Kankii#0367","28-Feb-20 08:01 PM","Keep returning this error: ``` Traceback (most recent call last):
  File ""dna.py"", line 27, in <module>
    for j in range(len(dna)):
TypeError: object of type 'builtin_function_or_method' has no len() ```","",""
"234679095378706433","Blauelf#6622","28-Feb-20 08:20 PM","@Kankii You forgot the () after read","",""
"309931673368395778","Kankii#0367","29-Feb-20 01:46 AM","Thanks @Blauelf","",""
"309931673368395778","Kankii#0367","29-Feb-20 01:47 AM","Man, I found this surprisingly rough, I thought python would be easier to pick up","",""
"234679095378706433","Blauelf#6622","29-Feb-20 01:48 AM","I somewhat miss the compiler errors.","",""
"324522780252962816","Sinergy#7605","29-Feb-20 02:12 AM","Haha same, I've been learning some javascript with some web dev stuff and if I'm doing it on their website instead of an IDE I've taken to putting a console.log or alert  of ""no syntax errors"" at the bottom of every .js otherwise you just have to guess where the code is broken","",""
"254622976710803456","bec#7264","29-Feb-20 08:12 AM","anyone wanna exchange code","",""
"254622976710803456","bec#7264","29-Feb-20 08:13 AM","mines done and 100% right but I just wanna see if I could've done anything more efficiently","",""
"202180238162001920","Lukas#2338","29-Feb-20 07:43 PM","@bec can we compare code?","",""
"254622976710803456","bec#7264","29-Feb-20 08:26 PM","sure lad but give me some time so I can implement the stuff that I got suggested by my previous comparisions","",""
"254622976710803456","bec#7264","29-Feb-20 08:26 PM","right about to sleep so will get it done tomorrow","",""
"614024394905354240","bobbydilano#2184","02-Mar-20 10:46 AM","@Blauelf  thanks a lot! Yup rookie mistake with the missing max function. Didn't know about the for loop and else condition! 

Code works 100% now 😃","",""
"542000840148254740","『SixthSense』#6565","05-Mar-20 09:30 AM","Is this problem solvable only with len() and s[i:j]?
Is there any other function or language feature I should know to solve this problem?","",""
"542000840148254740","『SixthSense』#6565","05-Mar-20 09:34 AM","I've successfully built a dictionary from csv file.
Now I'm stucked at finding each STR in dna sequence.","",""
"678377940030980120","ziller#6589","05-Mar-20 11:31 AM","hmmmm... I didn’t consider trying that...","",""
"678377940030980120","ziller#6589","05-Mar-20 11:32 AM","it’s been pointed out to me that my solution isn’t optimal by a long way...","",""
"678377940030980120","ziller#6589","05-Mar-20 11:32 AM","but for what it’s worth, I considered that in python if s = “ABC” , s * 2 = “ABCABC”","",""
"678377940030980120","ziller#6589","05-Mar-20 11:33 AM","you could maybe set up some loops to find the longest occurrence of a given substring","",""
"234679095378706433","Blauelf#6622","05-Mar-20 12:25 PM","That's the version I submitted first. Now going with a `str.find` approach, after doing more C-like substring approach using only len and slices.","",""
"678377940030980120","ziller#6589","05-Mar-20 02:50 PM","going back over my prior solutions and improving them with knowledge acquired later is on my todo list...","",""
"678377940030980120","ziller#6589","05-Mar-20 02:51 PM","hell... I still mean to go back and ""Finish"" my X-wing vs TIE-fighter scratch game 😛","",""
"542000840148254740","『SixthSense』#6565","05-Mar-20 03:53 PM","It would be nice that after the students passed the problem sets, they could see other students' solution. So we can learn from each other.","",""
"542000840148254740","『SixthSense』#6565","05-Mar-20 03:54 PM","Like edabit.com. Only if one submits the solution, he or she can see others solutions","","💯 (1)"
"234679095378706433","Blauelf#6622","05-Mar-20 04:20 PM","codewars.com has this feature, too.","",""
"463376795937275914","Brittney#1988","05-Mar-20 10:19 PM","Is it normal for people to feel totally lost going into this problem? I watched the walkthrough and still barely have an idea of how to start it. And I've coded programs in python before just not a ton of experience with it.","",""
"542000840148254740","『SixthSense』#6565","06-Mar-20 04:27 AM","> codewars.com has this feature, too.
@Blauelf Thank you.","",""
"603921781350334504","Chetan#8251","06-Mar-20 09:02 AM","To count number of times a STR is repeated i used split fuction. It workd fine with small database but it give incorrect values for large data base","",""
"603921781350334504","Chetan#8251","06-Mar-20 09:03 AM","```
# count each STR and update in data
for STR in STRs:
    temp = dna.split(STR)
    data.update({STR : (len(temp) - 1)})
```","",""
"603921781350334504","Chetan#8251","06-Mar-20 09:04 AM","data is the dictionary wher i store my counted values","",""
"603921781350334504","Chetan#8251","06-Mar-20 09:04 AM","please help","",""
"324522780252962816","Sinergy#7605","06-Mar-20 09:43 AM","@Chetan That would count the total number of an STR present in the sequence.  But you need to work out the longest chain of an STR in a row.
For a STR of GTA,
CAGTAGTACGTAG needs to return 2, not three.  Also I'm not sure if your method would cover the edge case where a sequence starts or ends with the STR?","",""
"603921781350334504","Chetan#8251","06-Mar-20 09:56 AM","@Sinergy it just skipped from my mind that I need to count the longest chain of str and not total number of it's occurance. Thank you","",""
"324522780252962816","Sinergy#7605","06-Mar-20 09:56 AM","good luck 😄","",""
"463376795937275914","Brittney#1988","06-Mar-20 10:24 PM","Anyone that can help me understand the ""chunking""? I don't get this instruction ""s[i:j] takes string and returns the substring from i up to not including j"" I have opened the csv file, created a list for the db and extracted the strs to a variable. I have opened the dna text file and gotten the sequence. I then looped over the strs and the seq, but my chunk is not correct and I just don't get how to implement it.","",""
"463376795937275914","Brittney#1988","06-Mar-20 10:26 PM","I found someone using `chunk = seq[j:j + len(d)]` but this confused me even more","",""
"234679095378706433","Blauelf#6622","06-Mar-20 11:23 PM","`seq[j:j+len(d)]` would be a substring starting at index `j`, to but not including `j+len(d)`. That means, a substring starting at `j` with a length of `len(d)`.","","👍 (1)"
"241631396307664897","Urwin#8936","07-Mar-20 12:25 AM","hi are we supposed to throw all these files in the same folder or figure out why our program can't read files that aren't in the same folder","",""
"234679095378706433","Blauelf#6622","07-Mar-20 12:27 AM","You can specify a path, like `path/to/database.csv`","",""
"234679095378706433","Blauelf#6622","07-Mar-20 12:28 AM","Same as the `images` directory in `filter` and the `dictionaries` directory in `speller`","",""
"463376795937275914","Brittney#1988","07-Mar-20 03:47 AM","@Blauelf I am having trouble with this code you sent someone else in here, it is not working for me, I am getting a ""match"" name and then no match too.","https://cdn.discordapp.com/attachments/637500246087434252/685664881088790530/unknown.png",""
"463376795937275914","Brittney#1988","07-Mar-20 03:51 AM","I got it to work by adding a variable, but ^ didn't work for me.","",""
"234679095378706433","Blauelf#6622","07-Mar-20 08:35 AM","You might have made a mistake with indentation. The `else` should belong to `for`. Or, you did not `break`.","",""
"324522780252962816","Sinergy#7605","07-Mar-20 09:29 AM","She's talking about you saying another time that you can have an else for a python loop to execute if there is no break ""Did you know that Python's loops can have an else? Would be executed if the loop ends without break, so it would be the natural choice for your print(""No match"").""","",""
"234679095378706433","Blauelf#6622","07-Mar-20 10:49 AM","Yes, I get that. And the code she quoted is correct, if applied correctly. So I am just guessing what could have made it not work for her.","",""
"324522780252962816","Sinergy#7605","07-Mar-20 11:40 AM","ah, sorry man.  Misunderstood","",""
"463376795937275914","Brittney#1988","07-Mar-20 03:15 PM","I have 2 for loops and I put it outside both, maybe I should have put it just inside the second one, can't remember if i tried that. I'm running into another issue now with the chunking part. Trying to figure out how to keep track of the count if there is a break in repeating srts.","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:02 PM","```c
 for j in STR[1:]:
        while i < len(data):
            if data[i:(i + len(j))] == j:
                i += len(j)
                node += 1
                temp = node
            else:
                node = 0
                i += 1
        myDict[j] = temp
        print(myDict)
```","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:02 PM","my code returns a dictionary with all str's having the same cout values","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:02 PM","same as the first one","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:02 PM","any insights as to what i might be doing wrong would be appreciated","",""
"234679095378706433","Blauelf#6622","07-Mar-20 04:06 PM","@madmoe Where is the `i = 0` between `for` and `while`?","",""
"234679095378706433","Blauelf#6622","07-Mar-20 04:07 PM","And you don't seem to check for longest run. What exactly is `temp` for?","",""
"234679095378706433","Blauelf#6622","07-Mar-20 04:07 PM","Oh, and `node = 0` is missing as well between `for` and `while`. You would likely want to initialise two or three variables there.","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:35 PM","i did that outside my loop","",""
"128701429316583425","madmoe#5613","07-Mar-20 04:35 PM","the initialisation","",""
"234679095378706433","Blauelf#6622","07-Mar-20 05:49 PM","But - shouldn't you do that once per STR?","",""
"234679095378706433","Blauelf#6622","07-Mar-20 05:49 PM","Also, the ""max"" aspect is missing from that code.","",""
"294454788093902849","Zeina#6519","07-Mar-20 06:13 PM","how should I go about reading the files into memory? using a dictionary?","",""
"234679095378706433","Blauelf#6622","07-Mar-20 06:19 PM","Whatever makes sense. I wrote a few versions, and while I prefer the dicts, comparing the arrays was a tiny bit easier.
Not that it matters if you use a comprehension instead of `map` (this is specific to my code, you wouldn't need either)","",""
"294454788093902849","Zeina#6519","07-Mar-20 06:48 PM","and how do i know which STRs to count or keep track of in the .txt file? is it based on the STRs from the csv file the program reads","",""
"294454788093902849","Zeina#6519","07-Mar-20 06:49 PM","so its different depending on which csv file i read?","",""
"128701429316583425","madmoe#5613","07-Mar-20 06:50 PM","yeah","",""
"234679095378706433","Blauelf#6622","07-Mar-20 07:26 PM","First line of the CSV (or `fieldnames` if you use the DictReader) would tell you the sequences to search for.","",""
"294454788093902849","Zeina#6519","07-Mar-20 08:19 PM","```py
f = open(sys.argv[2], ""r"")
txtfile = f.read()
strfile = [(txtfile[i:i + 1]) for i in range(0, len(txtfile), 4)]

print(strfile)
```
It outputs this:
['A', 'T', 'T', 'G', 'A', 'A', 'T', 'T', 'A', 'A', 'G', 'A', 'T', 'A', 'G', 'A', 'C', 'T', 'A', 'A', 'A', 'A', 'A', 'A', 'G', 'A', 'T', 'T', 'T', 'G', 'A', 'T', 'G', 'T', 'G', 'A', 'T', 'T', 'G', 'G', 'G', 'A', 'G']
How can I make it take 4 letters and not just one","",""
"294454788093902849","Zeina#6519","07-Mar-20 08:25 PM","oh nvm, figured it out","",""
"294454788093902849","Zeina#6519","07-Mar-20 08:25 PM","should be ``txtfile[i:i + 4]``","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:09 PM","spent the last hour looking at what you said blauelf","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:09 PM","finally made sense of it","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:10 PM","i initially had a way to calculate max but after several trials last night i moved my code about and removed it at some point and eventually forgot to put it back","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:10 PM","that wasnt the main problem however","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:10 PM","major problem was the i = 0","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:11 PM","i needed to reset i for every loop so it could start counting from the start again","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:11 PM","thank you","",""
"128701429316583425","madmoe#5613","07-Mar-20 10:11 PM","now to find a way to compare dna 😄","",""
"463376795937275914","Brittney#1988","08-Mar-20 02:51 AM","I have been banging my head against this for days now. I thought I finally had a grasp on why it wasn't passing the larger db's. I reworked my code and still running into the same issue, so any help would be appreciated. I am almost positive my problem is where I'm checking the dna against the db. For the 5th test I am getting `{'AGATC': 22, 'TTTTTTCT': 33, 'AATG': 1, 'TCTAG': 12, 'GATA': 1, 'TATC': 1, 'GAAA': 1, 'TCTG': 1}`these results, which according to curiouskiwi posting to someone else are not correct. I will post the code below.","",""
"463376795937275914","Brittney#1988","08-Mar-20 02:52 AM","||for STR in strs:
                count = 0
                temp = 0
                i = 0
                while i < len(seq):
                    while seq[i:(i + len(STR))] == STR:
                        i += len(STR)
                        count += 1
                        temp = count
                    else:
                        count = 0
                        i += 1
                max_count[STR] = temp
            print(max_count)||","",""
"202180238162001920","Lukas#2338","08-Mar-20 03:12 AM","Imagine that you're looking for the segment `AT` in the sequence `ATATATGGGGATAT`","",""
"202180238162001920","Lukas#2338","08-Mar-20 03:13 AM","your code will print 2 instead of 3","",""
"202180238162001920","Lukas#2338","08-Mar-20 03:17 AM","do you think you can figure out why?","",""
"463376795937275914","Brittney#1988","08-Mar-20 03:58 AM","I've been struggling with that for 3 days. I have searched, wrote it out, talked with others, and tried everything I can think of to figure that exact thing out. I thought adding the while loop with the `seq[i:I + len(STR)]` would fix it, but clearly it didn't.","",""
"463376795937275914","Brittney#1988","08-Mar-20 03:58 AM","I am honestly lost.","",""
"309931673368395778","Kankii#0367","08-Mar-20 04:02 AM","@Brittney Is temp the max number of repeated strings?","",""
"309931673368395778","Kankii#0367","08-Mar-20 04:03 AM","If so, shouldn't you check if count is actually higher before updating it?","",""
"463376795937275914","Brittney#1988","08-Mar-20 04:03 AM","It was just supposed to be a way to keep the number. Yeah, you are right I should be","",""
"309931673368395778","Kankii#0367","08-Mar-20 04:03 AM","You might just be updating it with a lower number and been getting lucky with the first couple of STRs.","","👍 (1)"
"463376795937275914","Brittney#1988","08-Mar-20 04:04 AM","I'll try that when I get to a computer.","",""
"309931673368395778","Kankii#0367","08-Mar-20 04:05 AM","👍","",""
"463376795937275914","Brittney#1988","08-Mar-20 02:52 PM","@Kankii I believe that fixed it, I even had that written down in my notes/pseudo code I just completely lost it. I think I had been at it too long.","",""
"463376795937275914","Brittney#1988","08-Mar-20 03:00 PM","It is still not right.","",""
"463376795937275914","Brittney#1988","08-Mar-20 03:02 PM","Oh, I think its because my print statement lol....I was about to get mad.","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:11 PM","I'm assuming we're supposed to use regex to find consecutive matches right?","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:11 PM","but how can i find only the highest number of consecutive matches","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:12 PM","any hint would be appreciated","",""
"393854278764068875","curiouskiwi#1671","08-Mar-20 09:18 PM","You could use regex but it's not expected","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:26 PM","if i want to look at substrings in the txt file to search for a certain STR, how would I know the number of letters to include in the substring
what I did initially was this:
```py
f = open(sys.argv[2], ""r"")
txtfile = f.read()
strlist = [(txtfile[i:i + 4]) for i in range(0, len(txtfile), 4)]
```
I created a list which takes 4 letters as a substring and adds it to a list","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:26 PM","But then i realized that its wrong","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:26 PM","because some STRs are 5 letters","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:28 PM","so I thought maybe it could be done with regex instead","",""
"294454788093902849","Zeina#6519","08-Mar-20 09:28 PM","but I'm not sure how else it could be done without using regex","",""
"393854278764068875","curiouskiwi#1671","08-Mar-20 09:44 PM","you can use the length of the STR instead of hardcoding 4","",""
"677215146694803458","pbrouse#8651","09-Mar-20 02:11 PM","@Zeina As curiouskiwi mentioned, instead of using something overly complicated like regex, why not just use len(STR)?

I honestly don’t remember exactly what method I used on this one, but why not iterate through the list of STRs, then best another for loop inside that to iterate over the sequence checking for instances of that STR?","",""
"677215146694803458","pbrouse#8651","09-Mar-20 02:11 PM","Nest*","",""
"294454788093902849","Zeina#6519","09-Mar-20 02:56 PM","@pbrouse Yeah thats what I did, I created two nested for loops. The outer one iterates over the STRs im looking for, and the inner one iterates over the STR sequence","",""
"294454788093902849","Zeina#6519","09-Mar-20 02:57 PM","I was just having trouble in knowing how to divide the STR sequence into substrings. Like the number of letters to include in the substring","",""
"294454788093902849","Zeina#6519","09-Mar-20 02:58 PM","Because it differs, sometimes its 4 letters and sometimes its 5 letters","",""
"294454788093902849","Zeina#6519","09-Mar-20 02:58 PM","I’ll try what curiouskiwi mentioned","",""
"294454788093902849","Zeina#6519","09-Mar-20 02:58 PM","Still haven’t tried that","",""
"677215146694803458","pbrouse#8651","09-Mar-20 03:04 PM","Now that I’m thinking about it more, what I did is inside the STR loop, I called a function to determine the index for each occurrence of the STR and stored them all in a list. I then looped over the list of indices and compared the length of the STR to the difference between one index and the next... logically this told me that these two occurrences of the STR were consecutive, and thus upped my counter.","",""
"677215146694803458","pbrouse#8651","09-Mar-20 03:05 PM","There may have been a more efficient way to do it, but this is the logic I used that worked for me","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:31 PM","Hello, I have a problem with python grammar I think, or the logic ... I feel really stupid atm but I cant understand what's wrong 😄","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:31 PM","```repetitions = 0
    highestRepetition = 0
    print(f""Calculating: {sequence}"")
    testString = ' '
    for i in range(len(dnaSequence)):
        testString = dnaSequence[i:i+len(sequence)]
        if sequence == testString:
            repetitions += 1
            print(repetitions)
            continue
        
        if repetitions > highestRepetition:
            highestRepetition = repetitions
            
        repetitions = 0


    return highestRepetition   ```","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:32 PM","if I comment out the line ""repetitions = 0"" then it counts the correct numbers of occurrences of the specific sequence in the DNA file, just not the correct highest repetition. But it reads how many there are correctly","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:32 PM","with ""repetitions = 0"" though, everytime it seems to reset it to 0. Neither repetitions nor highestRepetition goes above 1","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:33 PM","It must be something really basic and stupid that I can't see, but I can't figure it out :x","",""
"227524944672587776","Drewon#0021","09-Mar-20 08:34 PM","(Right now i'm using the logic if match >> increase by 1 and restart loop, otherwise change the high score and reset repetitions - i tried other logics but they all seem to have the same issue)","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:20 PM","Hmm, I'm not seeing right off why it would be throwing you off by setting repetitions to 0 at the end based on how you are setup. However one issue I potentially see is using continue in the first if statement... what happens if the last iteration in your loop is in fact a match? In that case it will still skip the rest of the code block, and so you'd never get to set your highest repetition if that batch of repetitions ends the sequence.","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:27 PM","true, as i said i made it with a continue just to try something new, it wasnt working the other ways anyway","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:27 PM","the biggest problem is exactly the reset to 0 :/","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:27 PM","never used python before, but I mean it seems pretty straightforward the way that code is written isnt it?","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:28 PM","Might solve both issues if you have your if statement (first one) check for a match and increment repititions. Then an elif highestRepititions < repitions, where you within that elif set highestRepetitions = repetitions, and repetitions back to zero.","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:28 PM","```    for i in range(len(dnaSequence)):
        testString = dnaSequence[i:i+len(sequence)]
        if sequence == testString:
            repetitions += 1
        else:
            if repetitions > highestRepetition:
                 highestRepetition = repetitions
            repetitions = 0

    return highestRepetition   ```","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:28 PM","like this i have the same issue for example","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:29 PM","what if you move the repetitions = 0 inside the second if (BTW you could shorten this elif: repetitions > highestRepetition instead of an if within an else)","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:30 PM","Because if it isn't a match, you will always be resetting your repetitions. So you want this inside your else/elif. Otherwise it is resetting on every loop","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:31 PM","wait","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:31 PM","the way i wrote it last, it should only reset repetitions if sequence != testString","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:31 PM","elif repetitions > highestRepitition:    is the same as else:   if repetitions > highestRepetition","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:31 PM","shouldnt it?","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:31 PM","with elif there's the problem of where to reset repetitions","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:32 PM","```    for i in range(len(dnaSequence)):
        testString = dnaSequence[i:i+len(sequence)]
        if sequence == testString:
            repetitions += 1
        elif repetitions > highestRepetition:
            highestRepetition = repetitions
            repetitions = 0```","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:32 PM","this would only reset repetitions if repetitions > highestRepetition, is that correct?","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:32 PM","well the thing is there is either a match or there isn't. It will never hit the elif if it is a match. So if it ever reaches the elif, it would mean no match, so you want your reset","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:32 PM","that is correct","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:33 PM","but then i don't want that cause i want to reset it always in case of a mismatch","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:33 PM","That's what I am saying. the elif will never be executed if the if before it is true. Which means the ONLY time the elif will run, is when there is NOT a match","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:34 PM","yeah ok","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:34 PM","What happens with your highestRepitition count with the code you posted last?","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:35 PM","it goes up to 7 (should be 22 to be correct, and there are 28 total matches in the dna file","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:36 PM","so look what happens","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:36 PM","```for i in range(len(dnaSequence)):
        testString = dnaSequence[i:i+len(sequence)]
        if sequence == testString:
            repetitions += 1
        else:
            if repetitions > highestRepetition:
                 highestRepetition = repetitions
            repetitions = 0

    return highestRepetition   ```","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:36 PM","with this one it returns 1","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:36 PM","if I comment out repetitions = 0","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:36 PM","it spits out 28, which is correct, it's the total number of matches","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:37 PM","so it's that repetitions = 0 that is somehow misplaced","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:37 PM","Right, so i think the issue is then what i mentioned before where the sequence ENDS with repititions of the STR being checked here","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:38 PM","The way I read it, repetitions = 0 should only run if sequence == testString is false","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:39 PM","I swear i'm gonna be embarassed once it turns out to be a stupid thing 😄","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:39 PM","yeah you are right. indentations were throwing me off hah","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:40 PM","The one downside of python. Those curly braces look ugly in other languages but do help with keeping track of what is inside/outside a block","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:40 PM","heh yea","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:42 PM","its either something about python that i am not aware of or i don't know","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:43 PM","gonna watch some cooking videos and come back to it again with fresh eyes 😄","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:44 PM","hah good call. hard to spot from my side since i implemented it quite differently","",""
"227524944672587776","Drewon#0021","09-Mar-20 09:46 PM","Thanks for helping anyway mate 🙂 appreciated","",""
"677215146694803458","pbrouse#8651","09-Mar-20 09:54 PM","Might be worth running debug50 to step through and see how your two variables are being incremented","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:17 PM","I got it","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:17 PM","it was extremely moronic","",""
"677215146694803458","pbrouse#8651","09-Mar-20 10:17 PM","Does it have to do with the fact that you are individually checking each character in the dna sequence? rather than skipping ahead by len(sequence) after a match is found?","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","it's because it's moving 1 letter at a time. So even if there's a match for say, AGATC, there's not gonna be another match for 5 more loops","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","yea","",""
"677215146694803458","pbrouse#8651","09-Mar-20 10:18 PM","haha yep i was just typing that as your message came through","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","i was focusing on the wrong part","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","🙂","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","well at least now i can get it to work","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:18 PM","😄","",""
"677215146694803458","pbrouse#8651","09-Mar-20 10:20 PM","Did it work for all tests now? Because I'm thinking there still needs to be another condition (or two) built into it for certain situations","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:20 PM","i just figured it out, still need to finish implementing it","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:26 PM","```i = 0
    while i < len(dnaSequence):
        testString = dnaSequence[i:i+len(sequence)]
        if sequence == testString:
            repetitions += 1
            i += len(sequence)
        else:
            if repetitions > highestRepetition:
                highestRepetition = repetitions
            repetitions = 0
            i += 1
    

    return highestRepetition   ```","",""
"227524944672587776","Drewon#0021","09-Mar-20 10:26 PM","seems to work fine. only testing with the first sequence for now but it catches the right amount for various *.txt","",""
"234679095378706433","Blauelf#6622","09-Mar-20 11:26 PM","@Drewon Move the `if repetitions > highestRepetition` part into the match path.","",""
"234679095378706433","Blauelf#6622","09-Mar-20 11:27 PM","Would make a difference if the DNA ends with the longest STR.","",""
"480302730989010954","gunomagic#2168","10-Mar-20 12:33 AM","> hello any one up","","🍉 (1)"
"480302730989010954","gunomagic#2168","10-Mar-20 12:36 AM","`with open('1.txt', 'r') as f:
    code = f.read(4)
    list = []
    while code:

        if (code == ""AGAT""):
            STR = code + f.read(1)
        elif (code == ""TTTT""):
            STR = code + f.read(4)
        elif (code == ""TCTA""):
            STR = code + f.read(1)
        elif code in (""AATG"", ""GATA"", ""TATC"", ""GAAA"", ""TCTG""):
            STR = code
        else :
          STR = code

        list.append(STR)

        code = f.read(4)`","","😩 (1)"
"480302730989010954","gunomagic#2168","10-Mar-20 12:37 AM","i dont know how people are sepreating str in sequence and inserting it in datastructure","",""
"393854278764068875","curiouskiwi#1671","10-Mar-20 12:37 AM","why are you hardcoding the STRs? Is this just for your own testing/understanding?","","🍉 (1)"
"480302730989010954","gunomagic#2168","10-Mar-20 12:38 AM","yeah I am understanding but why many are doing difrently","","😩 (1)"
"480302730989010954","gunomagic#2168","10-Mar-20 12:38 AM","differently*","","🍉 (1)"
"480302730989010954","gunomagic#2168","10-Mar-20 12:39 AM","@curiouskiwi","","💯 (1)"
"128701429316583425","madmoe#5613","10-Mar-20 02:37 PM","Well the strs are already provided to you in the csv file. All you're required to do is use them in your program.","",""
"128701429316583425","madmoe#5613","10-Mar-20 02:38 PM","i'd suggest you rethink your implementation given that the str could be different in a different iteration.","",""
"677215146694803458","pbrouse#8651","10-Mar-20 04:04 PM","@gunomagic Are you using the CSV module to access the csv file? You want to actually get the STRs from this file, rather than hard code them in.","",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:10 PM","How do you access specific values in cvs files?","",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:10 PM","Instead of the whole line?","",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:11 PM","","https://cdn.discordapp.com/attachments/637500246087434252/686999716499685445/SPOILER_dna.jpg",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:11 PM","This yields all of the lines","",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:13 PM","If I use [] notation it will yield the first value of each row","",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:14 PM","","https://cdn.discordapp.com/attachments/637500246087434252/687000512713064451/SPOILER_dna1.jpg",""
"425802339392290817","agustinvaca1111#0920","10-Mar-20 08:15 PM","How could I access Alice specifically?","",""
"676463066942144512","drail159#6376","11-Mar-20 01:56 AM","Maybe something like:
```
for line in database:
    If line[0] == ""Alice"":
        print(line)
```","","💯 (1)"
"324522780252962816","Sinergy#7605","11-Mar-20 02:03 AM","there is a method in csv called next, usually called by ```csv.next(database)``` which will return the next line as a list.  You can assign that to a variable, and the cursor will remain after the line that was returned, so if you then call ```for line in database:``` it will start on the second line i.e. your actual data points.","","👍 (2)"
"480302730989010954","gunomagic#2168","11-Mar-20 10:59 PM","Hey any one up I have a difficulty how you people are sorting strs from text file","",""
"234679095378706433","Blauelf#6622","11-Mar-20 11:00 PM","Sorting?","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:01 PM","From text file to like ACATA TTTTTTCT","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:01 PM","You get long string in txt file","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:02 PM","But we need to break it down into protein base (TTTTTTCT or GATA) right","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:03 PM","@Blauelf","",""
"234679095378706433","Blauelf#6622","11-Mar-20 11:07 PM","You have to search for occurrences of the STRs (as found in the first line of the CSV) in the sequence file, if you mean that.","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:19 PM","Yeah but how we gona find them in text file","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:20 PM","I know how to extract them from CSV but don't know how to make sequence of them in txt file","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:25 PM","@Blauelf","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:25 PM","@Sinergy","",""
"202180238162001920","Lukas#2338","11-Mar-20 11:29 PM","is the text file the one that contains a single DNA sequence?","",""
"234679095378706433","Blauelf#6622","11-Mar-20 11:32 PM","Yes. One of my versions would compare slices of that string, another version would do `str.find`, and a third uses regular expressions.","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:32 PM","Can you explain","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:33 PM","Yes @Lukas","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:33 PM","@Blauelf","",""
"234679095378706433","Blauelf#6622","11-Mar-20 11:35 PM","First version compares the current `STR` to `dna[i:i+len(STR)]`. Depending on whether it's a match or not, I would do different things to `i` and the current run length (updating longest run if necessary).","",""
"202180238162001920","Lukas#2338","11-Mar-20 11:36 PM","I didn't want to think about my solution at all so I just found the largest `n` such that `(n * STR) in sequence` was `True`","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:37 PM","What is n here","",""
"202180238162001920","Lukas#2338","11-Mar-20 11:37 PM","it's super inefficient but the databases and sequences were all small so it wasn't an issue","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:37 PM","Longest no","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:38 PM","Number of count of longest sequence of an str ???","",""
"480302730989010954","gunomagic#2168","11-Mar-20 11:39 PM","Thanks I have solution now tnxs @Lukas and  @Blauelf","",""
"234679095378706433","Blauelf#6622","11-Mar-20 11:46 PM","@Lukas That was the first version that I submitted. I later disliked it for having such a bad time complexity. Not that it matters here.","",""
"202180238162001920","Lukas#2338","11-Mar-20 11:50 PM","Yeah it's far from being code I'm proud of, but it was quick and easy to write.","",""
"202180238162001920","Lukas#2338","11-Mar-20 11:50 PM","Maybe I'll come back to it again sometime.","",""
"480302730989010954","gunomagic#2168","12-Mar-20 10:30 AM","Yeah it take too much time since we have to loop for every n for every str","",""
"393854278764068875","curiouskiwi#1671","13-Mar-20 02:37 AM","Might be of interest?  https://www.youtube.com/watch?v=-Puz5tM3L0A","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 04:15 PM","I'm using a dictionary to keep track of my str matches, and created nested loops to go over each position","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 04:15 PM","but my dictionary doesn't update for some reason","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 04:18 PM","","https://cdn.discordapp.com/attachments/637500246087434252/688028109248790602/SPOILER_dna_day_2_1.jpg",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 04:18 PM","","https://cdn.discordapp.com/attachments/637500246087434252/688028124306473009/SPOILER_dna_day_2_2.jpg",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 04:18 PM","","https://cdn.discordapp.com/attachments/637500246087434252/688028128941047922/SPOILER_dna_day_2_3.jpg",""
"677215146694803458","pbrouse#8651","13-Mar-20 05:33 PM","I’m thinking it has to do with your sequence... is there a reason you are loading it with CSV reader? The sequence is not a CSV file","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 05:41 PM","true","",""
"677215146694803458","pbrouse#8651","13-Mar-20 05:48 PM","Might make sense to simply use a regular read() on the sequence to load it into a string? Then iterate over that string looking for occurrences of each STR (pulled from database)?","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:09 PM","Yep, that helped, now my sequence variable actually has a value","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:09 PM","Still though, no values are added to my counters","",""
"254622976710803456","bec#7264","13-Mar-20 09:35 PM","mind me asking why you are using str_iterator instead of i?","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:39 PM","I wasn't sure if I could set i = 1 as the initial value for the loop","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:39 PM","So just went with that","",""
"254622976710803456","bec#7264","13-Mar-20 09:40 PM","have you watched the python short of the course?","",""
"254622976710803456","bec#7264","13-Mar-20 09:40 PM","it goes over this I think","",""
"254622976710803456","bec#7264","13-Mar-20 09:40 PM","generally the shorts are mega helpfull and let you breeze through the psets and have a lot of stuff not in the lecture","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:40 PM","I'll take a look!","",""
"254622976710803456","bec#7264","13-Mar-20 09:41 PM","besides you could just go with i + 1 or something","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:41 PM","Any ideas on why my counters are not getting +1 added to them though?","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:42 PM","For the small dictionary 3 counters are created, but all = 0","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:42 PM","Even though the logic for the problem is off, and it should count for every instance the STR is found, not just the consecutive ones","",""
"254622976710803456","bec#7264","13-Mar-20 09:43 PM","yeah I am looking at it and trying to figure out why lad just thought I would ask you about the thing","",""
"254622976710803456","bec#7264","13-Mar-20 09:44 PM","wait lad","",""
"254622976710803456","bec#7264","13-Mar-20 09:44 PM","this might be off","",""
"254622976710803456","bec#7264","13-Mar-20 09:44 PM","but with append","",""
"254622976710803456","bec#7264","13-Mar-20 09:44 PM","it just doesn't add the line","",""
"254622976710803456","bec#7264","13-Mar-20 09:45 PM","it adds ,""line""","",""
"254622976710803456","bec#7264","13-Mar-20 09:45 PM","check what's in the database","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:45 PM","it's fine","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:46 PM","it's just the lists with the names and values","",""
"254622976710803456","bec#7264","13-Mar-20 09:46 PM","all I am saying is that it may be comparing AGAT with ""AGAT"" and then getting a false for when it's supposed to be a positive","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:46 PM","what I was thinking is that sequence outputs the sequence without ''","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:46 PM","yeah exactly","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:47 PM","is there a function to convert it to a string?","",""
"254622976710803456","bec#7264","13-Mar-20 09:47 PM","you could use strip","",""
"254622976710803456","bec#7264","13-Mar-20 09:48 PM","iirc theres also the * operator but that only works in certain cases and is weird","",""
"254622976710803456","bec#7264","13-Mar-20 09:48 PM","STR is a function that converts it to a string","",""
"254622976710803456","bec#7264","13-Mar-20 09:49 PM","the other two are just for removing the quotes","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:49 PM","alright I'll work that in","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 09:49 PM","thanks man","",""
"254622976710803456","bec#7264","13-Mar-20 09:54 PM","too early to thank me,it's still not proven that that's the thing that's screwing stuff up","",""
"677215146694803458","pbrouse#8651","13-Mar-20 10:05 PM","Can you go right below where you loaded the csv into database and do: print(database) ? Curious what the data looks like in here","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:07 PM","","https://cdn.discordapp.com/attachments/637500246087434252/688116003582115925/SPOILER_dna_rq.jpg",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:15 PM","If you want it in a list, why not `database = list(start_database)`?","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:17 PM","`list(start_database)` is equivalent to `[*start_database]`","",""
"677215146694803458","pbrouse#8651","13-Mar-20 10:27 PM","I’d probably have to play around with the code to figure out what’s happening here exactly. Just a tip to make it easier though, have you considered using find()?","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:35 PM","Just realized I was setting my counter = 0 everytime without using a ""highest value"" counter","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:36 PM","Reading that code, there seems to be some misconception how Python's `for` loops work.","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:37 PM","`range` returns some object that provides a bunch of numbers. It does not care whether you change the loop variable, it simply continues where it left.","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:39 PM","It works!","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:40 PM","And yes, having a count but no max count would work only for the small database.","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:40 PM","I added the highest value counter and am getting correct values for both small and large databases","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:40 PM","I just have to pair those up to names and display now","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:40 PM","Thank you!","",""
"425802339392290817","agustinvaca1111#0920","13-Mar-20 10:43 PM","Although @Blauelf is right, looking at the outputs for the seq variable, the for loop is continuing for much longer than it should","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:46 PM","The iterator has no idea of your variables, so it simply does its job.","",""
"234679095378706433","Blauelf#6622","13-Mar-20 10:49 PM","When I built a substring-comparison-based version, I would use `while` for my inner loop instead. Also for the `str.find`-based version, of course. And the weird string multiplication version with its bad runtime complexity. But no need for an inner loop in the RegExp version.","",""
"425802339392290817","agustinvaca1111#0920","14-Mar-20 01:11 AM","Ok comparing the two is harder than I thought","",""
"629737147599159296","Flo Tarlosy#8611","14-Mar-20 02:23 PM","pset6 dna:

Can´t spot which edge case I am missing to count the correct longest STRs...

Does anyone has a hint for me?
Thans a lot!!

(STRs is a dictionary -> STR:Number
accepted_STS is a list containing the STRs from the header line)

(2nd screentshot: the counts should be like Albus´)

my logic is:
check substring[a:b] with a starting at 0 and checking until b is len(dna)
if I find a match during this check I store it in longest
-> I found the consecutive longest when b is at len(dna)+1

Then next iteration on i: do this again, but i can now start at i + len(longest)","https://cdn.discordapp.com/attachments/637500246087434252/688361569003896870/SPOILER_89830925_2859130930842613_7236547816724627456_n.jfif",""
"629737147599159296","Flo Tarlosy#8611","14-Mar-20 02:24 PM","> here are the output compared to Albus","https://cdn.discordapp.com/attachments/637500246087434252/688361802710646896/89815889_2859135234175516_852750591091277824_o.jfif",""
"234679095378706433","Blauelf#6622","14-Mar-20 05:09 PM","@Flo Tarlosy I would understand this logic better if you had a loop that iterates the DNA sequence per STR separately, not one somehow working with all of them at once.","",""
"234679095378706433","Blauelf#6622","14-Mar-20 05:11 PM","especially - how do you check consecutive matches with that, without even remembering where the last occurrence of each ended?","",""
"629737147599159296","Flo Tarlosy#8611","14-Mar-20 05:22 PM","@Blauelf do i understand the task correctly: 
if the dna would be: AAAXA
and i have STRs of A | AAA | XA 
i would get counts like: A(0) | AAA(1) | XA(1) 

if yes, thats why i test my substring until j = len(dna)+1 as the hole dna sequences theoretically could be just one STR","",""
"443118974985699329","yolo#6674","14-Mar-20 05:27 PM","wouldn't A be 4","",""
"234679095378706433","Blauelf#6622","14-Mar-20 05:28 PM","If the STRs are A, AAA, XA, you would have to find the longest repeated sequence. For A, I see it repeated three times contiguously. For AAA, that's repeated once. XA, same.","",""
"629737147599159296","Flo Tarlosy#8611","14-Mar-20 05:30 PM","@Blauelf thanks! i´ll start from scratch again then... 
So, one letter (i. e. ""A"") can increment the count for the STR ""A"", ""AAA"" and ""XA"" ? 
(I thought it would only count for the longest one...)","",""
"234679095378706433","Blauelf#6622","14-Mar-20 05:34 PM","It's the longest run for this particular STR. I count three A, but the last A does not count, as it's one repetition, less than the three before the X.","","👍 (1)"
"234679095378706433","Blauelf#6622","14-Mar-20 05:35 PM","Those counts are independent from those of other sequences.","",""
"629737147599159296","Flo Tarlosy#8611","14-Mar-20 05:35 PM","> 
@Blauelf that means for ""AAAXA"" 
STR counts would be: A(3), AAA(1), XA(1) ?","",""
"234679095378706433","Blauelf#6622","14-Mar-20 05:35 PM","Correct.","",""
"443118974985699329","yolo#6674","14-Mar-20 11:16 PM","Just finished the code 🙂 I have to say python made the experience easier.. especially finding the longest pattern.","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:36 PM","hey friends, how would you suggest I set up the data structure for the database we are loading in? I'm reading up on how csv.reader() and csv.DictReader() work but I'm unsure how I'd want to structure it in memory","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:37 PM","for me, not having to declare variable and type is a bit annoying. Too easy to have bugs from typos.","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:38 PM","Lol fair, it's been a bit of a change to shift to Python","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:38 PM","I'm thinking a list would work best for the database, and a plain string would work best for the sequence","","👍 (2)"
"443118974985699329","yolo#6674","14-Mar-20 11:40 PM","also if you see reader's output, it's a list.","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:41 PM","Oh aight I gotchu","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:41 PM","so when we append each row, we'll end up with a list of lists","",""
"443118974985699329","yolo#6674","14-Mar-20 11:42 PM","yes","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:43 PM","I just iterated through row though, or am I too sentiment to c.","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:43 PM","If you're going to use `csv.reader`, I would get the first row separately, like `STRs = next(reader)[1:]`, and later iterate the rest like `for record in reader:`","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:44 PM","the [] after next() is to skip the first line?","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:45 PM","The `[1:]` would ignore the first field (`""name""`)","",""
"443118974985699329","yolo#6674","14-Mar-20 11:45 PM","later for the keys I used a dictionary","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:46 PM","so for example:
```py
# Open database csv file
with open(argv[1]) as csvFile:
    reader = csv.reader(csvFile)
    # Write the database into memory
    for row in reader:
        db.append(row)
```","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:46 PM","should be changed to something like","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:47 PM","uhhh","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:47 PM","i'm not sure how to only read from [1:]","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:47 PM","using the reader object","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:47 PM","What are you prepare this for?","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:48 PM","I mean, how is this list is going to be used for?","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:49 PM","I think yours would also work, then you can working through the list later.","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:49 PM","@MaxMayo I would do that `next(reader)` thing before the loop, so it does not end up in `db`, but in its own separate variable.
Also, you could easily have done `db = list(reader)` instead of the for loop.","","👍 (1)"
"247805115015102464","MaxMayo#4771","14-Mar-20 11:51 PM","💪 awesome!","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:51 PM","Is there a way to start for loop after the x index of list?","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:52 PM","What do you mean? In the sense of `next` as I did it, consuming a line from the iterator before starting the loop? Or taking a slice of the list-type element?","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:52 PM","So is next() basically updates the file object to be read from [1:] i'm guessin","",""
"166210877148626944","GhostE#9548","14-Mar-20 11:53 PM","Trying to loop to slice of the list-type. It could be useful someday","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:53 PM","so when you set the reader, it reads from the data and not the headers","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:53 PM","pretty sweeeet","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:54 PM","`next` requests a value from the iterator. In the case of a csv.reader, that's a line of the file. `for` would try to request the rest of the lines, until the iterator is exhausted (unless you `break` out of the loop of course).","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:58 PM","```py
# Open database csv file
with open(argv[1]) as csvFile:
    reader = csv.reader(csvFile)
    # Write STRs into memory, write database into memory
    strs = next(reader)[1:]
    next(reader) # bug here lol
    db = list(reader)
```","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:58 PM","lookin' real nice","",""
"247805115015102464","MaxMayo#4771","14-Mar-20 11:58 PM","Thank you! @Blauelf","",""
"234679095378706433","Blauelf#6622","14-Mar-20 11:59 PM","Remove the second `next(reader)`, you skip the first person with that.","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:00 AM","gotcha!","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:00 AM","Each `next` consumes one line.","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:00 AM","i thought if i called it in the initialization of strs","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:00 AM","it wouldn't do it","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:00 AM","but it does lol","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:01 AM","strs = next(reader)[1:]
Can the [X:Y] part be use to other function that interact with list argument?","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:01 AM","yessir","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:01 AM","but i think you would only want the STRs","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:02 AM","that way you can iterate over them when checking for runs in the sequence text file","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:02 AM","Nice, if i have known this, I could have saved a few lines.","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:03 AM","The slice syntax works for lists, tuples, strings.","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:04 AM","I see, thank you.","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:06 AM","If I research for that, my code won't be this messy
||def analyze(sample, base):
    # analyze DNA sample according to the base from database
    DNAfile = open(sample, ""r"")
    sequence = DNAfile.read()
    # count consecutive DNA for each base
    profile = []
    for i in base:
        index = 0
        highest = 0
        consecutive = 0
        length = len(i)
        while (sequence.find(i, index, len(sequence)) != -1):
            # find the next match index
            tmp = sequence.find(i, index, len(sequence))
            # look for consecutiveness
            if (tmp == index + length - 1 or consecutive == 0):
                consecutive += 1
                if (consecutive > highest):
                    highest = consecutive
            else:
                consecutive = 1
            # update new starting index to find next sequence
            index = tmp + 1
        profile.append(highest)
    return profile||","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:08 AM","In `[1:]`, I omit the end, it defaults to the end of the list.
With `[:]` (""whole thing""), you can create a shallow copy.
```Python
list1 = [23, 42]
list2 = list1 # lists are objects, so this is like copying a pointer
list1[:0] = [4, 8, 15, 16]
print(list2) # [4, 8, 15, 16, 23, 42]

list1 = [23, 42]
list2 = list1[:] # shallow copy
list1[:0] = [4, 8, 15, 16]
print(list2) # [23, 42]
```","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:09 AM","Not particularly useful in `dna`, I have to admit.","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:11 AM","@GhostE `find`'s end does default to the sequence length, so that's redundand.
We really need that walrus operator `:=` for avoiding such double calls to `str.find`.","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:19 AM","Something like this?
while(n := str.find(---)) > -1:","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:21 AM","That's what I think should work, yes. Pretty C-style, but a feature I liked in C.","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:25 AM","the walrus operator lol","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:25 AM","i'm weak","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:25 AM","I have to googled that  haha","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:25 AM","I have no idea why the name, but it makes it google-able.","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:25 AM","well  i get it","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:26 AM","i think if u flip it clockwise","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:26 AM","it become kinda like walrus with eyes and fangs","",""
"247805115015102464","MaxMayo#4771","15-Mar-20 12:26 AM","ye","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:26 AM","If I know the name I could imagine that, too. It's just not something that would come into my mind.","",""
"234679095378706433","Blauelf#6622","15-Mar-20 12:27 AM","`:=` is an assignment operator in other languages as well. I come from the Pascal world.","",""
"166210877148626944","GhostE#9548","15-Mar-20 12:28 AM","I have to admit. The one who first called that must have great imagination.","",""
"457971782293389314","./S.A#6274","15-Mar-20 07:48 AM","this is pretty much an o(n^2) problem right?","",""
"457971782293389314","./S.A#6274","15-Mar-20 07:48 AM","or can it be done better?","",""
"234679095378706433","Blauelf#6622","15-Mar-20 10:27 AM","You mean searching for longest repetition? It can ve done better (O(n)). My first submission was O(n²), though.","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:10 PM","Uh idk i mean the overall program

Well to search one particular STR's longest repeat in the sequence, i have an O(n) code","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:11 PM","Or atleast better than o(n^2) i think","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:11 PM","Well it depends on how good str.find() is","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:12 PM","First i find the index of first occurance of the STR, then i move the length of STR forward one by one, incrementing a counter until i reach end of that repeating STR, the  i find the index of next repeat of the STR by using string.find() but with the 2nd parameter as end of first repeat","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:13 PM","I keep doing that till string.find() returns -1, which means no more of that STR in the string","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:13 PM","This is all for one STR, ive to do this for all STRs","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:13 PM","What complexity is this? 🤔🤔","",""
"457971782293389314","./S.A#6274","15-Mar-20 01:14 PM","(ping me for code and I'll dm you if you didn't get that English explanation i wrote above, lel)","",""
"629737147599159296","Flo Tarlosy#8611","15-Mar-20 08:42 PM","How is pset8 Web (i. e. Homepage) being graded? 
Do they check if you go for a certificate? 

I submitted ""something"" and got 1/1 ... :/","",""
"234679095378706433","Blauelf#6622","15-Mar-20 08:47 PM","@Flo Tarlosy You are in the wrong channel. But, if I remember correctly, those are always ""pass"", you have so many degrees of freedom in this task, so tests would be difficult, they simply expect you to check your submission before actually submitting.","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:04 AM","Hi there! Out of curiosity, would I be penalized in style for writing my comments like this?","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:04 AM","","https://cdn.discordapp.com/attachments/637500246087434252/688915517805035599/Screen_Shot_2020-03-15_at_6.03.50_PM.png",""
"393854278764068875","curiouskiwi#1671","16-Mar-20 03:05 AM","what does style50 tell you?","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:05 AM","oh i didnt realize i could run it!","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:05 AM","my bad!","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:07 AM","amazing!","",""
"665756333370245121","Franciscosta#2924","16-Mar-20 03:18 AM","","https://cdn.discordapp.com/attachments/637500246087434252/688918980416634987/Screen_Shot_2020-03-15_at_6.16.59_PM.png","👍 (2)"
"665756333370245121","Franciscosta#2924","16-Mar-20 03:18 AM","Proudest moment in CS50 so far! Wild where it all started and where its at now!","",""
"457971782293389314","./S.A#6274","16-Mar-20 05:18 AM","This was one of the easier problems for me tbh, i felt much prouder in some other problems, for example recover and filter","",""
"457971782293389314","./S.A#6274","16-Mar-20 05:19 AM","But that's probably because i had python experience before starting the course but not c","",""
"457971782293389314","./S.A#6274","16-Mar-20 05:19 AM","Congrats tho Francis, keep going!","",""
"457971782293389314","./S.A#6274","16-Mar-20 05:21 AM","@Franciscosta shouldn't you exit(0) when found?","",""
"457971782293389314","./S.A#6274","16-Mar-20 05:21 AM","0 is what's normally returned when program runs properly","",""
"587882932711063552","scoobie#7439","17-Mar-20 10:54 PM","does exit() exit the program immediately?","",""
"587882932711063552","scoobie#7439","17-Mar-20 10:55 PM","or just the loop, function?","",""
"234679095378706433","Blauelf#6622","17-Mar-20 11:18 PM","If you want to exit the loop, use `break`. If you want to exit the function, use `return`.","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","```
for i in range(len(types)):
    counts.append(dna.count(types[i]))
```","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","I try to create an array","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","by counting how many times some combination of G, C,A,T","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","occurs in the sequence","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","it works for the small.csv","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","does not calculate them correctly for the long.csv","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:25 PM","any ideas why?","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:26 PM","types is the first row of the csv file","",""
"587882932711063552","scoobie#7439","18-Mar-20 12:27 PM","logically, it should work as count() outputs the number of times some kind of combination of G,C,A and T was found in the sequence (sequence is stored in the dna here)","",""
"234679095378706433","Blauelf#6622","18-Mar-20 02:23 PM","> * For each of the STRs (from the first line of the CSV file), your program should compute the *longest run of consecutive repeats* of the STR in the DNA sequence to identify.","",""
"587882932711063552","scoobie#7439","18-Mar-20 02:46 PM","ohhh","",""
"587882932711063552","scoobie#7439","18-Mar-20 02:46 PM","okay","",""
"587882932711063552","scoobie#7439","18-Mar-20 02:46 PM","makes sense","",""
"178462411206950912","Chook#2868","19-Mar-20 11:40 AM","","https://cdn.discordapp.com/attachments/637500246087434252/690132643873816576/Dna_complete.PNG",""
"178462411206950912","Chook#2868","19-Mar-20 11:40 AM","Feels good","",""
"178462411206950912","Chook#2868","19-Mar-20 11:41 AM","Sometimes it's very thin line between slamming your head into the wall and finally cracking the problem","","👍 (2)"
"178462411206950912","Chook#2868","19-Mar-20 11:42 AM","Out of curiousity; i ended up using lists but I was wondering if there were any large tradeoffs / advantages between using dicts and lists for this problem?","",""
"178462411206950912","Chook#2868","19-Mar-20 11:42 AM","Or is it more that it changes implementation details","",""
"664112164465934367","rudeen#5459","20-Mar-20 02:01 AM","Hi Guys,  I am able to get Alice to pass this test but not with Bob, can you please help me figure out this:                                                                                                                                                                                                                                                                                                     if sys.argv[1] == 'databases/small.csv':
            for row in reader:
                if int(row['AGATC']) == agatc_counter and int(row['AATG']) == aatg_counter and int(row['TATC']) == tatc_counter:
                    print(row['name'])
                    break
                else:
                    print(""No match"")
                    break","",""
"247805115015102464","MaxMayo#4771","20-Mar-20 02:10 AM","Hey rudeen, your code makes sense to me when we're jumping in the if statement if it's the small database. Maybe it has to do with how the counter variables are set up? @rudeen","",""
"247805115015102464","MaxMayo#4771","20-Mar-20 02:12 AM","If i remember correctly I think sequence1 has Bob as the match, so I would debug50 with that example","",""
"247805115015102464","MaxMayo#4771","20-Mar-20 02:13 AM","and check to make sure the counter variables equal Bob's STR counts","",""
"324522780252962816","Sinergy#7605","20-Mar-20 03:23 AM","what do you mean by ""get Alice to pass the test but not with  Bob""?  Do you mean 2.txt or 3.txt or...?  With only a tiny bit of your code and no specifics of what results you are getting and what you expect, we won't be able to tell what's wrong.","",""
"664112164465934367","rudeen#5459","20-Mar-20 03:30 AM","yes 1.text for bob, and 4.text for Alice","",""
"324522780252962816","Sinergy#7605","20-Mar-20 03:33 AM","what do you get when you print all the counters?","",""
"664112164465934367","rudeen#5459","20-Mar-20 03:37 AM","I am getting all the counters correct values. my problem now is, when i run 1.text for bob because alice is the first in the csv file it print out ""No match"" for  alice , and bob also; I only want bob to be printed out.","",""
"324522780252962816","Sinergy#7605","20-Mar-20 03:45 AM","haha I missed that.  You solved it yourself.  So when it tests the Alice row, it will break the loop.  That means you don't actually want ""No match"" to print in the loop unless you're on the last row of reader.  You could have a test in else for if it's the last row, and then print ""No Match"" (and you wouldn't need a break because it's the last row).  I actually initialised a variable ""match"" to """" and set it to the match if there was one, and then used the value of match to determine what was printed after the loop.  There are different ways of doing it.","","💯 (1)"
"664112164465934367","rudeen#5459","20-Mar-20 05:15 AM","As for the small database iam getting all the values correct, only for the large database. here is how iam counting STRs:                                                                                                                                                                                                                                                    for i in range(len(dna_sequence_string)):
        if dna_string[i : i + 4] == 'AATG':
            aatg_counter += 1
        elif dna_string[i : i + 4] == 'GATA':
            gata_counter += 1
        elif dna_string[i : i + 4] == 'TCTG':
            tctg_counter += 1
        elif dna_string[i : i + 4] == 'GAAA':
            gaaa_counter += 1
        elif dna_string[i : i + 4] == 'TATC':
            tatc_counter += 1                
        elif dna_string[i : i + 5] == 'TCTAG':
            tctag_counter += 1 
        elif dna_string[i : i + 8] == 'TTTTTTCT':
            ttttttct_counter += 1
        elif dna_string[i : i + 5] == 'AGATC':
            agatc_counter += 1","",""
"393854278764068875","curiouskiwi#1671","20-Mar-20 05:21 AM","how will your program handle a different dictionary?  You can't hard-code the values because you don't know what they will be in advance","",""
"194655592978055168","Lawson#5877","20-Mar-20 05:32 PM","i'm still lost on how i should count the STRs","",""
"234679095378706433","Blauelf#6622","20-Mar-20 10:01 PM","There are many ways to do that. How would you do it manually?","",""
"664112164465934367","rudeen#5459","23-Mar-20 03:21 PM","Hi Guys, please help me figure out were i am in error, whenever I run this code using the small.csv and 1.text files, i  get 1 for  AGATC which should be 4, but the rest are correct, i dont know why.                                                                                                                                                                            index = 0
 while index < len(dna_string):
        str_string = dna_string[index : index + len(Srts[1])]
      
        if Srts[1] == str_string:

            str_counter += 1
            index += len(Srts)

            if str_counter > longest_str:
                longest_str = str_counter
        else:
            str_counter = 0
            index += 1","",""
"324522780252962816","Sinergy#7605","23-Mar-20 03:28 PM","Should it be index += len(Srts[1]) and len(Srts) just happened to be equal to the len of the SRT in the other cases?  I'm not sure what each variable represents","",""
"512616173972488205","MaungShine#6469","23-Mar-20 03:29 PM","After searching the STRs, how can I know if they are consecutive or not.","",""
"324522780252962816","Sinergy#7605","23-Mar-20 03:30 PM","Maung did you do a count?","",""
"512616173972488205","MaungShine#6469","23-Mar-20 03:33 PM","Not yet.If I count the STRs, can I know if they are consecutive.","",""
"324522780252962816","Sinergy#7605","23-Mar-20 03:35 PM","not really if you only have the count.  If you were recording the index for each, you could work out if they were the correct spaces apart.  But all the code I've seen so far has essentially read through the sequence, moving the frame you are reading over one unit at a time, and if you get a match, then you move across a full frame and see if there is another, etc.","",""
"664112164465934367","rudeen#5459","23-Mar-20 03:43 PM","@Sinergy  do you mean the index for each srt?","",""
"324522780252962816","Sinergy#7605","23-Mar-20 03:45 PM","I meant the index in the sequence","",""
"324522780252962816","Sinergy#7605","23-Mar-20 03:45 PM","but that would be an unusual way to approach it","",""
"664112164465934367","rudeen#5459","23-Mar-20 03:49 PM","srts should be strs","",""
"664112164465934367","rudeen#5459","23-Mar-20 04:03 PM","thanks @Sinergy , it should have been index += len(Srts[1])","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:14 PM","So i tried running the first test
``python dna.py databases/small.csv sequences/1.txt``
and I was able to count the consecutive STRs for the first STR only
this is the result i got:
``{'AGATC': 4, 'AATG': 0, 'TATC': 0}``","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:15 PM","```py
for STR in STRs:
    count = 0
    largestcount = 0
    # a list including strs according to the length of STR being searched for
    strlist = [(txtfile[i:i + len(STR)]) for i in range(0, len(txtfile), len(STR))]
    
    #print(strlist)
    for i in range(len(strlist)):
    ....
```","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:15 PM","this is what i have","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:16 PM","2 for loops with the outer one looping over the STRs and the inner one looping over the strlist","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:18 PM","this is what strlist looks like when searching for  ``AATG`` and ``TATC``
``['AAGG', 'TAAG', 'TTTA', 'GAAT', 'ATAA', 'AAGG', 'TGAG', 'TTAA', 'ATAG', 'AATA', 'GGTT', 'AAAA', 'TTAA', 'AGGA', 'GATC', 'AGAT', 'CAGA', 'TCAG', 'ATCT', 'ATCT', 'ATCT', 'ATCT', 'ATCT', 'ATCA', 'GAAA', 'AGAG', 'TAAA', 'TAGT', 'TAAA', 'GAGT', 'AAGA', 'TATT', 'GAAT', 'TAAT', 'GGAA', 'AATA', 'TTGT', 'TGGG', 'GAAA', 'GGAG', 'GGAT', 'AGAA', 'GG\n']``
so for the last 2 STRs ``AATG`` and ``TATC``
i did a manual search and i cannot find them","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:19 PM","so I'm assuming strlist should be done in a different way?","",""
"294454788093902849","Zeina#6519","23-Mar-20 08:20 PM","but I'm not sure how","",""
"234679095378706433","Blauelf#6622","23-Mar-20 11:43 PM","Each of those strings starts at an index divisible by 4. What if a substring starts at one that isn't?
The distance of 4 makes sense after a match, when you check for the next match. But it doesn't make sense if the next match could be anywhere.","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:07 AM","Oh i see now","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:07 AM","I’ll have to try a different approach then","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:07 AM","So the interval starts after the first match","",""
"234679095378706433","Blauelf#6622","24-Mar-20 12:11 AM","If you have a match, the next position you would expect a match is one length later. But if you have a mismatch, the next match could be starting at the next character.","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:14 AM","I see","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:14 AM","Okay thanks","",""
"234679095378706433","Blauelf#6622","24-Mar-20 12:16 AM","There are many ways to tackle this problem, but having substrings start like that would most probably not work well (unless you do that for starting at 0, 1, 2, 3).","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:17 AM","Yeah I’m thinking of how i would do it","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:18 AM","Its 2am currently","",""
"294454788093902849","Zeina#6519","24-Mar-20 12:18 AM","Will probably just leave that for tomorrow","",""
"234679095378706433","Blauelf#6622","24-Mar-20 12:23 AM","2am? Better get some sleep then.","",""
"691967217687986218","Franzi#0873","24-Mar-20 01:24 PM","Hey guys! I am new to discord so pls let me know if I am doing anything wrong 🙂 I am currently working on DNA (problem set 6)- my code works fine with all the given examples on the website, it just takes a bit long (aprox 20 seconds) for the large database. When I submit it fails for those... how can I fix this issue/ make my code 'faster'?","",""
"691967217687986218","Franzi#0873","24-Mar-20 01:25 PM","I think the time issue is coming from here, when I call on the search function (the function itself contains one nested loop)","https://cdn.discordapp.com/attachments/637500246087434252/691970822641811487/unknown.png",""
"371565560674385922","SWEPY#2404","24-Mar-20 01:46 PM","I ended up with 2 lists 1: [ 4, 1, 5] 2: [Bob, 4, 1, 5] . But I have no idea how to copmare them","",""
"371565560674385922","SWEPY#2404","24-Mar-20 01:46 PM","can someone help?","",""
"691967217687986218","Franzi#0873","24-Mar-20 02:37 PM","> Hey guys! I am new to discord so pls let me know if I am doing anything wrong 🙂 I am currently working on DNA (problem set 6)- my code works fine with all the given examples on the website, it just takes a bit long (aprox 20 seconds) for the large database. When I submit it fails for those... how can I fix this issue/ make my code 'faster'?
@Franzi I was able to solve it by myself (removed the for loops)","",""
"275851236002234368","Era3tone#4219","24-Mar-20 02:50 PM","```with open(argv[1]) as csvfile:
    people = csv.reader(csvfile)
    for row in people:
        dnasequences = row

print(dnasequences)```","",""
"275851236002234368","Era3tone#4219","24-Mar-20 02:50 PM","When I try this with small csv file, it's printing the last row `['Charlie', '3', '2', '5']`","",""
"275851236002234368","Era3tone#4219","24-Mar-20 02:51 PM","I want the first row though, how do I do that","",""
"324522780252962816","Sinergy#7605","24-Mar-20 03:53 PM","``for row in people`` is like a for loop that iterates through every row in the file.  So dnasequences is being overwritten for each row until it gets to the last row, then it leaves that loop and then you print.  You can use ``dnasequences = reader.next()``.  Keep in mind that the first element will be 'Name' or something similar, so either keep that in mind when you loop later, or slice it.","","👍 (1)"
"275851236002234368","Era3tone#4219","24-Mar-20 05:44 PM","I used `.pop(0)` and that worked","",""
"684652492256051221","asmat#3174","27-Mar-20 12:18 PM","with open(sys.argv[2], 'r') as file: 

and got it working the read fector
now i am trying to figure out what to do with the file🤣

if i use the following method to find a char in the line and that will be the first point in and how can i say look for the 2nd from there
for char_DNA in line:
        if char_DNA == ""A"":
line = ""AAGGTAAGTTTAGAATATAAAAGGTGAGTTAAATAGAATAGGT""
what i want to say is if i look for 'A' and it if the first letter and i am actuly looking for AGATC so now i found A and now i want to look for 'G' and that should be the 2nd but here 2nd in the line is again 'A' so we shouls again look for 'A' again and this time 'A' is 2nd so now i will try to find 'G' on the 2nd position which is actulaly on 3rd position so now we found AG so i will look for 3rd position A which should be on the 4th position which is not true so we will look for next 'A'","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:34 PM","```
for t in range(len(dna)):
    occurence.append(0)

#Calculating consecutive sequences and creating a 2D array occurence...
for i in range(len(types)):
    for j in range(len(dna)):
        if (dna[j:j+len(types[i])] != types[i]):
            occurence[j] = 0

```","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:34 PM","why do I get","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:34 PM","out of index","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:35 PM","at ```
occurence[j] = 0
```","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:35 PM","even if I initialize occurence at the top and its length is the same as the string dna","",""
"587882932711063552","scoobie#7439","27-Mar-20 05:35 PM","and then I do for j in range(len(dna))","",""
"684652492256051221","asmat#3174","27-Mar-20 06:20 PM","for char_DNA in line:
        if char_DNA == ""A"":
            c = char_DNA
            #AGATC +=1
            res = None
            for i in range(0, len(line)): 
                if line[i] == char_DNA: 
                    res = i + 1
                    break
                  
            if res == None: 
                print (""No such charater available in string"") 
            else: 
                print (""Character {} is present at {}"".format(c str(res)))


why i am geting invalid syntax at last line","",""
"234679095378706433","Blauelf#6622","28-Mar-20 10:48 AM","@asmat Missing comma maybe? `.format(c, str(res))`","",""
"684652492256051221","asmat#3174","28-Mar-20 04:02 PM","🤪","",""
"684652492256051221","asmat#3174","28-Mar-20 04:02 PM","now i have another problem","",""
"684652492256051221","asmat#3174","28-Mar-20 04:03 PM","while line:
            print(line)
            checkLarge = [line[1], line[2], line[3], line[4], line[5], line[6], line[7], line[8]]
            print (checkLarge)","",""
"684652492256051221","asmat#3174","28-Mar-20 04:03 PM","result

print(line) ========>  name,AGATC,TTTTTTCT,AATG,TCTAG,GATA,TATC,GAAA,TCTG

print (checkLarge) =======>
['a', 'm', 'e', ',', 'A', 'G', 'A', 'T']","",""
"684652492256051221","asmat#3174","28-Mar-20 04:07 PM","now how can pass the whole word","",""
"234679095378706433","Blauelf#6622","28-Mar-20 04:58 PM","What do you mean, whole word?","",""
"234679095378706433","Blauelf#6622","28-Mar-20 04:59 PM","Are you not using `csv.reader` or `csv.DictReader` for reading the csv file?","",""
"684652492256051221","asmat#3174","28-Mar-20 05:21 PM","i read the file but i dint use csv.reader","",""
"684652492256051221","asmat#3174","28-Mar-20 05:21 PM","let me see that","",""
"684652492256051221","asmat#3174","28-Mar-20 05:22 PM","then get back to the questions","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:18 PM","```
for i in types:
    occurence = [0] * len(dna)
    for j in range(len(dna)):
        if (dna[j:j+len(i)] != i):
            occurence[j] = 0
        else:
            space = j
            while(dna.find(i, space+len(i), len(dna)) != -1):
                index = dna.find(i, space+len(i), len(dna))
                space = space + len(i)
                if (index == space):
                    occurence[j] = occurence[j] + 1

    for k in range(len(occurence)):
        if(occurence[k] > maximum):
            maximum = occurence[k]
    counts.append(maximum + 1)
    maximum = 0
    occurence.clear()

```","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:19 PM","any ideas why this does not work?","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:19 PM","for the calcullation of occurences","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:19 PM","of each STR in the sequence","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:19 PM","dna is the sequence here","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:19 PM","types is the list of STRs","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:20 PM","It works for 9/21","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:20 PM","tests","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:20 PM","does not work mostly for those with large database","",""
"587882932711063552","scoobie#7439","28-Mar-20 06:21 PM","https://submit.cs50.io/check50/c0730e6331b69cbbcd4a6baa9fc4b018acc635ed","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:02 PM","@scoobie Did you know that you could do `maximum = max(occurence)`? (mistyping ""occurrence"" hurts)
The `maximum+1` looks suspicious. I would remove the `+1` and do a `occurrence[j] = 1` before the `while` instead. The case for this would be a value of 0, sequence not found at all, which you would turn into a 1.
Also, shouldn't that innermost loop break if `index != space`?","",""
"684652492256051221","asmat#3174","28-Mar-20 07:34 PM","if sys.argv[1] == ""databases/large.csv"":
        large = [AGATC,TTTTTTCT,AATG,TCTAG,GATA,TATC,GAAA,TCTG]

        f_csv = open(sys.argv[1], 'r')
        with f_csv:
            reader = csv.DictReader(f_csv)
            for row in reader:
                #print (row['name'], row['AGATC'], row['TTTTTTCT'], row['AATG'], row['TCTAG'], row['GATA'], row['TATC'], row['GAAA'], row['TCTG'])
                print (row['AGATC'], row['TTTTTTCT'], row['AATG'], row['TCTAG'], row['GATA'], row['TATC'], row['GAAA'], row['TCTG'])
                checkLarge = (row['AGATC'], row['TTTTTTCT'], row['AATG'], row['TCTAG'], row['GATA'], row['TATC'], row['GAAA'], row['TCTG'])
                print (checkLarge)
                if large == checkLarge:
                    answer = row['name']
                    break
        print (answer)
        f_csv.close()","",""
"684652492256051221","asmat#3174","28-Mar-20 07:35 PM","the result are
15 49 38 5 14 44 14 12
('15', '49', '38', '5', '14', '44', '14', '12')","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:35 PM","@Blauelf did not know about the max() function. What's wrong with maximum+1? I simply added it, because in my while loop it doesnt include the SRT sequence that it initially found, it only includes ones that are following. By innermost loop you mean the while loop?","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:36 PM","What if the sequence isn't there at all? How could you have a 0 with that code?","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:36 PM","And yes, `while` is innermost loop.","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:37 PM","Inside two `for` loops.","",""
"684652492256051221","asmat#3174","28-Mar-20 07:37 PM","how can i compare these 2 line","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:37 PM","> What if the sequence isn't there at all? How could you have a 0 with that code?
@Blauelf what do you mean by ""0 with that code""?","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:38 PM","@asmat sorry for interfering your messages","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:38 PM","I mean - how would you handle ""zero repetitions because the STR didn't appear in the DNA at all""","",""
"684652492256051221","asmat#3174","28-Mar-20 07:38 PM","@scoobie no problem","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:38 PM","the occurence list would be all zeros","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:39 PM","and the max would be 0","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:39 PM","thus for that STR the value in counts would be 0","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:39 PM","@asmat You could map if you want. `list(map(int, ('15', '49', '38', '5', '14', '44', '14', '12')))`. Or use a similar list comprehension `[int(x) for x in ('15', '49', '38', '5', '14', '44', '14', '12')]`","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:39 PM","if it doesn't find the sequence in the dna, it simply inputs 0 into the ```occurence[j]```","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:40 PM","But then you do `maximum+1`","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:41 PM","oh","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:41 PM","That's why I mean you have to add the 1 at the point where it should happen, not afterwards.","",""
"684652492256051221","asmat#3174","28-Mar-20 07:45 PM","> @asmat You could map if you want. `list(map(int, ('15', '49', '38', '5', '14', '44', '14', '12')))`. Or use a similar list comprehension `[int(x) for x in ('15', '49', '38', '5', '14', '44', '14', '12')]`
@Blauelf so what i am getting out of this is that if i use
list(map(int, (checkLarge))) ==  large
should work","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:46 PM","@Blauelf and the break if index!= space is required here in the case if the STR is found somewhere further in the string?","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:47 PM","doesn't my if assure that only the following are counted towards the occurence[j] value","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:47 PM","?","",""
"587882932711063552","scoobie#7439","28-Mar-20 07:49 PM","@Blauelf Hmmm, it seems that the break after the index!=space fixed everything, not sure what is the reason","",""
"234679095378706433","Blauelf#6622","28-Mar-20 07:52 PM","What if there is an aligned occurrence later in the DNA? You would still count it, even though it isn't part of the same contiguous repetition.","",""
"587882932711063552","scoobie#7439","28-Mar-20 08:23 PM","okay, thanks!","",""
"684652492256051221","asmat#3174","28-Mar-20 08:39 PM","my 6.txt, 8,9 and 19.txt were not working and gave me ""No Match""","",""
"684652492256051221","asmat#3174","28-Mar-20 08:42 PM","for 6.txt my TCTG was 25 where it should have been 24
8.txt my TATC was 49 where it should have been 48
9.txt my AATG was 9 where it should have been 8","",""
"684652492256051221","asmat#3174","28-Mar-20 08:43 PM","19.txt my GATA was 6 where it should have been 5","",""
"684652492256051221","asmat#3174","28-Mar-20 08:50 PM","DNA.py","https://cdn.discordapp.com/attachments/637500246087434252/693532402441519214/SPOILER_DNA.py.rtf",""
"684652492256051221","asmat#3174","28-Mar-20 08:51 PM","help needed how can i adjust in my code so that max STR is recourded and not to count other pairs","",""
"329258671177596928","DustinS#6016","29-Mar-20 06:28 PM","how can I iterate over every element in the first row (CSV), while I don't know the length of that first line?","",""
"234679095378706433","Blauelf#6622","29-Mar-20 06:55 PM","Are you using the `csv.reader` or `csv.DictReader`?","",""
"234679095378706433","Blauelf#6622","29-Mar-20 06:57 PM","If you have the STRs in a list, you can iterate them either by index, or by value (or using `enumerate`, both at once).","",""
"329258671177596928","DustinS#6016","29-Mar-20 07:01 PM","getting the STRs in a list is my problem here
I only know how to get the whole csv file in a list and I know how to call a row like list[row(0)][column] but I don't know at what column I should stop","",""
"329258671177596928","DustinS#6016","29-Mar-20 07:03 PM","I can't access the ide, so I can't send the code I already have :/","",""
"329258671177596928","DustinS#6016","29-Mar-20 07:03 PM","(I use csv.reader)","",""
"234679095378706433","Blauelf#6622","29-Mar-20 07:16 PM","If you use `csv.reader`, you could use something like `fieldnames = next(reader)[1:]` before you read the rest of the lines.
`next` asks an iterator for the next element (here each element would be a list of strings).
`[1:]` means ""a slice starting at the second element"" (the first element of the list would be ""name"", which is less interesting)","",""
"299154369704755200","Wey#9176","30-Mar-20 03:50 PM","Feeling super lost on how to start, anyone here that could lend me a hand?","",""
"299154369704755200","Wey#9176","30-Mar-20 04:20 PM","@Blauelf I'm struggling to understand how to store the data properly using python. I figured out how to store the first line as a list called str_order, but I'd like to store the remaining rows into a dict. Could you give me some hints?
```# Open CSV and DNA sequence, read into memory
with open(argv[1], ""r"") as db:
    # Read and store first line with STR order
    reader = csv.reader(db)
    str_order = next(reader)
    # Read and store rest of file into a dict
    dictreader = csv.DictReader(db)
```","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:25 PM","Don't use both, reader and DictReader. They are alternatives.","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:26 PM","You want a list of dicts? Use DictReader (IIRC those are `OrderedDict`s). You can find the column names in `fieldnames` attribute.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:27 PM","I want a dict of lists","",""
"299154369704755200","Wey#9176","30-Mar-20 04:27 PM","Well my plan was to just have one list of the first ine against which I can compare the values","",""
"299154369704755200","Wey#9176","30-Mar-20 04:28 PM","And then have a dict of lists of the second line with their names as key and the values in a list","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:29 PM","A dict of lists? Well, that's odd.","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:30 PM","Why would a single line be represented by more tha dict *or* list?","",""
"299154369704755200","Wey#9176","30-Mar-20 04:31 PM","I thought I could read all remaining lines and have it print it as a dict","",""
"299154369704755200","Wey#9176","30-Mar-20 04:31 PM","with the first element of each line being the key and then the remaining values in a list","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:32 PM","Ah, that's not that difficult either.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:32 PM","How would we do that? And alternatively how would a dict of one line even look like?","",""
"299154369704755200","Wey#9176","30-Mar-20 04:33 PM","Man I'm feeling pretty overwhelmed by python so far","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:34 PM","Something like `database = {name: data for name, *data in reader}` (using the regular reader, after the `next` for the first line)","",""
"299154369704755200","Wey#9176","30-Mar-20 04:35 PM","database.append right","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:36 PM","I chose `database` as the name of the dict.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:37 PM","I need to somehow iterate over the entire csv though right","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:40 PM","The `for` in the expression does that.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:40 PM","What where","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:41 PM","`for name, *data in reader`","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:41 PM","`name` would be the first element of the list, `data` the rest.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:42 PM","Oh man this is so confusing^^","",""
"299154369704755200","Wey#9176","30-Mar-20 04:42 PM","The new ways of using for","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:42 PM","Then make it a regular loop if that's more to your like.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:43 PM","so * means it's a list?","",""
"299154369704755200","Wey#9176","30-Mar-20 04:43 PM","And why can we do `in reader`","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:43 PM","Here it means ""take the whole rest"".","",""
"299154369704755200","Wey#9176","30-Mar-20 04:43 PM","Is reader the entire document?","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:44 PM","I meant some `reader = csv.reader(...)`","",""
"299154369704755200","Wey#9176","30-Mar-20 04:45 PM","Yeah I understand that","",""
"299154369704755200","Wey#9176","30-Mar-20 04:45 PM","Just wondering how the `in` works","",""
"299154369704755200","Wey#9176","30-Mar-20 04:46 PM","for `i` `in` `range` I understood means: for i = element in a list called range","",""
"299154369704755200","Wey#9176","30-Mar-20 04:46 PM","but what is `reader` ? Is it a list/dict?","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:50 PM","It's an iterator.","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:50 PM","You can ask it for the next value.","",""
"234679095378706433","Blauelf#6622","30-Mar-20 04:50 PM","That's what `next` does.","",""
"299154369704755200","Wey#9176","30-Mar-20 04:51 PM","So that's just something completely new compared to C?","",""
"299154369704755200","Wey#9176","30-Mar-20 04:52 PM","So when we have `for` `i`  `in` `iterator` it just defines i as however much data the iterator iterates through and then continues incrementing by that amount until the iterator stops iterating?","",""
"299154369704755200","Wey#9176","30-Mar-20 05:05 PM","I'm just quite confused because reader isn't a collection of objects right?","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:05 PM","`i` would be given the next value the iterator provided.","",""
"299154369704755200","Wey#9176","30-Mar-20 05:05 PM","https://gyazo.com/09b183116e3d30a411f056b7e24df81d","",""
"299154369704755200","Wey#9176","30-Mar-20 05:06 PM","is reader like a pseudo iterable","",""
"299154369704755200","Wey#9176","30-Mar-20 05:06 PM","because the moment you check its value it takes on a next value?","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:09 PM","The reader is an iterable, but also an iterator. For an iterable, you can get an iterator, an object with state that lets you walk the iterable. Iterators are iterables as well, being their own iterator.","",""
"299154369704755200","Wey#9176","30-Mar-20 05:09 PM","I kinda get it now","",""
"299154369704755200","Wey#9176","30-Mar-20 05:10 PM","Man that was confusing...","",""
"299154369704755200","Wey#9176","30-Mar-20 05:10 PM","Thanks a lot","",""
"299154369704755200","Wey#9176","30-Mar-20 05:11 PM","so if we have a list called a","",""
"299154369704755200","Wey#9176","30-Mar-20 05:11 PM","we could do","",""
"299154369704755200","Wey#9176","30-Mar-20 05:11 PM","`for i in a` but also `for i in iter(a)`","",""
"299154369704755200","Wey#9176","30-Mar-20 05:11 PM","?","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:13 PM","The for loop would request an iterator. The iterator would return itself.","",""
"299154369704755200","Wey#9176","30-Mar-20 05:14 PM","but isn't reader basically like iter(a)","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:19 PM","Similar in behaviour, yes.","",""
"299154369704755200","Wey#9176","30-Mar-20 05:20 PM","> The for loop would request an iterator. The iterator would return itself.
@Blauelf So what did you mean with this","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:32 PM","The for loop will ask the iterable for an iterator, and will use `next` on it until it is exhausted or you end the loop in another way.
An iterator, when being asked for an iterator, will return itself.","",""
"234679095378706433","Blauelf#6622","30-Mar-20 05:36 PM","The iterator being an iterable means you can use both lists, strings, or other sequences, but also iterators like file objects or the object returned by `range`.","",""
"299154369704755200","Wey#9176","30-Mar-20 07:39 PM","Gotcha cheers buddy","",""
"299154369704755200","Wey#9176","30-Mar-20 08:32 PM","This pset is hard man","",""
"234679095378706433","Blauelf#6622","30-Mar-20 09:48 PM","Most of the pset is learning some Python, that part is all algorithms you have written before.
`dna` has its own algorithm part. It's small enough that even inefficient (but correct) algorithms will work.","",""
"684652492256051221","asmat#3174","30-Mar-20 10:21 PM","got all 20 correct yaaaaaa","",""
"684652492256051221","asmat#3174","30-Mar-20 10:21 PM","now moving to sql","",""
"299154369704755200","Wey#9176","30-Mar-20 10:22 PM","Must be nice","",""
"299154369704755200","Wey#9176","30-Mar-20 10:22 PM","😄","",""
"299154369704755200","Wey#9176","30-Mar-20 10:22 PM","I'm struggling hard with trying to understand how to properly manage the data","",""
"684652492256051221","asmat#3174","30-Mar-20 10:50 PM","i dont know fully but with the help of all good fellowship of discord, guided me to the victory","",""
"665053121499627571","fjw#9108","31-Mar-20 12:35 AM","@Blauelf agree on this pset - not complicated once/ you get the python nuance sorted","",""
"395272669353869315","Oreo#2457","31-Mar-20 12:37 AM","i'm confused as to how to make a substring from the DNA text file. 
for example i have my STR values from the csv in a list (without 'names' value).  but how would i compare it to a STR in the DNA file? what would be the start and end points?","",""
"665053121499627571","fjw#9108","31-Mar-20 12:39 AM","did you watch Brian's walkthrough?","",""
"665053121499627571","fjw#9108","31-Mar-20 12:39 AM","he gives a great hint","",""
"395272669353869315","Oreo#2457","31-Mar-20 12:41 AM","i did, maybe i need to watch it again","",""
"395272669353869315","Oreo#2457","31-Mar-20 12:45 AM","i iterate using a loop on my str's
for STR in range(len(STR_list)):","",""
"395272669353869315","Oreo#2457","31-Mar-20 12:46 AM","but for every STR i can't figure out how to substring DNA","",""
"665053121499627571","fjw#9108","31-Mar-20 12:48 AM","here's your hint from the walkthrough s[ i : j ]","",""
"395272669353869315","Oreo#2457","31-Mar-20 01:08 AM","ye but my question is what would i and j be if they cant be the length of an STR in each loop?","",""
"665053121499627571","fjw#9108","31-Mar-20 01:10 AM","and why can't an attribute of a STR be a j?","",""
"395272669353869315","Oreo#2457","31-Mar-20 02:19 AM","ok i found the length of each Str using the loop, assuming thats the j","",""
"395272669353869315","Oreo#2457","31-Mar-20 02:20 AM","but the i still escapes me","",""
"665053121499627571","fjw#9108","31-Mar-20 04:55 AM","so what do you need to compare your STRs against?","",""
"395272669353869315","Oreo#2457","31-Mar-20 06:10 AM","got it, thanks, now i just need to figure out how to find the most consequtive repeats in the dna, im just getting the total amounts atm","",""
"395272669353869315","Oreo#2457","31-Mar-20 06:17 AM","i think if i store the current found STR in the sequence in a seperate variable i can compare it to the next one, if they don't equal eachother than the count doesn't increase. then have a maxcount variable that stores the count, and every iteration if the count > maxcount then replace maxcount with count. only thing i cant seem to grasp is how to keep a seperate count for each STR...","",""
"395272669353869315","Oreo#2457","31-Mar-20 06:20 AM","if i do it all in the same loop then i think it'll just keep updating maxcount regardless of which STR iteration it's on","",""
"395272669353869315","Oreo#2457","31-Mar-20 06:20 AM","sorry for the rubberducking lol","",""
"299154369704755200","Wey#9176","31-Mar-20 11:44 AM","Just finshed the str compare code. Could someone maybe review my code and show me how I could have done it more efficiently? @Blauelf","",""
"299154369704755200","Wey#9176","31-Mar-20 12:09 PM","Boom. done.","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:13 PM","did anyone use objects in DNA?","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:14 PM","I was thinking about creating a dna class with instance variable that stores the dna sequence and returns list of tuples with sequence name and number of repetitions","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:15 PM","but I cant quite grasp classes yet, I know how to do them java style","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:15 PM","well I guess functional paradigm it is 😄","",""
"299154369704755200","Wey#9176","31-Mar-20 06:27 PM","Yeah dude I didn't bother with classes at all 😄","",""
"299154369704755200","Wey#9176","31-Mar-20 06:27 PM","I did a weird loop 😄","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:28 PM","actually I found a neat way to solve it","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:29 PM","I mean I didnt finish it yet, still got the analysing of sequence left to do","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:30 PM","but I got some clean functions to read whole database into a list of dictionaries","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 06:31 PM","also got another function to read the STRs that are being sought and now gotta tie that together with sequence variable with some fancy string manipulation functions in python","",""
"299154369704755200","Wey#9176","31-Mar-20 07:26 PM","Let me know when you finish maybe we can compare our code and learn","",""
"299154369704755200","Wey#9176","31-Mar-20 07:26 PM","I'm interested in finding an efficient way for the string analysis","",""
"269227960156946454","GhostDragon#7128","31-Mar-20 07:26 PM","do you want to compare code with me?","",""
"299154369704755200","Wey#9176","31-Mar-20 07:27 PM","Sure","",""
"299154369704755200","Wey#9176","31-Mar-20 07:27 PM","Dm me","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 07:35 PM","found the algorithm to find substrings","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 07:35 PM","just gotta comment everything out and then do some loops to check with keys and values from previous dictionary","",""
"282113226353803265","Nihil Novi#0084","31-Mar-20 07:36 PM","will dm when I finish","",""
"395272669353869315","Oreo#2457","31-Mar-20 11:54 PM","i can't figure out how to proceed with finding most consecutive repeats, i've tried a bunch of stuff, if someone is able to give any hints that would be great! i feel like this should be easier than it is, maybe i'm overthinking things...","https://cdn.discordapp.com/attachments/637500246087434252/694650881060372490/Screenshot_from_2020-03-31_14-49-00.png",""
"234679095378706433","Blauelf#6622","01-Apr-20 02:00 AM","@Oreo You are missing the ""consecutive"" element, there would be various ways to fix this. Make sure the matches are `STR_length` apart, if not, reset the streak.
Also, the ""longest"" aspect would likely require you to keep a ""longest so far"" variable that you would update if the current run has more repetitions.","",""
"395272669353869315","Oreo#2457","01-Apr-20 02:58 AM","i can't figure out how to find another match that's STR_length apart. it keeps just sending me zero's for the counts","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:00 AM","@Blauelf","",""
"234679095378706433","Blauelf#6622","01-Apr-20 03:02 AM","Maybe you would have to remember the position of the last match. Or you could take control of `i` by using a `while` loop for the inner loop instead of `for`, and on a match increment by `STR_length` instead.","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:05 AM","it says i is not defined if i use a while loop, i tried it before and couldn't figure it out","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:06 AM","if i'm understanding correctly the increment would be DNA[i + STR_length:i + STR_length] correct?","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:11 AM","i'm so lot with this","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:11 AM","lost*","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:15 AM","@Blauelf this is what i have, been fiddling with this type of loop for the past 2 days:","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:15 AM","while i in range(len(DNA)):
        if DNA[i:i + STR_length] == STR_list[STR]:
            i = STR_length
            STR_count = 1
        if DNA[i:i + STR_length] == STR_list[STR]:
            STR_count += 1
            if STR_countMAX < STR_length:
                STR_countMAX = STR_length
        else:
            break

    print({STR_list[STR]}, {STR_countMAX})","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:16 AM","aaah","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:16 AM","replace STR_length with STR_count where applicable","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:38 AM","tried this, nothing happens","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:38 AM","i = 1
    while i in range(len(DNA)):
        if DNA[i:i + STR_length] == STR_list[STR]:
            i = STR_length
            STR_count += 1
            if STR_countMAX < STR_count:
                STR_countMAX = STR_count
        else:
            continue

    print({STR_list[STR]}, {STR_countMAX})","",""
"395272669353869315","Oreo#2457","01-Apr-20 03:39 AM","i'm really at a loss here, starting to feel discouraged tbh","",""
"234679095378706433","Blauelf#6622","01-Apr-20 09:20 AM","`for` loops in Python work differently. The whole counting happens in the iterator returned by `range` function. It does not care if you change `i`.","",""
"234679095378706433","Blauelf#6622","01-Apr-20 09:21 AM","Oh, you replaced for with while? Doesn't work that way either.
(didn't expect the combination of `while` with `in range(...)`)","",""
"234679095378706433","Blauelf#6622","01-Apr-20 09:30 AM","@Oreo I would start with `i = 0`, not `i = 1`. And while this `while` loop condition might work, it's highly inefficient, just use `i < len(DNA)` (or slightly shorter to consider the `STR_len`, but that won't change the result).
The ""match"" path looks almost fine, that should be an `i +=`, not `i =`.
But the ""mismatch"" path, where you have `continue`, it does not increment `i` at all. What's the next position you would search for a potential match? Also, don't forget to reset `STR_count` to `0` on a mismatch.","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 05:06 PM","I don't understand how my program should work with both the large and small csvs","",""
"234679095378706433","Blauelf#6622","01-Apr-20 05:26 PM","Don't hard-code anything. Take the sequences from the CSV header row.","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 06:13 PM","I made a function that takes in the txt file and one STR as input and returns how many time that STR is repeated but I don't know what to do from here","",""
"234679095378706433","Blauelf#6622","01-Apr-20 06:46 PM","You mean the highest number of consecutive repeats, right? The simple count would not get you anywhere.","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 08:49 PM","Nvm I figured it out","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 08:53 PM","my code works when I check it myself","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 08:53 PM","but when I submit I get 12 out 21 even though I checked every single one myself","",""
"387292479675826176","omarbeendeaded#8736","01-Apr-20 08:58 PM","I re-submitted the same exact code and got 14 this time","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:15 PM","i = 0
    # find STR's in DNA using substrings that equal length of STR
    while i < len(DNA):
        if DNA[i:i + STR_length] == STR_list[STR]:
            i += STR_length
            STR_count += 1
            if STR_countMAX < STR_count:
                STR_countMAX = STR_count
        else:
            i = 0
            STR_count = 0
            continue

    print({STR_list[STR]}, {STR_countMAX})","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:16 PM","@Blauelf this does nothing, just stays blank and i have to do ctrl C to exit","",""
"234679095378706433","Blauelf#6622","01-Apr-20 09:17 PM","Don't `i = 0` on mismatch, but `i += 1`. And the `continue` is useless if it's at the end of a loop.","",""
"234679095378706433","Blauelf#6622","01-Apr-20 09:18 PM","You want to continue searching at the next character, not at the start of the DNA.","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:18 PM","AH! that did it, my mind was still in step value mode not actual position","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:20 PM","@Blauelf you are a legend! thank you so much, my mind was in a total whirlpool and you took my hand and yanked me out. i feel like an idiot, but such has been the case for every pset lol. now to compare the values and print the proper name. thanks!","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:21 PM","clear","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:21 PM","woops.","",""
"395272669353869315","Oreo#2457","01-Apr-20 09:21 PM","XD","",""
"516652903763542017","PeterC#0586","01-Apr-20 10:17 PM","Is debug50 available for python?","",""
"516652903763542017","PeterC#0586","01-Apr-20 10:19 PM","nvm i guess it works","",""
"395272669353869315","Oreo#2457","02-Apr-20 03:16 AM","i did it! i found a rediculously easy way to compare lists after trying a million different loops. a simple if statement did it. python is magical","",""
"269227960156946454","GhostDragon#7128","02-Apr-20 03:23 AM","Congratulations!","",""
"184471073264369664","Henrique Moura#5152","02-Apr-20 06:04 AM","> i did it! i found a rediculously easy way to compare lists after trying a million different loops. a simple if statement did it. python is magical
@Oreo I didn't have this magic vision uahuaha, but for me one for loop with 3 if statements did the job","",""
"395272669353869315","Oreo#2457","02-Apr-20 07:22 AM","@Henrique Moura right on, glad u got it figured out!","",""
"244878227825229824","dan#8231","02-Apr-20 10:17 PM","","https://cdn.discordapp.com/attachments/637500246087434252/695351161506496632/unknown.png",""
"244878227825229824","dan#8231","02-Apr-20 10:17 PM","what is wrong with this","",""
"244878227825229824","dan#8231","02-Apr-20 10:17 PM","on line 15 shouldnt the loop run however many characters are in the sequence?","",""
"244878227825229824","dan#8231","02-Apr-20 10:17 PM","it just prints out a bunch of blank newlines","",""
"244878227825229824","dan#8231","02-Apr-20 10:18 PM","what am i even supposed to do to in order to tally the longest sequences in the file","",""
"244878227825229824","dan#8231","03-Apr-20 12:54 AM","how are you supposed to count the STRs","",""
"244878227825229824","dan#8231","03-Apr-20 12:54 AM","this makes no sense","",""
"307434803165397003","MiDO#7198","03-Apr-20 01:34 AM","So any ideas on how to check for repeating STRs consecutively?","",""
"307434803165397003","MiDO#7198","03-Apr-20 01:35 AM","am I allowed to google this one? or is it ""against the academic honesty"" :GWseremePeepoThink:","",""
"244878227825229824","dan#8231","03-Apr-20 01:37 AM","they said it was fine to google things","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:48 AM","how do i compare each str with each rows","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:49 AM","shall i store str in lists ?","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:49 AM","even after storing in list how do i compare ?","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:49 AM","how do i exclude frim column ?","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:03 PM","```for q in range(1,len(ls[0])):
    clist.append(0)
    tlist.append(0)
    t = len(ls[0][q])
    a = 0
    for x in range(1, sqlen, t):
        temp = (sq[a*t:a*t+t])
        print(temp)
        a = a + 1
        if ls[0][q] == temp:
            clist[q-1] = clist[q-1]+1
            tlist[q-1] = tlist[q-1]+1
            print(""hooray"")
            print(tlist)
            if tlist[q-1] < clist[q-1]:
                tlist[q-1] = clist[q-1]
            continue
        if clist[q-1] > 0:
            clist[q-1] == 0```","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:03 PM","i dont understand why is it not detecting STR correctly","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 03:04 PM","@curiouskiwi","",""
"307434803165397003","MiDO#7198","03-Apr-20 04:44 PM","erm..","",""
"307434803165397003","MiDO#7198","03-Apr-20 04:44 PM","could my code be too slow that check50 times out??","",""
"307434803165397003","MiDO#7198","03-Apr-20 04:47 PM","I _""implemented""_ a way to check repeating STRs consecutively, which was basically the way Brian mentioned in the walkthrough, I start at letter n in the sequence then check there's an STR at that n and continue checking and  return largest one from that n, then move to the other character.","",""
"307434803165397003","MiDO#7198","03-Apr-20 04:47 PM","which","",""
"307434803165397003","MiDO#7198","03-Apr-20 04:47 PM","takes too much time to be honest.","",""
"665053121499627571","fjw#9108","03-Apr-20 04:59 PM","even with very suboptimal code, it should complete in less than a second doing it that way","",""
"665053121499627571","fjw#9108","03-Apr-20 05:00 PM","you sure you're not getting into an infinite loop someplace?","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:01 PM","ah","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:01 PM","less than a second?","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:01 PM","oof?","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:02 PM","well","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:21 PM","I'm using pycharm on my computer because CS50 IDE decided that it just won't work, and well, it takes let's just say much more than one second so I dunno really.","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:21 PM","but it produces correct results :c","",""
"665053121499627571","fjw#9108","03-Apr-20 05:26 PM","run it on the IDE without checkout with time e.g. time python3 dna.py databases/large.csv sequences/12.txt","",""
"665053121499627571","fjw#9108","03-Apr-20 05:26 PM","without check50","",""
"307434803165397003","MiDO#7198","03-Apr-20 05:27 PM","will do when it decides to open, now I'll just try to optimize it somehow","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 05:33 PM","> ```for q in range(1,len(ls[0])):
>     clist.append(0)
>     tlist.append(0)
>     t = len(ls[0][q])
>     a = 0
>     for x in range(1, sqlen, t):
>         temp = (sq[a*t:a*t+t])
>         print(temp)
>         a = a + 1
>         if ls[0][q] == temp:
>             clist[q-1] = clist[q-1]+1
>             tlist[q-1] = tlist[q-1]+1
>             print(""hooray"")
>             print(tlist)
>             if tlist[q-1] < clist[q-1]:
>                 tlist[q-1] = clist[q-1]
>             continue
>         if clist[q-1] > 0:
>             clist[q-1] == 0```
Help plz my code is not working as it is supposed to @curiouskiwi","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:17 PM","so since my algorithm supposedly takes too much time to calculate how many times did the STR appear consecutively, 
does anyone have a good idea to do that?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:30 PM","How much execution time are you getting? I have two small for loops and get 7 seconds to complete","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:31 PM","@MiDO how much time","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:31 PM","`--- 7.152557373046875e-07 seconds ---` To be precise","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:31 PM","@Era3tone have you completed algorithm?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:32 PM","Yep","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:32 PM","Ok ive also just completed it after many hours 😅","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:33 PM","I did it a few days ago, was trying to optimize it today","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:33 PM","All thats left is comparision .. which ill do later today. Half of comparision code is redy","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:33 PM","didn't find a way to go more faster than this","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:33 PM","Ah, Good Luck","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:34 PM","My algorithm giving me consecutive atr in less fhan 2 secs 😅","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:34 PM","I did good maybe?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:34 PM","Wooh, find the actual time after completing everything and then tell me","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:34 PM","Sure","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 06:35 PM","IT WAS DIFFICULT 😭","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:35 PM","@Muhammad Usman 
Literally 23 seconds (I manually counted as I'm using pycharm on my computer so I don't know how do that) for Lavander :ccc 
So I'll re type it some how.","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:36 PM","Pycharm takes a lot of Ram, maybe that's what slowing it down?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:36 PM","Try in the terminal or the IDE to recheck","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:38 PM","CS50 IDE just doesn't want to run today dunno why.","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:39 PM","||```python
str_nums = []
for i in str_list:
    count = 0
    z = 0
    for n in range(len(sequence_string)):
        start_letter = n
        end_letter = n + len(i)
        while (end_letter <= len(sequence_string)):
            if i == sequence_string[start_letter:end_letter]:
                count += 1
                start_letter += len(i)
                end_letter += len(i)
            else:
                if count > z:
                    z = count
                count = 0
                start_letter += len(i)
                end_letter += len(i)
    str_nums.append(str(z))
```
||","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:39 PM","That's the algorithm I'm using","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:39 PM","I'll retype it using find()","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:47 PM","this doesn't look that slow to me","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:47 PM","is this working?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:48 PM","or it times out before the output?","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:50 PM","It works using pycharm, 
since the IDE doesn't want to open","",""
"307434803165397003","MiDO#7198","03-Apr-20 06:50 PM","I manually uploaded the code to github","",""
"251199781152620545","Charles#0217","03-Apr-20 06:50 PM","What's the link?","",""
"251199781152620545","Charles#0217","03-Apr-20 06:50 PM","I just finished mine and curious about others solutions","",""
"275851236002234368","Era3tone#4219","03-Apr-20 06:52 PM","```for items in STR_names:
    for i in range(len(dnastring)):
        if dna[i:i+length of items] == items:
            while: next sequence slice 
            increase match count and move forward ```","","🇹 (1),🇾 (1),❤️ (1)"
"275851236002234368","Era3tone#4219","03-Apr-20 06:54 PM","This is as far as I can write without showing the solution but giving you a general idea. I didn't hard code STR_name and extracted it so maybe that's why it 7 sec and can go lower if I remove a earlier loop to extract(not in the above code though)","",""
"251199781152620545","Charles#0217","03-Apr-20 06:57 PM","I'm not sure. I just checked how long mine took (.034 seconds) when there are no matches, quicker if there is. I didn't hard code anything either. Maybe theres times where youre iterating over a list/dict too many times or something?","",""
"695658512285564999","Santiago Flores#4818","03-Apr-20 07:08 PM","How do you check the time?","",""
"251199781152620545","Charles#0217","03-Apr-20 07:11 PM","https://stackoverflow.com/questions/12444004/how-long-does-my-python-application-take-to-run","",""
"251199781152620545","Charles#0217","03-Apr-20 07:11 PM","top answer, way easier than implementing it in C!","",""
"695658512285564999","Santiago Flores#4818","03-Apr-20 07:17 PM","Great, thanks! What is a good time for this program?","",""
"695658512285564999","Santiago Flores#4818","03-Apr-20 07:18 PM","I am getting 0.02 for No Match, 0.07 for Fred, 0.02 for Harry, 0.01 for Sirius, etc","",""
"695658512285564999","Santiago Flores#4818","03-Apr-20 07:19 PM","I just finished my code like 10 minutes ago 👍","",""
"251199781152620545","Charles#0217","03-Apr-20 07:34 PM","It's going to be different everytime you run it, even with the same command line arguments.","",""
"251199781152620545","Charles#0217","03-Apr-20 07:35 PM","Someone above said it shouldn't take longer than a second. I think though that if it runs quick it's fine.","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:41 PM","My code is fully functional and I've tested it with every single text multiple times","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:41 PM","Every time I submit it check50 gives me a different grade out of 21","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:42 PM","My code isnt necessarily slow it never takes above 2 seconds","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:43 PM","It has been doing this for a few days now I left it and continued the course but I need to submit it properly","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:44 PM","I never changed the code","https://cdn.discordapp.com/attachments/637500246087434252/695675079463403550/Screenshot_67.png",""
"251199781152620545","Charles#0217","03-Apr-20 07:56 PM","I can try and look at it if you want to attach the code. Very new to python but more eyes helps","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 07:56 PM","https://pastebin.com/KeKVcRqN","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 08:09 PM","@Era3tone bro i complete it and it is taking no time at all.. instant 🧐","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 08:10 PM","Instant name of matching person","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 08:11 PM","With cs50 ide","",""
"275851236002234368","Era3tone#4219","03-Apr-20 08:11 PM","Sweet","",""
"275851236002234368","Era3tone#4219","03-Apr-20 08:12 PM","Mine doesn't take any time and prints the result instantly, idk why I am getting 7 second when checking time","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 08:13 PM","Ohh okay .. tahts what i was think iwhy is mine works instant and urs take 7 seconds.. i though i was missing smthng lol","",""
"591874246683394059","Muhammad Usman#3919","03-Apr-20 08:13 PM","Maybe ur code is taking 0.7 seconds..","",""
"251199781152620545","Charles#0217","03-Apr-20 08:14 PM","@omarbeendeaded What is check50 saying when you click on x/21 link?","",""
"275851236002234368","Era3tone#4219","03-Apr-20 08:47 PM","Mine takes 0.03 second","",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 08:47 PM","","https://cdn.discordapp.com/attachments/637500246087434252/695690913162199050/Screenshot_68.png",""
"387292479675826176","omarbeendeaded#8736","03-Apr-20 08:47 PM","@Charles","",""
"275851236002234368","Era3tone#4219","03-Apr-20 08:47 PM","When I used time python program..","",""
"275851236002234368","Era3tone#4219","03-Apr-20 08:47 PM","real    0m0.035s
user    0m0.035s
sys     0m0.000s","",""
"307434803165397003","MiDO#7198","03-Apr-20 09:54 PM","reworked on my algorithm using string.find()","",""
"307434803165397003","MiDO#7198","03-Apr-20 09:59 PM","works flawlessly","",""
"307434803165397003","MiDO#7198","03-Apr-20 09:59 PM","100x times better lol","",""
"247805115015102464","MaxMayo#4771","03-Apr-20 10:18 PM","Ya string.find() is actually a life saver","",""
"444575948696846336","tmichal2#4341","03-Apr-20 10:29 PM","I have opened the csv database using a with `open as` . However, I then open the .txt in a subsequence `open as`. Is it possible to read the information in the database to a permanent variable so that when I close the file it isn't lost?","",""
"251199781152620545","Charles#0217","03-Apr-20 10:32 PM","If you read the csv data into a data structure it will persist even if you close the csv. It will not free that memory until you overwrite the data structure or end your program","","❤️ (1)"
"251199781152620545","Charles#0217","03-Apr-20 10:34 PM","After reading some of the code here i found that I did mine a little weird. I opened the csv and read each item as a dict into a list. So essentially I had a list of dicts that I used to compare STRs sequences","",""
"558660774307037194","ソフィア#7524","03-Apr-20 10:35 PM","Is sys.argv[0] the program name?","",""
"269227960156946454","GhostDragon#7128","03-Apr-20 10:35 PM","yeah","","👍 (1)"
"558660774307037194","ソフィア#7524","03-Apr-20 10:37 PM","Is it correct store the filenames this way? Because I cannot use the read function. It gives me errors saying that csvfile and txtfile are strings.","https://cdn.discordapp.com/attachments/637500246087434252/695718546105434252/Capture1.PNG",""
"558660774307037194","ソフィア#7524","03-Apr-20 10:39 PM","To be precise, it gives me this: AttributeError: 'str' object has no attribute 'read'","",""
"251199781152620545","Charles#0217","03-Apr-20 10:42 PM","Say.argv[1] and 2 are just strings. They’re the path/name of the file you’re calling. When you use the open function it attempts to open the file. When you use read it’s assuming that file is already open","","👍 (1)"
"558660774307037194","ソフィア#7524","03-Apr-20 10:45 PM","If I use open(csvfile) or open(txtfile) am I violating anything in Python? It's a bit confusing to me since C used to give pointers.","",""
"251199781152620545","Charles#0217","03-Apr-20 10:56 PM","I don’t believe so. I think most python people would say use open(argv[1]) as it’s less lines of code","","👍 (1)"
"251199781152620545","Charles#0217","03-Apr-20 10:57 PM","And your read mode as an argument","",""
"304690705996054528","Krish12003#8752","03-Apr-20 11:20 PM","```
~/pset6/dna/ $ python dna.py databases/small.csv sequences/1.txt
~/pset6/dna/ $ python dna.py databases/small.csv sequences/4.txt
GGGGAATATGGTTATTAAGTTAAAGAGAAAGAAAGATGTGGGTGATATTAATGAATGAATGAATGAATGAATGAATGAATGTTATGATAGAAGGATAAAAATTAAATAAAATTTTAGTTAATAGAAAAAGAATATATAGAGATCAGATCTATCTATCTATCTTAAGGAGAGGAAGAGATAAAAAAATATAATTAAGGAA

AGAT: 1, AATG: 8, TATC: 3
No Matches
```
I'm outputing my variables from the examples to see why my code is not working. When I run the testing file,
`python dna.py databases/small.csv sequences/4.txt`, I get as output No Matches but the desired output is Alice. The only difference is in the AGAT, where my program outputs 1 but the csv has 2. When I search through the sequence from the input manually, I see that there is a max of 1 AGAT in a sequence, but the csv has 2 as output. Is this something wrong with my code or the testing example?","",""
"304690705996054528","Krish12003#8752","03-Apr-20 11:22 PM","In the CSV: `Alice,2,8,3`","",""
"304690705996054528","Krish12003#8752","03-Apr-20 11:58 PM","Please disregard.","",""
"244878227825229824","dan#8231","04-Apr-20 12:15 AM","","https://cdn.discordapp.com/attachments/637500246087434252/695743299532750858/unknown.png",""
"244878227825229824","dan#8231","04-Apr-20 12:15 AM","i found a way to see the longest consecutive count of AGATC in the sequence file","",""
"244878227825229824","dan#8231","04-Apr-20 12:16 AM","but theres no way I need to copy and paste this code 10 different times for all the different STRs","",""
"393854278764068875","curiouskiwi#1671","04-Apr-20 12:16 AM","especially since your program should work for *any* STR","",""
"244878227825229824","dan#8231","04-Apr-20 12:16 AM","what should i be doing","",""
"244878227825229824","dan#8231","04-Apr-20 12:17 AM","im so confused","",""
"393854278764068875","curiouskiwi#1671","04-Apr-20 12:18 AM","rather than hardcoding the string, use the list of all the STRs that you can get from the file, and iterate over each one","",""
"244878227825229824","dan#8231","04-Apr-20 12:20 AM","im not even sure how to get that from the csv file. i tried using reader and dictreader and it made no sense to me. even if i got it, how do you iterate over all of them at once? if you go character by character looking to see if a substring matches, you would need to look for multiple different substrings because STRs vary in length","",""
"251199781152620545","Charles#0217","04-Apr-20 12:24 AM","So len(str) will help and so will string[i:j] for iterating over the STRs","",""
"251199781152620545","Charles#0217","04-Apr-20 12:24 AM","I read the STRs into a list if that’s helpful. So I had 1 list that contained a string for each STR","",""
"251199781152620545","Charles#0217","04-Apr-20 12:25 AM","But you don’t have to do that either, there’s many ways","",""
"329904059014447105","KenKinoshita#5783","04-Apr-20 02:37 PM","Been working on this for about 12 hours+ 🤯 
Anyone please help 😔","https://cdn.discordapp.com/attachments/637500246087434252/695960311013965894/Screen_Shot_2020-04-04_at_20.35.46.png",""
"329904059014447105","KenKinoshita#5783","04-Apr-20 03:18 PM","I somehow been able to fix my code","",""
"329904059014447105","KenKinoshita#5783","04-Apr-20 03:18 PM","🤯","",""
"251199781152620545","Charles#0217","04-Apr-20 07:23 PM","@omarbeendeaded I’m not sure what’s going on tbh. When I run your code it outputs the correct name for all of the tests. I’ll try and submit50 it too later on and see how it goes.","",""
"387292479675826176","omarbeendeaded#8736","04-Apr-20 07:25 PM","@Charles no it's okay I found a solution although I don't know why it works","",""
"251199781152620545","Charles#0217","04-Apr-20 07:25 PM","What did you end up changing?","",""
"387292479675826176","omarbeendeaded#8736","04-Apr-20 07:26 PM","I just used the string.find() instead of manually checking it myself","",""
"387292479675826176","omarbeendeaded#8736","04-Apr-20 07:26 PM","I guess it's faster but my original one wasn't that slow to begin with","",""
"251199781152620545","Charles#0217","04-Apr-20 07:29 PM","Huh, well glad you figured it out!","",""
"387292479675826176","omarbeendeaded#8736","04-Apr-20 07:34 PM","Thank you for the help\","",""
"558660774307037194","ソフィア#7524","05-Apr-20 03:53 PM","Hello, what's the difference between these two:
if len(argv) != 3
if len(argv) not == 3?","",""
"411234197751988224","BhayanakMaut#9412","05-Apr-20 04:57 PM","can someone with  a working program please run sequence 18 through their code and tell me the output for all 3 STRs","",""
"411234197751988224","BhayanakMaut#9412","05-Apr-20 04:57 PM","Itll be a great help","",""
"665053121499627571","fjw#9108","05-Apr-20 05:59 PM","46,48,5","",""
"411234197751988224","BhayanakMaut#9412","05-Apr-20 06:32 PM","Thanks man @fjw , fixed my code","",""
"665053121499627571","fjw#9108","05-Apr-20 06:32 PM","np","",""
"299154369704755200","Wey#9176","05-Apr-20 06:42 PM","@ソフィア think they are the same, let me know if you find out 😄","",""
"558660774307037194","ソフィア#7524","05-Apr-20 07:03 PM","@Wey it says that the latter is an invalid syntax.","https://cdn.discordapp.com/attachments/637500246087434252/696389626188922990/Capture.PNG",""
"665053121499627571","fjw#9108","05-Apr-20 07:15 PM","now that we're in python mode, not reverses a boolean","","👍 (2)"
"665053121499627571","fjw#9108","05-Apr-20 07:15 PM","so if you wanted to use that syntax, you'd do the evaluation e.g. if len(sys.argv) == 3:","",""
"665053121499627571","fjw#9108","05-Apr-20 07:15 PM","and then reverse or flip it","",""
"665053121499627571","fjw#9108","05-Apr-20 07:16 PM","e.g. if not (len(sys.argv) == 3):","",""
"558660774307037194","ソフィア#7524","05-Apr-20 08:25 PM","Thank you @fjw","",""
"299154369704755200","Wey#9176","05-Apr-20 08:26 PM","@ソフィア did you try ```if not len(sys.argv) == 3:```","","👍 (2)"
"558660774307037194","ソフィア#7524","05-Apr-20 08:27 PM","I just tried it thanks @Wey 🙂","",""
"558660774307037194","ソフィア#7524","05-Apr-20 09:16 PM","Why is it not printing the header?","https://cdn.discordapp.com/attachments/637500246087434252/696423147636785222/Capture.PNG",""
"558660774307037194","ソフィア#7524","05-Apr-20 09:22 PM","Why do I always have to use loops to print a csvfile? Can't I just print the entirety of it w/o using loops?","",""
"234679095378706433","Blauelf#6622","05-Apr-20 10:56 PM","@ソフィア `i` in this loop is a line, not a number.","",""
"234679095378706433","Blauelf#6622","05-Apr-20 10:56 PM","(actually a list of strings)","",""
"558660774307037194","ソフィア#7524","05-Apr-20 11:17 PM","Thank you @Blauelf but I still don't quite understand :( Is there any online resource I can refer to for this particular topic? Although I'd like to take the advantage of asking you more questions it's already early morning where I am at and I haven't got any sleep yet.","",""
"234679095378706433","Blauelf#6622","05-Apr-20 11:38 PM","Oh, missed a typo, you probably meant `in csv_file`. `csvfile` as a text file would yield full line strings, not lists of strings.
Anyway, the `for` loop in Python will take values from an iterator (if you pass an iterable like a list, it will get an iterator for that), and assign the values to the loop variable. `csvfile` is an iterator, as is `csv_file`. So if you say `for i in csv_file:`, it would assign the first line to `i`, run the loop body, then the next line to `i`, and so on, until you `break` out or the iterator is exhausted.
If you want line numbers as well, you could use `enumerate` (returning yet another iterator):
```python
for line_number, line_content in enumerate(csv_file):
    print(f""Line {line_number}: {line_content}"")
```
If you want just a single line, you could use the `next()` function.","",""
"558660774307037194","ソフィア#7524","05-Apr-20 11:58 PM","Thanks a lot for the detailed explanation @Blauelf! I tried reading your explanation and I have a good feeling that I'll have a better chance of getting it after some sleep.","",""
"444575948696846336","tmichal2#4341","06-Apr-20 05:21 PM","After reading a file into memory with open and csv.reader, how do I then access, say, the first row?","",""
"444575948696846336","tmichal2#4341","06-Apr-20 05:22 PM","","https://cdn.discordapp.com/attachments/637500246087434252/696726552444141568/Screen_Shot_2020-04-06_at_10.22.29.png",""
"444575948696846336","tmichal2#4341","06-Apr-20 05:23 PM","This is what I get when I loop through the csv.reader I created and print each line. But how would I access just AGATC?","",""
"444575948696846336","tmichal2#4341","06-Apr-20 05:23 PM","I've tried dna_database[0], but that returns name, alice, bob, charlie.","",""
"665053121499627571","fjw#9108","06-Apr-20 07:03 PM","@tmichal2 https://docs.python.org/3/library/csv.html","",""
"665053121499627571","fjw#9108","06-Apr-20 07:03 PM","look at csvreader.fieldnames","",""
"381236641492107264","Amine#2111","06-Apr-20 08:18 PM","a module in Python is like a library in C?","",""
"665053121499627571","fjw#9108","06-Apr-20 08:49 PM","similar, yes","",""
"381236641492107264","Amine#2111","06-Apr-20 09:02 PM","thank you","",""
"444575948696846336","tmichal2#4341","07-Apr-20 03:26 PM","is there a corollary in C to a reader object?","",""
"558660774307037194","ソフィア#7524","07-Apr-20 09:34 PM","Can someone tell me what's wrong with the steps in my code? It's not giving the correct number of STR's for a specific sequence. And all of the STR's have the same count.","https://cdn.discordapp.com/attachments/637500246087434252/697152370223874188/SPOILER_Capture.PNG",""
"234679095378706433","Blauelf#6622","07-Apr-20 10:02 PM","@ソフィア You should set `i=0` where you initialise `j`. Otherwise your second STR won't work at all. Same for `ctr = 0` and `counts = 0`.
I would use `==` instead of `in`. But should do the same.
And I definitely would do the `if ctr > counts` in the match case, not in the mismatch case. Imagine the last match was at the end of the string.
So on a mismatch, you search for the next match `len(header[idx])` characters later? Why not the next?","","👍 (1)"
"381236641492107264","Amine#2111","07-Apr-20 10:50 PM","i wanna ask about if `ftxt = open(sys.argv[2], ""r"")` is the same as `ftxt.read()` ?","",""
"234679095378706433","Blauelf#6622","07-Apr-20 10:51 PM","Not the same. You have to open a file before you can read from it.","",""
"558660774307037194","ソフィア#7524","08-Apr-20 09:09 AM","@Blauelf I tried changing where the variables were declared some STRs are correct but some are not. E.g. Sirius's correct number of STRs are Sirius,31,11,28,26,35,19,33,6 but my program is giving {'AGATC': 1, 'TTTTTTCT': 11, 'AATG': 28, 'TCTAG': 1, 'GATA': 1, 'TATC': 1, 'GAAA': 33, 'TCTG': 6} but for Lavender the values are really far Lavender,22,33,43,12,26,18,47,41 = {'AGATC': 1, 'TTTTTTCT': 0, 'AATG': 1, 'TCTAG': 1, 'GATA': 1, 'TATC': 1, 'GAAA': 1, 'TCTG': 1}","https://cdn.discordapp.com/attachments/637500246087434252/697327313372839986/SPOILER_Capture.PNG",""
"234679095378706433","Blauelf#6622","08-Apr-20 09:35 AM","The increments on mismatch are wrong. The `STR[header[...` line should be after the `while` loop, not within.","","👍 (1)"
"558660774307037194","ソフィア#7524","08-Apr-20 10:40 AM","How do I check if my dictionary is equal to a specific line in the csv file?","","👍 (1)"
"234679095378706433","Blauelf#6622","08-Apr-20 12:55 PM","I used `all` function with a generator expression.","","👍 (1)"
"381236641492107264","Amine#2111","08-Apr-20 09:19 PM","i wanna ask about if `ftxt = open(sys.argv[2], ""r"")` is the same as `ftxt.read()` ?","",""
"234679095378706433","Blauelf#6622","08-Apr-20 09:25 PM","@Amine Groundhog day? (the https://en.wikipedia.org/wiki/Groundhog_Day_(film) type)","",""
"234679095378706433","Blauelf#6622","08-Apr-20 09:27 PM","https://discordapp.com/channels/393846237255696385/637500246087434252/697171748134715484","",""
"381236641492107264","Amine#2111","08-Apr-20 09:27 PM","wuuut","",""
"381236641492107264","Amine#2111","08-Apr-20 09:27 PM","oh sorry, my net","",""
"381236641492107264","Amine#2111","08-Apr-20 09:29 PM","so ftxt.read() it means to read to somewhere?","",""
"234679095378706433","Blauelf#6622","08-Apr-20 09:30 PM","It's an expression that would consume the whole file (read to the end) and return a string of that content.","",""
"234679095378706433","Blauelf#6622","08-Apr-20 09:33 PM","So I could have something like
```Python
my_file = open(filename)
my_text = my_file.read()
my_file.close()
```
or equivalently
```Python
with open(filename) as my_file:
    my_text = my_file.read()
```
(`""r""` is the default file open mode and doesn't have to be specified)","",""
"381236641492107264","Amine#2111","08-Apr-20 09:34 PM","oh nice, thanks , so `""r""` is the default file open , if i want to write i should do the `""a""` or `""w""`","",""
"414633982525833216","diegosaez#3059","10-Apr-20 02:02 AM","could anyone give me a hint? i still don't understand how to count consecutive strs","",""
"294594271120588800","Klement#9978","10-Apr-20 03:23 AM","> could anyone give me a hint? i still don't understand how to count consecutive strs
@diegosaez I used a regular expression (regex, from the `re` module). If you want to learn how to use them, I recommend  checking out this tutorial (<https://automatetheboringstuff.com/2e/chapter7/>) (the website also has a lot of other interesting Python tutorials), and the official documentation (<https://docs.python.org/3/howto/regex.html>).","","👍 (1)"
"571281752207654913","niklaszzm#9764","10-Apr-20 07:54 AM","> @diegosaez I used a regular expression (regex, from the `re` module). If you want to learn how to use them, I recommend  checking out this tutorial (<https://automatetheboringstuff.com/2e/chapter7/>) (the website also has a lot of other interesting Python tutorials), and the official documentation (<https://docs.python.org/3/howto/regex.html>).
@Klement Nice -- I did it with loads of for loops -- managed to get it working, but regex would have been quicker probably. The problem I had with regex was trying to find a consecutive pattern. Findall() would only give me the total amount, but no count of the consec. patterns. How did you do that?","",""
"234679095378706433","Blauelf#6622","10-Apr-20 09:37 AM","@niklaszzm You can do things like `(?:abc)+` which would match a sequence `abcabcabc` with as many occurrences as possible (`+` is ""greedy""). I chose `?:` to make the group non-capturing just so that I get the full match more easily.","",""
"677215146694803458","pbrouse#8651","10-Apr-20 06:16 PM","@diegosaez My approach was for each str, I used find() to store the index of each instance of the str in the sequence. I then used that to determine the longest run, by comparing the distance between each index to the length of the str.","",""
"677215146694803458","pbrouse#8651","10-Apr-20 06:18 PM","So for example, for STR “AGAT” if I had an instance at index 0, and another at index 4, I knew those were consecutive and added to my counter.","",""
"374720030346051584","CyHunt#2508","10-Apr-20 06:32 PM","hi! im having a bit of trouble with this one... i wanted to use both DictReader and reader with the csv file so i could both  compare to get the consecutive STR's and compare to the csv file to get the person who the dna string referred to... but as soon as i add the command csv.reader under the comman csv.DictReader, my next line becomes an error! anyone know a workaround to this one?","",""
"234679095378706433","Blauelf#6622","10-Apr-20 08:14 PM","You can't use both on the same file, as both would want to read the file and advance position within the file. Use one or the other. It's not a large difference.","",""
"234679095378706433","Blauelf#6622","10-Apr-20 08:16 PM","A possible work-around would be to open the file twice. I just don't know why one would want this, and your explanation doesn't really convince me.","",""
"374720030346051584","CyHunt#2508","10-Apr-20 10:09 PM","Huh... Then I've no idea how to compare to the csv 🤣😅","",""
"677215146694803458","pbrouse#8651","10-Apr-20 10:14 PM","@CyHunt Just store the data from the csv in a variable as either a dictionary or list. Not sure why you’d need two instances of the file","",""
"213703938027814913","blackcat#5439","11-Apr-20 12:26 PM","hello, how do i only count a substring in a string but only the consecutives?","",""
"213703938027814913","blackcat#5439","11-Apr-20 12:27 PM","string.count('substring') returns the total number, how do i make it only the consecutives 😣","",""
"213703938027814913","blackcat#5439","11-Apr-20 12:50 PM","after 3hrs i found this snippet ```max(len(list(y)) for (c,y) in itertools.groupby(my_str) if c=='b')```","",""
"213703938027814913","blackcat#5439","11-Apr-20 12:50 PM","now im figuring out how to change b to a string 👍","",""
"566075422547247105","kaizen71#1394","12-Apr-20 05:15 AM","HI GUYZ","",""
"566075422547247105","kaizen71#1394","12-Apr-20 07:05 AM","anyone tehre?","",""
"566075422547247105","kaizen71#1394","12-Apr-20 07:05 AM","there?","",""
"665053121499627571","fjw#9108","12-Apr-20 07:15 AM","?","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:05 AM","need some help?","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:17 AM","||https://pastebin.com/sRxiNdd1||","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:17 AM","> ||https://pastebin.com/sRxiNdd1||
@kaizen71 spoiler","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:17 AM","need some help!","",""
"213703938027814913","blackcat#5439","12-Apr-20 08:25 AM","whats wrong","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:45 AM","off by one errors","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:45 AM","cant find","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:45 AM","the issue","",""
"566075422547247105","kaizen71#1394","12-Apr-20 08:45 AM","might be my regular exp","",""
"414633982525833216","diegosaez#3059","12-Apr-20 04:13 PM","> @diegosaez I used a regular expression (regex, from the `re` module). If you want to learn how to use them, I recommend  checking out this tutorial (<https://automatetheboringstuff.com/2e/chapter7/>) (the website also has a lot of other interesting Python tutorials), and the official documentation (<https://docs.python.org/3/howto/regex.html>).
@Klement  thanks, with regular expression is way more easy","",""
"234679095378706433","Blauelf#6622","12-Apr-20 05:06 PM","@kaizen71 I don't understand why you use a csv.reader for your sequence, too.
And I don't seem to get your logic in that loop. I kept the index of the last match, and would compare the difference to that one, instead of the next match.
But even if that worked, I don't see the ""max length"" aspect anywhere. It's just returning the last count.","",""
"234679095378706433","Blauelf#6622","12-Apr-20 05:32 PM","And the `f = True` should probably not be within the inner loop, but before it. It might be the initial assumption, but a single mismatch should be able to break it.","",""
"234679095378706433","Blauelf#6622","12-Apr-20 05:42 PM","Thinking about it, the whole concept of `f` is weird, as `True` should be the assumption when entering the inner loop, but `False` when entering the outer loop. I would suggest checking out the `else:` of a `for` loop at least for the outer loop.","",""
"414633982525833216","diegosaez#3059","12-Apr-20 08:11 PM","i got an error in DNA (first picture), but when i tried in a small test version of my code, i got the value of the variable (second picture). What am i doing wrong? any hints or ideas?","https://cdn.discordapp.com/attachments/637500246087434252/698943372974358600/Screen_Shot_2020-04-12_at_13.06.18.png",""
"414633982525833216","diegosaez#3059","12-Apr-20 08:11 PM","second picture","https://cdn.discordapp.com/attachments/637500246087434252/698943495720796240/SPOILER_Screen_Shot_2020-04-12_at_13.08.05.png",""
"414633982525833216","diegosaez#3059","12-Apr-20 08:12 PM","and this is my code https://pastebin.com/03caPEbm","",""
"424608935006175242","UrsacianLP#6391","12-Apr-20 09:03 PM","Is this problem broken? If you manually check for example 17.txt(with control-f), which should give you Harry, you can see that the numbers of sequences don't match, same for all of them, am I doing something wrong? For the small files it worked perfectly!","",""
"424608935006175242","UrsacianLP#6391","12-Apr-20 09:04 PM","I mean large.csv has different data than the matching sequences","",""
"234679095378706433","Blauelf#6622","12-Apr-20 09:36 PM","You take the STR sequences from the CSV file? You count the longest contiguous repeat sequence for each STR?","",""
"424608935006175242","UrsacianLP#6391","12-Apr-20 10:51 PM","I figured it out, I was doing it all wrong before, thanks anyway","",""
"424608935006175242","UrsacianLP#6391","12-Apr-20 10:52 PM","I only counted them, to be honest I didn't know what contiguous means lol, so stupid","",""
"566075422547247105","kaizen71#1394","12-Apr-20 11:55 PM","hello","",""
"566075422547247105","kaizen71#1394","12-Apr-20 11:55 PM","anyone available?","",""
"236625588868087808","psychodoughb0y#0892","13-Apr-20 04:23 AM","Is there a way to do this without looping over the entirety of the dna sequence multiple times?","",""
"213703938027814913","blackcat#5439","13-Apr-20 08:57 AM","I counted how many 'ACTG' in the dna sequence first before iterating through the dna database and check the number of ACTG per row/person","",""
"234679095378706433","Blauelf#6622","13-Apr-20 11:26 AM","@psychodoughb0y You only need to open/read/close the file once, but iterate the string once per STR, I guess. However you arrange that (depending on your algorithm, you could do those in parallel, which would not really change anything).","",""
"236625588868087808","psychodoughb0y#0892","13-Apr-20 07:24 PM","It just feels inefficient to loop the string STR times.","",""
"566075422547247105","kaizen71#1394","14-Apr-20 04:42 AM","yaay","",""
"566075422547247105","kaizen71#1394","14-Apr-20 04:42 AM","dna iz done forrr me!","","👍 (1)"
"409623218517704705","Thien#0976","14-Apr-20 08:30 AM","do we have to hard-code each STR to count?","",""
"409623218517704705","Thien#0976","14-Apr-20 08:30 AM","I'm kind of stuck at how to deal with csv file","",""
"409623218517704705","Thien#0976","14-Apr-20 08:31 AM","how to extract each element in csv file?","",""
"409623218517704705","Thien#0976","14-Apr-20 08:31 AM","or do I have to do it? or is there any way else?","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:18 AM","you can check if every row contains your values if you want to","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:18 AM","although it's quite tedious without a list","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:20 AM","hey guys","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:20 AM","basically my problem with dna is somewhy my solution works with the small database but not large","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:20 AM","the problem is with finding all instances of different dnas","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:21 AM","here's my code","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:21 AM","https://pastebin.com/bPY56Bfm","",""
"385059424387072000","t0dd#3074","14-Apr-20 10:21 AM","i think  the problem is somewhere between line 23 and line 36","",""
"234679095378706433","Blauelf#6622","14-Apr-20 11:02 AM","@Thien Do not hard-code anything, but take the STR sequences from the CSV's header row (e.g. through`fieldnames`).","",""
"234679095378706433","Blauelf#6622","14-Apr-20 11:05 AM","@t0dd Not only do you hard-code sequences, but you also don't seem to consider ""consecutive"".","",""
"385059424387072000","t0dd#3074","14-Apr-20 11:06 AM","will try that thanks","",""
"663249571627008001","WesleyNepomuceno#3126","15-Apr-20 05:15 AM","How can I improve my code? https://pastebin.com/Jyw2unmb","",""
"663249571627008001","WesleyNepomuceno#3126","15-Apr-20 05:19 AM","I know I need to improve my style, but it is difficult to escape the guidelines from the language/project that I work with.","",""
"236625588868087808","psychodoughb0y#0892","15-Apr-20 05:41 AM","style50 is your friend.","",""
"558660774307037194","ソフィア#7524","15-Apr-20 01:42 PM","Why is it not working properly if I remove the int() part?","https://cdn.discordapp.com/attachments/637500246087434252/699932548641325086/SPOILER_capture1.PNG",""
"289924712161738752","chairen#4623","15-Apr-20 01:49 PM","Hi everyone,
We have a dna
https://pastebin.com/fmScbVTi

Total ""AGATC"" what i counted was 28 instead 22 for Lavender,22,33,43,12,26,18,47,41 in large.csv","https://cdn.discordapp.com/attachments/637500246087434252/699934495465406474/dna.png",""
"289924712161738752","chairen#4623","15-Apr-20 01:50 PM","Could you explain for me in this issue? Thank you","",""
"558660774307037194","ソフィア#7524","15-Apr-20 02:03 PM","It should be the consecutive AGATCs only.","","😋 (1)"
"407308504706187304","Comp_Turt#1065","15-Apr-20 10:19 PM","Should I DictReader the csv file guys ?","",""
"236625588868087808","psychodoughb0y#0892","15-Apr-20 11:42 PM","Yes.","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 10:38 AM","hey, can someone help me dna?","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 12:14 PM","","https://cdn.discordapp.com/attachments/637500246087434252/700272814363639858/dna.txt",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 12:14 PM","My code works for small.csv but does not work with large.csvb","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 12:14 PM","*large.csv","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 12:14 PM","the counter values are off for large.csv for some reason","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 12:14 PM","can someone help?","",""
"234679095378706433","Blauelf#6622","16-Apr-20 01:11 PM","> For each of the STRs (from the first line of the CSV file), your program should compute the longest run of consecutive repeats of the STR in the DNA sequence to identify.","",""
"234679095378706433","Blauelf#6622","16-Apr-20 01:11 PM","I see neither ""longest"" nor ""consecutive"" in your code.","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 02:38 PM","Ohhh, i forgot to take that into account","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 02:38 PM","thanks","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 03:11 PM","Hi, so I've updated the code with consecutive and longest","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 03:11 PM","But it still isnt working for the large databases","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 03:11 PM","","https://cdn.discordapp.com/attachments/637500246087434252/700317488159916142/dna_1.txt",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 03:11 PM","Can someone help?","",""
"501385167693414427","noubody#4835","16-Apr-20 08:10 PM","can anybody give me a hand with this, its failing against large.csv files","",""
"501385167693414427","noubody#4835","16-Apr-20 08:10 PM","https://pastebin.com/9c6DpVV1","",""
"501385167693414427","noubody#4835","16-Apr-20 08:12 PM","also i converted the whole db into a dictionary, names as keys and the dna strands as a complete dictionary of its own as values to its respective keys","",""
"234679095378706433","Blauelf#6622","16-Apr-20 08:35 PM","@gimmetechtip Why do you open the sequence as a CSV file? Seems a weird way to me for reading a single line.
`d.sort()` and `d[-1]` looks like a weird solution for finding `max(d)`.
But what's really wrong is probably the line `for i in range(1, a):`","",""
"554876169363652620","gimmetechtip#6299","16-Apr-20 08:35 PM","> @gimmetechtip Why do you open the sequence as a CSV file? Seems a weird way to me for reading a single line.
> `d.sort()` and `d[-1]` looks like a weird solution for finding `max(d)`.
> But what's really wrong is probably the line `for i in range(1, a):`
@Blauelf Yeah I figured it out, thanks for the help tho","",""
"234679095378706433","Blauelf#6622","16-Apr-20 08:47 PM","@noubody Scroll a tiny bit up https://discordapp.com/channels/393846237255696385/637500246087434252/700287130286686298","",""
"501385167693414427","noubody#4835","17-Apr-20 09:43 AM","@Blauelf didnt the count function handle that already","",""
"501385167693414427","noubody#4835","17-Apr-20 09:53 AM","so do u mean if a strand repeats consecutively like next to each other in a line do i need to take it as a single count rather than having to count it individually","",""
"234679095378706433","Blauelf#6622","17-Apr-20 01:40 PM","A sequence `ababcababababcab` for an STR of `ab` should report 4, because there are runs of 2, 4, 1 repeats, with 4 being the highest number.","","👍 (1)"
"407308504706187304","Comp_Turt#1065","17-Apr-20 07:22 PM","is there any possibility that python 3.7 does not recognize file.fieldnames?","https://cdn.discordapp.com/attachments/637500246087434252/700743012237705307/unknown.png",""
"234679095378706433","Blauelf#6622","17-Apr-20 08:28 PM","@Comp_Turt Is `file` a reader or DictReader?","",""
"407308504706187304","Comp_Turt#1065","17-Apr-20 08:29 PM","dictreader","",""
"234679095378706433","Blauelf#6622","17-Apr-20 08:29 PM","Oh, it works perfectly, just the file has been closed.","",""
"234679095378706433","Blauelf#6622","17-Apr-20 08:30 PM","If you use a `with`, make sure you read the file before the end of that block.","",""
"234679095378706433","Blauelf#6622","17-Apr-20 08:32 PM","I wasn't aware a DictReader used a regular reader in the background.","","👍 (1)"
"228976034777792512","Secato#5344","17-Apr-20 11:38 PM","If someone are looking for a more ""automated"" way to test your code, you can run this in your terminal:
```for i in {1..4}; do python dna.py databases/small.csv sequences/$i.txt ; done```
```for i in {5..20}; do python dna.py databases/large.csv sequences/$i.txt ; done```","https://cdn.discordapp.com/attachments/637500246087434252/700807369331965952/unknown.png","👍 (2)"
"236625588868087808","psychodoughb0y#0892","17-Apr-20 11:40 PM","Neat.","",""
"665053121499627571","fjw#9108","18-Apr-20 01:31 AM","shell scripting for fun & profit","",""
"665053121499627571","fjw#9108","18-Apr-20 01:42 AM","or even more compactly","",""
"665053121499627571","fjw#9108","18-Apr-20 01:43 AM","~/pset6/dna/ $ for i in `ls sequences`; do python dna.py databases/large.csv sequences/$i ; done","",""
"665053121499627571","fjw#9108","18-Apr-20 01:43 AM","''","",""
"665053121499627571","fjw#9108","18-Apr-20 01:43 AM","\'","",""
"665053121499627571","fjw#9108","18-Apr-20 01:43 AM","hmm - yay for markdown text","",""
"665053121499627571","fjw#9108","18-Apr-20 01:44 AM","~/pset6/dna/ $ for i in \`ls sequences\`; do python dna.py databases/large.csv sequences/$i ; done","",""
"665053121499627571","fjw#9108","18-Apr-20 01:48 AM","although to make troubleshooting easier:","",""
"665053121499627571","fjw#9108","18-Apr-20 01:48 AM","for i in \`ls sequences | sort -n\`; do python dna.py databases/large.csv sequences/$i; done","",""
"356245550737260554","strawnks#8488","18-Apr-20 05:14 AM","im having some trouble trying to access the data that i access from csv.reader","",""
"665053121499627571","fjw#9108","18-Apr-20 06:51 AM","what are you doing/trying to do?","",""
"428036136301232130","Alix#7025","18-Apr-20 05:42 PM","I have an issue with check50. My script works when I test it with each text file but in check50 the large databases is not working. I think it's because my running time is too long. I am around 2 or 3 seconds for sequence/10.txt for example. 
I tried to replace re.search by ""if x in string"" or/and string.find as I saw here but it's not improving at all ! Do you have any idea ?
I can post a sample of my code if needed","",""
"234679095378706433","Blauelf#6622","18-Apr-20 06:42 PM","""if x in string"" sounds like a slow thing to do, but I did not have issues with algorithms based on any of the three.
You get the numbers first, and then compare to the people in the database, right?","",""
"385411510773612545","rjdabeast#6898","18-Apr-20 08:56 PM","I dont understand what they mean by read the csv file to memory","",""
"385411510773612545","rjdabeast#6898","18-Apr-20 08:57 PM","Are you meant to store the csv as a new file","",""
"428036136301232130","Alix#7025","18-Apr-20 11:01 PM","> ""if x in string"" sounds like a slow thing to do, but I did not have issues with algorithms based on any of the three.
> You get the numbers first, and then compare to the people in the database, right?
@Blauelf Yes I have for loops for each STR to get the max and then I am opening the database with csv.DictReader to search for a match","",""
"234679095378706433","Blauelf#6622","18-Apr-20 11:14 PM","Wait - where do you find the STRs if you open the csv later? Or do you open it twice?","","👍 (1)"
"428036136301232130","Alix#7025","18-Apr-20 11:26 PM","First I open the text file with the sequence, I count for each STR the max and then I search for a match in the database","",""
"236625588868087808","psychodoughb0y#0892","18-Apr-20 11:27 PM","How do you know which STR to look for if you're opening the csv later?","",""
"428036136301232130","Alix#7025","18-Apr-20 11:28 PM","I hard coded them, now I see that it's not the best way to do it","",""
"428036136301232130","Alix#7025","18-Apr-20 11:29 PM","But still, I don't think this will speed up my script 😦","",""
"236625588868087808","psychodoughb0y#0892","18-Apr-20 11:31 PM","You don't think what will speed up your script?","",""
"234679095378706433","Blauelf#6622","18-Apr-20 11:43 PM","It won't speed up the script, just make it work more correctly, in the sense of the specification.","",""
"236625588868087808","psychodoughb0y#0892","18-Apr-20 11:44 PM","Who cares how fast something is if it doesn't work, right?","",""
"356245550737260554","strawnks#8488","19-Apr-20 12:34 AM","how do you open the csv once you use the csv.reader function? im looking at the documentary but im still quite confused","",""
"356245550737260554","strawnks#8488","19-Apr-20 12:36 AM","if i had something like
`data = reader(csvFile)`
how would i access it?","",""
"234679095378706433","Blauelf#6622","19-Apr-20 02:10 AM","If you like, you could convert it to a `list`, or use `next` to get the first row and then a `for` loop.","",""
"356245550737260554","strawnks#8488","19-Apr-20 02:55 AM","thanks a lot! that's just what i needed to solve it","",""
"298442590720622593","Sean#1286","19-Apr-20 01:30 PM","","https://cdn.discordapp.com/attachments/637500246087434252/701379219149815869/SPOILER_unknown.png",""
"298442590720622593","Sean#1286","19-Apr-20 01:31 PM","Hi, why does my if function on line 63 just wouldn't work even though the values are correct?","",""
"530382988249399296","wut#7543","19-Apr-20 01:40 PM","i think x[key] and StrPeople[key] are different data type","",""
"530382988249399296","wut#7543","19-Apr-20 01:40 PM","one of it might be a string based on how you loaded it","",""
"298442590720622593","Sean#1286","19-Apr-20 02:01 PM","@wut it worked","",""
"298442590720622593","Sean#1286","19-Apr-20 02:02 PM","I changed it to int, thought it will show an error if the data types are different","",""
"298442590720622593","Sean#1286","19-Apr-20 02:02 PM","Thanks 🙂","",""
"530382988249399296","wut#7543","19-Apr-20 02:04 PM","np","",""
"385411510773612545","rjdabeast#6898","19-Apr-20 02:53 PM","what exactly does style50 look for? I can't get a score above 0.95","",""
"530382988249399296","wut#7543","19-Apr-20 03:13 PM","in the ide type in style50 dna.py","",""
"530382988249399296","wut#7543","19-Apr-20 03:14 PM","then u can see the suggestions to improve the style of your code","",""
"234679095378706433","Blauelf#6622","20-Apr-20 06:56 PM","@rjdabeast Python style guide used is official PEP8 (Python Enhancement Proposal 8 ""Style Guide for Python Code"")","",""
"407308504706187304","Comp_Turt#1065","21-Apr-20 01:42 PM","why it is not printing anything ? Can you spot any mistake. I haven't made the structure for matching yet, I want to check if I can find the longest sequence of STR from the txt.","https://cdn.discordapp.com/attachments/637500246087434252/702106892813467648/SPOILER_unknown.png",""
"388975038084415499","JayKay#6470","21-Apr-20 02:55 PM","I honestly can't figure out wth should I do after loading the files","",""
"388975038084415499","JayKay#6470","21-Apr-20 02:59 PM","I did watch the walkthrough and I know that after opening the files I should start counting the occurrence of the first STR in CSV file but I just can't figure out how to put it in code ugh ☹️","",""
"634074113522008074","ZeroX#0975","21-Apr-20 05:40 PM","","https://cdn.discordapp.com/attachments/637500246087434252/702166984758132755/IMG_20200421_191956.jpg",""
"634074113522008074","ZeroX#0975","21-Apr-20 05:40 PM","The code above just includes the logic of finding the STR and counting it and then finding the longest consecutive occurrence of a particular STR. The 'index' list contains the lengths of the different STRs. 
I get an accurate output for most of the sequences, but for a couple or so the AATG count lacks by just 1(I always get the AATG count 1 lower than the expected). The output in the photo is of the sequences/5.txt which corresponds to the name Lavender. There's just one difference- the AATG count I get is 42 while AATG count for Lavender in csv file is 43. Rest of the STR counts are same. The same issue happens with a couple different files. 
Please help with this.","",""
"634074113522008074","ZeroX#0975","21-Apr-20 05:42 PM","Above photo is a spoiler","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:23 PM","I am trying to open cs50 IDE for last half an hour","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:23 PM","but it's always loading","",""
"269227960156946454","GhostDragon#7128","21-Apr-20 06:24 PM","it is down right now","",""
"269227960156946454","GhostDragon#7128","21-Apr-20 06:24 PM","if you look at #ide","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:24 PM","anyone facing this same problem","",""
"269227960156946454","GhostDragon#7128","21-Apr-20 06:24 PM","although i just loaded it and immediately got in","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:26 PM","can you please share distribution file of DNA? If you have.. I may try on VSCode then","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:26 PM","thanks","",""
"693183135600345319","zamanwahid16#0798","21-Apr-20 06:26 PM","🙂","",""
"269227960156946454","GhostDragon#7128","21-Apr-20 06:35 PM","use wget","",""
"269227960156946454","GhostDragon#7128","21-Apr-20 06:36 PM","with the link in the pset page","",""
"375401315037216789","bronxriver#1583","22-Apr-20 02:55 AM","does anyone know why in nest while loop within a four loop if i iterate i extra amounts it reverts after exiting the hwile loop","",""
"375401315037216789","bronxriver#1583","22-Apr-20 02:56 AM","nested* for* while* wow i need a coffee haha","",""
"375401315037216789","bronxriver#1583","22-Apr-20 04:13 AM","I am just wondering if you knew how in python we could increment i higher than one with in a for loop as in pushing it lets say 4 forward then resuming back incrementing by one?","",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 07:42 AM","> why it is not printing anything ? Can you spot any mistake. I haven't made the structure for matching yet, I want to check if I can find the longest sequence of STR from the txt.
@Comp_Turt Maybe indentation problem after reading the CSV file? shouldn't you start reading the text file outside of the csv file reading block?","",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 08:01 AM","Can anyone tell me what's wrong here?","https://cdn.discordapp.com/attachments/637500246087434252/702383514372407337/unknown.png",""
"365024207240953856","tai#9678","22-Apr-20 08:12 AM","Spoiler","",""
"365024207240953856","tai#9678","22-Apr-20 08:14 AM","This is my code to check the counts of STRs with the csv database. So far, all of the numbers match, but my code still return ""No match"". Can some one help me check it? the debug just pass the ""If statement"" even in true condition. with open(argv[1], newline='') as database:
    reader = csv.DictReader(database)
    for row in reader:
        if (row['AGATC'] == max_AGATC) and (row['AATG'] == max_AATG) and (row['TATC'] == max_TATC):
            print(row['name'])
            exit(1)
    print(""No match\n"")","",""
"365024207240953856","tai#9678","22-Apr-20 08:15 AM","","https://cdn.discordapp.com/attachments/637500246087434252/702387133952032769/with_openargv1_newline_as_database.png",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 09:40 AM","It returns only the last row when I print dna_database.. How can I fix this?","https://cdn.discordapp.com/attachments/637500246087434252/702408394216046635/SPOILER_unknown.png",""
"530382988249399296","wut#7543","22-Apr-20 04:22 PM","is dna_database an array?","",""
"530382988249399296","wut#7543","22-Apr-20 04:22 PM","if so you should do dna_databse.append(row)","",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 05:47 PM","Can anyone help me out please whose program is accepted. I just want to check whether my STR calculation is correct or not.. for large.csv and 20.txt","https://cdn.discordapp.com/attachments/637500246087434252/702530988349194280/unknown.png",""
"634074113522008074","ZeroX#0975","22-Apr-20 06:42 PM","@zamanwahid16 You cab check yourself on the website. There are test cases provided","",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 07:43 PM","I am getting 20/21 test case correct.. My program fails to identify the longest STR sequence of ""GATA"" in the test case number 19. It should ouput ""FRED"" but not ""No match""","",""
"693183135600345319","zamanwahid16#0798","22-Apr-20 07:43 PM","Anyone faced similar problem?","",""
"634074113522008074","ZeroX#0975","22-Apr-20 08:56 PM","@zamanwahid16 Yeah I had a similar problem but with different test cases and STR's. So what I did was use the print function where I had a doubt. And there after explained the code to myself what it was doing. And finally I figured out the bug. Really helps. Also try using the debugging tool in cs50 ide","",""
"407308504706187304","Comp_Turt#1065","23-Apr-20 02:28 AM","how to iterate over every STR and not just the first one? all my counters are right however my program does not pick the right name if another name has been before that with the same number of consecutive STR","",""
"407308504706187304","Comp_Turt#1065","23-Apr-20 02:55 PM","1st question why in Ginny's example prints 49 instead of 48 and how to iterate over every STR instead of only the first one","https://cdn.discordapp.com/attachments/637500246087434252/702850220186140773/SPOILER_unknown.png",""
"407308504706187304","Comp_Turt#1065","23-Apr-20 03:35 PM","I'm fed up with this s... DNA finally solved after 5 days with some mistakes.... while I was working on DNA I've done the half of SQL movies (in order to get my brain out of the DNA zone)🤕 😫","",""
"476784784551444490","ninlectro#9391","24-Apr-20 09:16 AM","I'm getting the correct answer for the large databases. However when put through submit50 they are marked as did not find ""Draco\n"" even though it was outputted. It seems like my algorithm is too slow as it works for the small databases. Anyone have any help?","https://cdn.discordapp.com/attachments/637500246087434252/703127331752902718/proof.JPG",""
"476784784551444490","ninlectro#9391","24-Apr-20 09:51 AM","Nevermind, changed my algorithm and its much faster now and it works !!!","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:01 PM","Hi there :)
I have some trouble with my code, I dunno why it doesn’t print the name of the match. In my code it checks if the total strs match with the database given.","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:01 PM","","https://cdn.discordapp.com/attachments/637500246087434252/703244192285196298/SPOILER_Screenshot_2020-04-24_at_4.00.43_PM.png",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:03 PM","So at the end I don’t have any output, even if I pass other sequence or database. Just no output. I don’t understand why, because I compare each STRS value of the database with the founded STRS count  of the sequence.","",""
"311363799640702976","robin#9650","24-Apr-20 05:15 PM","count() returns count of how many times a given object occurs in list. Not the longest consecutive occurrence count","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:17 PM","Ohhh man","",""
"311363799640702976","robin#9650","24-Apr-20 05:17 PM","this pset requires the longest consecutive occurence count. For instance, AAABBCCBCCCA. if you count(A), it will return 4, but you only need to find the longest consecutive sequence of repeated A, which is ""AAA"". which is 3, not 4. For B, count(B) returns 3, that is not you want, you want 2 because of ""BB""","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:17 PM","You’re right","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:17 PM","Got it, thank you very much","",""
"311363799640702976","robin#9650","24-Apr-20 05:18 PM","max() would be your friend","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:18 PM","Perfect, I’ll read the documentation of the function","",""
"625071332278665219","Ivan21#0894","24-Apr-20 05:18 PM","🙂","",""
"683492976013606937","Nofrendo#4128","24-Apr-20 11:26 PM","Hi all! :)
So my code ""works"" but it's horridly slow ( it works in the ide but not in submit50 for the large db)
Suggestions on how to improve it?

https://pastebin.com/rtDLN9MQ","",""
"665053121499627571","fjw#9108","25-Apr-20 01:56 AM","nested loops are slow","",""
"699279545529925742","Higgy#0383","25-Apr-20 11:43 AM","@Nofrendo  It's probably slow because you don't break out of your third loop (with y) even when you reach a non match","",""
"699279545529925742","Higgy#0383","25-Apr-20 11:54 AM","Also if your STR was ever at the start of the DNA sequence your code wouldn't work as your n is only initialized in the last else. I would delete that else, initialized n after the start of your k loop and add an 'else: break' in line with your 'if: m < n'","",""
"683492976013606937","Nofrendo#4128","25-Apr-20 01:01 PM","Thank you!!! Ill try it today","",""
"625071332278665219","Ivan21#0894","25-Apr-20 03:57 PM","Hi there 🙂 just a question. How can I append a number to a list that is a value of a dictionary in python?","",""
"625071332278665219","Ivan21#0894","25-Apr-20 03:59 PM","","https://cdn.discordapp.com/attachments/637500246087434252/703591045828444200/image0.jpg",""
"690305517586874378","DJMANTA#8982","25-Apr-20 04:38 PM","@Ivan21  for example, record['AGATC'","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 04:38 PM","ignore that, didn't mean to hit enter lol","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:39 PM","No prob haha","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 04:39 PM","Have you tried record['AGATC'].append(num)?","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:39 PM","Yeah","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:40 PM","It didn’t work","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:40 PM","But is this right?","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:40 PM","","https://cdn.discordapp.com/attachments/637500246087434252/703601366408626256/image0.jpg",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:41 PM","Record is my dictionary and genTypeList[1] corresponda to “AGATC”","",""
"625071332278665219","Ivan21#0894","25-Apr-20 04:41 PM","Values is an empty list I created and counter is the value I want to append","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:04 PM","append() returns None so you can't assign to it's result","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:05 PM","e.g. list = [1, 2, 3].append(4) will make list = None","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:05 PM","append() just changes the list you call it on","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:05 PM","e.g.
list = [1, 2, 3]
list.append(4)
will make list = [1, 2, 3, 4]","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:07 PM","first you need to initialise every value in record as the empty list","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:07 PM","then whenever you want to append to it just use
record[genTypeList[i]].append(counter)","",""
"690305517586874378","DJMANTA#8982","25-Apr-20 05:07 PM","without an assignment","",""
"698738390811541535","bfernando#4990","25-Apr-20 09:57 PM","was thinking of jumping from week1 (C) to the week with python. Does anyone know off the top of their head if the python problem sets are dependent on the previous weeks or is it a replica of the C problems but in python","",""
"698738390811541535","bfernando#4990","25-Apr-20 09:58 PM","sorry I glanced at it and saw mario but didn't look into the other parts","",""
"698738390811541535","bfernando#4990","25-Apr-20 09:58 PM","oh nevermind I see the most recent message in this chat talks about arrays","",""
"231238068898627585","Eranekao#1986","25-Apr-20 11:48 PM","Hi all,  I have a question about the python csv.reader and csv.DictReader. If I print the content of each row of dbdictreader after the following code, it will use the second row of the csv for my dictionary keys (instead of the first, as expected):","https://cdn.discordapp.com/attachments/637500246087434252/703709077926314002/SPOILER_unknown.png",""
"231238068898627585","Eranekao#1986","25-Apr-20 11:49 PM","I was able to pinpoint it to the next(dbreader) line. If I don't call next(), my keys for dbdictreader are the first row as expected","",""
"231238068898627585","Eranekao#1986","25-Apr-20 11:50 PM","but I called next() on dbreader, not dbdictreader, so why does it seem to affect dbdictreader?","",""
"231238068898627585","Eranekao#1986","25-Apr-20 11:52 PM","I thought each reader was independent. It looks like even if I use two different reader methods and assign them to difference variables, they are the same reader because they were used on the same file... is that so? if so, how can I make the readers indepedant?","",""
"690305517586874378","DJMANTA#8982","26-Apr-20 07:15 PM","This is just an educated guess, but it's because you're using the same file pointer for both of them","",""
"690305517586874378","DJMANTA#8982","26-Apr-20 07:15 PM","i.e. dbfile","",""
"690305517586874378","DJMANTA#8982","26-Apr-20 07:17 PM","You could also just use one DictReader and use header = dbdictreader.fieldnames to get the column names","",""
"640676779505352716","xyz#3272","26-Apr-20 08:48 PM","Why is this line not working?","",""
"640676779505352716","xyz#3272","26-Apr-20 08:48 PM","if row[key] == value:","",""
"640676779505352716","xyz#3272","26-Apr-20 08:56 PM","Every other line is functioning properly","",""
"690305517586874378","DJMANTA#8982","26-Apr-20 11:04 PM","are you sure row[key] and value are of the same type?","",""
"690305517586874378","DJMANTA#8982","26-Apr-20 11:04 PM","not sure if that's an issue in python but worth checking","",""
"640676779505352716","xyz#3272","26-Apr-20 11:32 PM","I had to convert it into an int","",""
"640676779505352716","xyz#3272","26-Apr-20 11:32 PM","It works now, thank you","",""
"683492976013606937","Nofrendo#4128","27-Apr-20 01:04 AM","@Higgy just adding a break and intzializing n earlier worked perfectly! thanks!","",""
"402562063823667200","KatsuThunder#2846","27-Apr-20 01:09 AM","For those struggling to figure out how to count consecutive DNA sequences, I recommend checking out this article that @Klement posted! Particularly the ""Matching Specific Repetitions with Braces"" section","","👍 (3)"
"402562063823667200","KatsuThunder#2846","27-Apr-20 01:10 AM","https://automatetheboringstuff.com/2e/chapter7/","",""
"212069163542249472","Ginge#3034","27-Apr-20 03:37 AM","i just did some hack-y stuff with `.find()` which was fun.  My `check_STR()` function is 12 lines!","",""
"211261070185070602","Bobby#3076","27-Apr-20 04:03 AM","@KatsuThunder Thanks. I'm actually working through Automate the Boring Stuff on Udemy right now. I hope it covers basically the same material as the book.","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:40 AM","@Singularity as per #rules 
>  Solutions:  Per the course's policy on academic honesty, take care not to share outright solutions to problems!
So please delete this","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:40 AM","Ohkay 😅 

I was wondering about that, so shared a link instead of the actual code. 

So, do I remove it completely?","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:41 AM","Oh right wait","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:41 AM","You said Delete this","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:41 AM","I would just because it is working code that somebody could just copy paste without having to do any thinking","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:41 AM","Done","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:41 AM","thank you!","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:42 AM","Also, just wanted to know, if I wish to have suggestions for improvements, do I post only parts of the code?","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:42 AM","yeah","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:42 AM","Oh cool","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:42 AM","and put them under a spoiler tag whenever you post code","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:42 AM","Sure. Thanks! I'll do that instead","",""
"269227960156946454","GhostDragon#7128","27-Apr-20 09:43 AM","happy to help and thanks for very easily following the rules lol some people are not like that","",""
"383322530511060994","Singularity#9064","27-Apr-20 09:43 AM","😅 😄","",""
"395174542403829760","Orante#6576","27-Apr-20 10:10 AM","","https://cdn.discordapp.com/attachments/637500246087434252/704228054515318814/SPOILER_unknown.png",""
"395174542403829760","Orante#6576","27-Apr-20 10:11 AM","","https://cdn.discordapp.com/attachments/637500246087434252/704228217627607171/SPOILER_unknown.png",""
"395174542403829760","Orante#6576","27-Apr-20 10:12 AM","Can someone explain to me why does the value of my variable sequence and p became so large?

Whenever I try to check it with 1.txt, everything is alright, but testing it with other files results to the same problem","",""
"395174542403829760","Orante#6576","27-Apr-20 10:13 AM","oh wait, I think I figured it out.","",""
"395174542403829760","Orante#6576","27-Apr-20 10:19 AM","Nvm, I still do not know what is the problem.

I think the source of the problem is the read() but I do not know why","",""
"395174542403829760","Orante#6576","27-Apr-20 10:24 AM","for some reasons, my variable sequence becomes sequence*

On the other hand, when I try it on the working txt file, it is only sequence","",""
"395174542403829760","Orante#6576","27-Apr-20 10:45 AM","Im sorry, I got it fixed now. It is just my own carelessness","",""
"699279545529925742","Higgy#0383","27-Apr-20 12:21 PM","@Nofrendo No worries 🙂 thanks for the update","",""
"383322530511060994","Singularity#9064","27-Apr-20 04:16 PM","I have completed this problem set, and am looking forward to suggestions for improvement. 

So, I made a || `longest_consecutive_repeats` || function which || takes in the full sequence and the STR sequence, and uses Regular Expressions to match the STR in the full sequence. It matches all consecutive STRs and then captures them in groups. I used the `findall` to get the list of those groups, and then find the lengths of all of them, and then return the maxlength divided by the STR length. || The code explains it better 😅 

Here's the code:

|| https://i.imgur.com/dBcTp7h.png ||


One of the code comments links to a || Regex testing site ||, that link is here:

|| https://regex101.com/r/vhH1R6/ ||


So, anything I could have done better here?","",""
"456134395007467522","LORIS#3189","27-Apr-20 07:54 PM","@Singularity When you calculated the STR in the txt file, did you convert the content of the .txt to list (each element is a character) or you just did that using the original string?","",""
"383322530511060994","Singularity#9064","27-Apr-20 08:08 PM","@LORIS 

I stored the content of the sequence file into a string. (And Not a list of characters) 

The Regex matching works directly on the whole string.","",""
"383322530511060994","Singularity#9064","27-Apr-20 08:09 PM","You can see an example of it on the link mentioned in the comment, which I also pasted above. 

The pattern directly matches on the whole string","",""
"456134395007467522","LORIS#3189","27-Apr-20 08:42 PM","Didn't hear of that regex thing until now, thx man","",""
"456134395007467522","LORIS#3189","27-Apr-20 08:43 PM","Was trying to do it in a C way, using a for loop...","",""
"402562063823667200","KatsuThunder#2846","28-Apr-20 12:32 AM","@Singularity dming how I did it","","☑️ (1)"
"169966391758290944","Sam596#6551","28-Apr-20 01:26 AM","I'm very happy with that. Iterating over a csv file seemed daunting an hour ago. I thought the way I was going about checking the string was farfetched, but it worked perfectly!","https://cdn.discordapp.com/attachments/637500246087434252/704458406248841256/unknown.png",""
"677215146694803458","pbrouse#8651","28-Apr-20 07:55 PM","Yeah I think DNA was the most rewarding to me. I struggled for days, felt good when it finally clicked and I figured out my approach.","",""
"527542645002862609","mahmirr#9495","28-Apr-20 08:25 PM","The easiest way that I found to complete DNA was to use regular expressions.","",""
"527542645002862609","mahmirr#9495","28-Apr-20 08:25 PM","I love ReGex -- so useful!","",""
"689575154870780028","RandmTask#7556","29-Apr-20 08:36 AM","","https://cdn.discordapp.com/attachments/637500246087434252/704929054905729054/unknown.png",""
"689575154870780028","RandmTask#7556","29-Apr-20 08:39 AM","Why do I get a file not find error when the command line argument contains a directory eg. sequences/1.txt? if I copy 1.txt into the pset6 directory and remove sequences/ it works properly","",""
"689575154870780028","RandmTask#7556","29-Apr-20 08:43 AM","","https://cdn.discordapp.com/attachments/637500246087434252/704930868476510218/unknown.png",""
"212069163542249472","Ginge#3034","29-Apr-20 08:46 AM","is it handling databases/small.csv fine?","",""
"689575154870780028","RandmTask#7556","29-Apr-20 09:00 AM","nope","",""
"212069163542249472","Ginge#3034","29-Apr-20 09:02 AM","try `python dna.py ~/pset6/dna/databases/small.csv ~/pset6/dna/sequences/1.txt`?","",""
"689575154870780028","RandmTask#7556","29-Apr-20 09:07 AM","Thanks will do","",""
"405122073652887567","RoiSolomon#4312","29-Apr-20 03:30 PM","guys I'm not sure if I understand it right but I know how to find the longest run of each STR, i can hard code in my program each of the three STR ? Can I for example write something like :
agatMax = calculateMax(sequence)","",""
"405122073652887567","RoiSolomon#4312","29-Apr-20 03:31 PM","because other than that i can't figure out another way to compare between the txt file values to the csv","",""
"405122073652887567","RoiSolomon#4312","29-Apr-20 04:05 PM","how do i ignore the fist column 'name' ?","",""
"405122073652887567","RoiSolomon#4312","29-Apr-20 04:28 PM","nvm 🙂","",""
"456134395007467522","LORIS#3189","29-Apr-20 05:12 PM","Wait! do we need to find each AAGT (for example) or we have to find each run of that AAGT,
So: `[""AAGTAAGTAAGT""]`
is that 3 or 1?","",""
"456134395007467522","LORIS#3189","29-Apr-20 05:14 PM","Can anyone explain to me what do we have to find?","",""
"701479951479865384","ABD#0399","29-Apr-20 06:28 PM","Hi Friends, I have written the following code for DNA problem. 

Go through it and I would like to know if there is anything that could be made better.
https://pastebin.com/3DFsyU8x","",""
"701479951479865384","ABD#0399","29-Apr-20 06:29 PM","> Hi Friends, I have written the following code for DNA problem. 
> Go through it and I would like to know if there is anything that could be made better.
> https://pastebin.com/3DFsyU8x
@ABD  There might be other better possible solutions. THANKS","",""
"212069163542249472","Ginge#3034","29-Apr-20 10:03 PM","> Can anyone explain to me what do we have to find?
@LORIS You're looking for the highest number of repetitions in the sequence, so for example with AAGT if you had AAGTAAGTAAGTTGAAGTAAGT you should get 3.","",""
"456134395007467522","LORIS#3189","30-Apr-20 12:36 AM","Why 3 when there is like 5 AAGT(s) in that sequence you mentioned?","",""
"393854278764068875","curiouskiwi#1671","30-Apr-20 12:36 AM","only 3 are contiguous","",""
"456134395007467522","LORIS#3189","30-Apr-20 12:38 AM","Oh!","",""
"456134395007467522","LORIS#3189","30-Apr-20 12:38 AM","Got it now","",""
"312763198103093257","Legendary Girl A#3022","30-Apr-20 01:59 AM","is it normal to be stuck on this part for 10+ hours? (Including research and getting familiar with python)","",""
"312763198103093257","Legendary Girl A#3022","30-Apr-20 02:00 AM","i just finished it tho. holy smokes. this was the most i struggled. python is very confusing for me","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 04:51 AM","When i was working on tideman, i read some tips from someone who had been on it for like weeks","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 04:51 AM","DNA took me maybe a day, but its definitely normal to spend a while on some of these psets","","👀 (1)"
"241631396307664897","Urwin#8936","30-Apr-20 07:44 AM","I've been stuck trying to load the csv file into nested dict {name : {dnastring : count}} for days and I feel like this is something you can do in two seconds","",""
"241631396307664897","Urwin#8936","30-Apr-20 07:45 AM","is there any resource someone can recommend here that's more clear to newbies than the python docs","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 07:51 AM","imo its easier to do a list of dictionaries","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 07:52 AM","Not sure on other documentation","",""
"241631396307664897","Urwin#8936","30-Apr-20 07:54 AM","hmmm ok thanks napoopan","",""
"241631396307664897","Urwin#8936","30-Apr-20 07:54 AM","I guess there's no reason it couldn't work just as well as a list of dictionaries","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 07:55 AM","Im not sure how to efficiently load it into a dict of dicts, where the key is names tbh","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 07:56 AM","But with list, since it doesnt matter what order of people it goes in, you can just for loop it","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 07:56 AM","the ol' looper dooper","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 07:58 AM","@Legendary Girl A if it makes you feel any better i took ages on credit lol","","😕 (1)"
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:01 AM","Same, goddamn","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:01 AM","Like 3 days of working with that god forsaken formula","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:02 AM","aye","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:02 AM","had to write it in python to figure out what im doing","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:03 AM","(python is the lang im most comfortable with) but i got it working in the end, even my friend thought it was a neat challenge (he is an experienced programmer) but his solution was super pointer and recursion heavy while mine was like ""lol arrays and math""","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:04 AM","recursion would be a decent way to do it ye","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:04 AM","I hadnt done really any real programming before CS50","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:04 AM","so i just did it in C, and then Python during the sentimentals","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:04 AM","i have done basic stuff here and there, mostly for math","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:04 AM","and i played with discord.py a bit","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:04 AM","but other than that im pretty new","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:05 AM","lol I also am pretty new but knew the ins and outs of python before starting and the first version of credit annoyed me so much","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:06 AM","the big man in the sky, David Malan, is a great teacher","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:06 AM","credit in python is ez","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:06 AM","aye","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:06 AM","im pretty comfortable at this point","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:06 AM","david is wonderful","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:06 AM","100% on every problem up to Games - Mario","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:06 AM","i usually do the easier and harder halves of psets","",""
"241631396307664897","Urwin#8936","30-Apr-20 08:06 AM","yeah I got stockholm syndrome working in C I guess","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:07 AM","fuckin same lmao","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:07 AM","C is pretty nice","",""
"241631396307664897","Urwin#8936","30-Apr-20 08:07 AM","I'm having a worse time with dna than I did with recover or speller which is apparently quite unusual","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:07 AM","well once I learned what arrays were it was fine","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:07 AM","but that first attempt at credit without it","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:07 AM","i was so mad I couldn't just call .split() lol","",""
"241631396307664897","Urwin#8936","30-Apr-20 08:07 AM","but now having put the hours into everything so far I'll just beat this brick wall until it falls down","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:08 AM","@Ginge my thing was .reverse()","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:08 AM","i made my own reversal function","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:09 AM","then my friend was like ""naw dude, you can just do this"" and modified mine","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:09 AM","i just did a  backwards running for loop, if i remember right","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:09 AM","went from back to front and did all the doubling, used some dividing by 10 and rounding to split them into bits","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:09 AM","i parsed the number,  threw it into an array, reversed the array, then preformed luhn's algorithm","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:10 AM","I used the modulus trick on the card # itself along with importing pow() from math.h","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:10 AM","yeah i did as well","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:10 AM","pow() is great","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:10 AM","i did the same thing in python iirc but used **","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:10 AM","and then used i to determine if I should be adding the number to sum2 or if I should be doubling it and adding its digits to sum2, etc","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:11 AM","logs man","",""
"212069163542249472","Ginge#3034","30-Apr-20 08:16 AM","@Urwin in terms of beginner-friendly documentation W3Schools is decent - https://www.w3schools.com/python/default.asp","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 08:16 AM","my sql saviors","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:17 AM","python is nice","",""
"286488483994927109","PhazonicRidley#1432","30-Apr-20 08:17 AM","just dont go to low..... to deal with bytes you use strings :waguspin:","",""
"241631396307664897","Urwin#8936","30-Apr-20 08:18 AM","thank you @Ginge","","👍 (1)"
"701479951479865384","ABD#0399","30-Apr-20 05:36 PM","@Singularity   Can u explain your code, please. Especially the Regex part.","",""
"701479951479865384","ABD#0399","30-Apr-20 05:41 PM","Hi Friends, I have completed the DNA, but can anyone help me with the code if there could be some better way of doing it. Because I think there might be other ways of writing the code.","https://cdn.discordapp.com/attachments/637500246087434252/705428714137321542/SPOILER_unknown.png",""
"383322530511060994","Singularity#9064","30-Apr-20 05:53 PM","@ABD  

I used Regular Expressions (Regex)

Regular expressions take in a pattern, and try to match that pattern inside a piece of text that you supply in. 

Regex has its own syntax. Symbols have different meanings and you really need to read the documentation or some reference to understand what each character in the pattern does. 



If you know Regex already and just want to know what it is doing, DM me.","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:38 PM","hey, someone can help me i want to iterate through the dict that holds all the DNA's and I want to run on it function that check each DNA and find the max run in the sequence file ..","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:38 PM","I can't seem to understand how to update the values","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:40 PM","i tried something like this:
for gene, longest in sequences.item:
       sequences.get[gene] = longest(sequences, ""here suppose to be the value of the KEY/GENE"")","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:41 PM","can't figure out with Google how to update the value of the longest run for specific DNA i'm using Regex btw though it doesn't matter my problem is to iterate and update","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:42 PM","Please help me","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 09:44 PM","Im not 100% sure what youre trying to do, but i just made a new list to hold the values","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","30-Apr-20 09:44 PM","rather than updating anything","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:45 PM","I explain what I'm trying to do if it make sense tell me..","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:49 PM","I copy the values to dict at first and then removing the ""name"" value so i'm left with a dict that has only DNA's
Then i copy it to and new dict, after that I'm trying to go through the dict (iterate) and go for each KEY for example 'AAGT' and update his value by equaling it to the result my function returns -  a function that gets txt and KEY and returns longest consecutive times that the KEY/DNA appeared in the txt","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:50 PM","it should be this way: 
the current value of certain DNA in my dict = what my function return as the NEW longest appears","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:51 PM","this how i want to update it, then my dict consists for each DNA the longest value and after that i just compare it with the dict i receive from the Database to see whether or not another person has the same values","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 09:56 PM","anyone ?","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 10:36 PM","i managed to move all the longest run values to a new list","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 10:37 PM","now i'm trying to compare it to the database","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 10:38 PM","can anyone help me figure out how to compare them","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 10:38 PM","for person in dbdictreader:
    for gene in dbdictreader.fieldnames:","",""
"405122073652887567","RoiSolomon#4312","30-Apr-20 10:38 PM","this is what i did","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:38 AM","Since csv just a bunch of lists","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:38 AM","How do I obtain the first list","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:38 AM","Can I do it without looping?","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:38 AM","Just want something like list = (first list of the  csv file)","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:42 AM","I can get it with a loop and then just breaking after first iteration","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:42 AM","Seems a bit excessive","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:42 AM","why do you want just the first row","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:43 AM","||
```py
for line in csv_reader:
        sequences = line
        break
```
||","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:43 AM","Cause that row has all the substrings I want to find in txt","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:44 AM","you could just read the whole csv into a list and access the 0 index for the substrings","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:44 AM","since the 0 index will always contain them","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:44 AM","I could","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:44 AM","But that seems just as excessive","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:44 AM","i already have it","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:44 AM","Was just hoping I could easily access a specific list in the csv","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:45 AM","Imo its more efficient that way, since youll need the names/their numbers as well","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:45 AM","Yeah okay","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:45 AM","That's true","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:45 AM","This way you read the CSV once, and separate the values you need out","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:45 AM","Not sure how youd read a single line, but its surely possible","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:45 AM","So then I have a 2d array basically","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:45 AM","yeah youd end up with a list of lists","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:45 AM","and with array[0][i] i'd acess the first list","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:46 AM","How would I read the csv in such a list?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:46 AM","so list[0][0] would spit out the word ""name"", [0][1] would spit out the first substring","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:46 AM","etc etc","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:46 AM","yea","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:46 AM","I forget the exact syntax for reading it that way, one sec","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:47 AM","```    reader = csv.reader(csvfile)
    data = list(reader)```","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:47 AM","arg this formatting","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:49 AM","Alright thanks mate","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:49 AM","That worked","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:50 AM","You could also probably use DictReader to do it in dictionary format","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:50 AM","But lists work too, lists are what i used","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:53 AM","does ```py
with open(argv[1], 'r') as csv_file:
````","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:53 AM","Automatically close the file?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","01-May-20 12:53 AM","yep, thanks to python it closes itself","",""
"305794025644883969","Rinnerdos#6883","01-May-20 12:53 AM","Alright nice","",""
"433756010511990784","supercoolperson#3477","01-May-20 05:37 AM","Hi there, would someone please be able to point me in the right direction for how to access each string of DNA from the first row of the csv file? This is for the part with s[i:j], and I think I’ll make my j be i + len(___), but Im not sure how to fill in the blank. I will cite any help you give in my program. Thanks!","",""
"368285338335969280","Snowboy#4733","01-May-20 10:19 AM","any one know why I get just 96% ? style50 was looks good","",""
"368285338335969280","Snowboy#4733","01-May-20 10:22 AM","nvm, I got it","",""
"405122073652887567","RoiSolomon#4312","01-May-20 12:08 PM","Yess!!!","https://cdn.discordapp.com/attachments/637500246087434252/705707165880680488/Capture.PNG",""
"405122073652887567","RoiSolomon#4312","01-May-20 12:09 PM","We'll be more than glad to help anyone that uses dictionaries in his solution because i only used it..","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:05 PM","sure! @RoiSolomon how you did it.. working on it for a while","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:06 PM","where are you right now ? i mean how far have you reached ?","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:07 PM","","https://cdn.discordapp.com/attachments/637500246087434252/705722081265844284/unknown.png",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:08 PM","put spoiler tag bro","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:08 PM","my bad","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:12 PM","your variable database contain the list of all the values and you used pop() to delete the name which is the first one","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:13 PM","now you i would start and write a function to find certain pattern in the txt file","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:14 PM","> now you i would start and write a function to find certain pattern in the txt file
@RoiSolomon I am working on it for a while.. still no clue","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:14 PM","https://automatetheboringstuff.com/2e/chapter7/
read this chapter seriously it will be the best thing for you","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:15 PM","i was planning to read this book","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:16 PM","i read the whole thing took me about 15 minutes to really understand it and after reading it i saw a video the david malan using Regex with another student it was really a turning point for me because it really connected everything together","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:18 PM","https://www.youtube.com/watch?v=aennIqXu5uI","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:18 PM","time it start : 44:20","",""
"576569730358312970","boiwithADHD#2796","01-May-20 01:18 PM","thanks for the recommendation..","",""
"405122073652887567","RoiSolomon#4312","01-May-20 01:20 PM","Just so you know if you understand it i'm 100% you'll have a great understating on Regular Expressions","","👍 (1)"
"305794025644883969","Rinnerdos#6883","01-May-20 03:39 PM","```py
print(f""Should be the sequence {txt[index:index+len(sequences[i])]}"")
```","",""
"305794025644883969","Rinnerdos#6883","01-May-20 03:39 PM","Is giving me TypeError: can only concatenate str (not ""int"") to str","",""
"305794025644883969","Rinnerdos#6883","01-May-20 03:39 PM","While it seemed to work before..","",""
"305794025644883969","Rinnerdos#6883","01-May-20 03:48 PM","nvm","",""
"433756010511990784","supercoolperson#3477","01-May-20 07:15 PM","Hi there, would someone be able to point me into the right direction for how to access the individual STRs when I compare them in my DNA strand? For example, on line 17, I'm trying to do the s[i:j] technique, and compare it to the STR, but I'm not sure how to refer to each string in the top row of the CSV file. Thanks!","https://cdn.discordapp.com/attachments/637500246087434252/705814689803796510/SPOILER_DNA1.png",""
"527542645002862609","mahmirr#9495","01-May-20 11:40 PM","For everyone doing DNA, I highly recommend using Regular Expressions to the get the job done, It makes your code much easier to read and there is less logic for you as the programmer to do. As a hint, use ||re.findall()||. That will pick out all the matching sequences you are trying to find! It is up to you to find out how Regular Expressions work and how to find consecutive occurrences but it honestly makes your code wildly more fun!","",""
"142284966133366784","KennyD#6825","02-May-20 01:02 AM","@mahmirr I'm pretty sure findall won't work as you need to find the longest sequence not just how many occurences there are","",""
"527542645002862609","mahmirr#9495","02-May-20 01:02 AM","Not true, find all actually returns the a list of all the occurrences of what the regex matched.","",""
"142284966133366784","KennyD#6825","02-May-20 01:03 AM","Does it return a list?","",""
"527542645002862609","mahmirr#9495","02-May-20 01:03 AM","https://docs.python.org/3/library/re.html","",""
"527542645002862609","mahmirr#9495","02-May-20 01:03 AM","Yes it does, it may return None, so you have to create a condition for that case.","",""
"527542645002862609","mahmirr#9495","02-May-20 01:05 AM","You can adjust your regex so that findall also greedily finds the longest possible occurrences as well.","",""
"142284966133366784","KennyD#6825","02-May-20 01:10 AM","Ah right, at first I tried with findall but ended up searching using indices and counters","",""
"142284966133366784","KennyD#6825","02-May-20 01:17 AM","So something like this I presume ||r'((?:HELLO)+)'||","",""
"142284966133366784","KennyD#6825","02-May-20 01:17 AM","What is the meaning of the ?: inside the parentheses?","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:39 AM","> so list[0][0] would spit out the word ""name"", [0][1] would spit out the first substring
@Napoopan Totallatot, Worm King how do you avoid hard coding the '0' and '1' and do something like we do in for loops in C. for int i = 0;.......... so we you can do something like [i][j]","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:40 AM","You hardcode 0 and use a loop with length len(list[0]) to get the substrings","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:40 AM","I'm just trying to figure out how you'd go thru the list looking for an STR","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:40 AM","You can hardcode 0 because 0 will *always* be the header","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:40 AM","in this context","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:41 AM","ok","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:41 AM","Thatll get you the substrings, and then you compare them to the sequence","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:41 AM","Can store them in a variable to avoid doing it a second time","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:43 AM","> You can hardcode 0 because 0 will *always* be the header
@Napoopan Totallatot, Worm King will that be while using 'reader' or its applicable to using 'DictReader' too?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","02-May-20 02:44 AM","with dict reader itll be different, because itll use the headers to make the key/value pairs","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:48 AM","The challenge I have is. I've been able to figure out how to get the STRs individually, say ""AGATC"", ""AATC"", TATC, (that is the longest contiguous STRs). Also been able to convert it to an INT. but the challenge is. 1) do i have to group them say in a list before searching it out in the csv database? 2) how do I iterate over the csv database and figure out these STRs","",""
"599347668245807136","cs50-humblechris#1019","02-May-20 02:52 AM","If it were to be in C, I guess I'd have been able to figure it out easily with the while or for loops.","",""
"433756010511990784","supercoolperson#3477","02-May-20 04:17 AM","Hi there, could I please get some tips for coding my loops? I want to make for loops with the length of each CSV string and the length of the DNA strand. How would I go about accessing each CSV string, though? When I do len(results[0]), it says the length can't be calculated for a CSV file, even though I put it into a list. Thanks!","https://cdn.discordapp.com/attachments/637500246087434252/705951047071563826/SPOILER_DNA_2.png",""
"527542645002862609","mahmirr#9495","02-May-20 05:01 AM","> What is the meaning of the ?: inside the parentheses?
@KennyD Yes exactly. The ?: inside the parentheses makes it greedily get AND return the whole match. If you did not have it there, it re.findall would just return the exact match regardless of the length of what it matched with. Try seeing the difference on Regex101.com. They can show you the real difference between the two. It is also a great place to learn and practice your regex.","","👍 (1)"
"175777572993368064","Reptile King#3201","03-May-20 02:05 AM","@mahmirr can you pass a list into re.findall such as re.findall(strs[i], sequence)? if so how, ive been struggling with this for about an hour","",""
"175777572993368064","Reptile King#3201","03-May-20 02:15 AM","for reference im trying to do this","",""
"175777572993368064","Reptile King#3201","03-May-20 02:16 AM","||for i in range(len(strs)):
            lists = re.findall(f'{strs[i]}', sequence)||","",""
"175777572993368064","Reptile King#3201","03-May-20 02:16 AM","but i keep getting this error message","",""
"175777572993368064","Reptile King#3201","03-May-20 02:16 AM","||Traceback (most recent call last):
  File ""dna.py"", line 33, in <module>
    main()
  File ""dna.py"", line 19, in main
    lists = re.findall(f'{strs[i]}', sequence)
  File ""/usr/local/lib/python3.7/re.py"", line 223, in findall
    return _compile(pattern, flags).findall(string)
TypeError: expected string or bytes-like object||","",""
"701499997673357362","Apso3#3610","03-May-20 03:56 AM","is there a python equivalent to https://man.cs50.io/ or something else where I can find out other features of python?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 04:01 AM","The python documentation","",""
"527542645002862609","mahmirr#9495","03-May-20 05:56 AM","@Reptile King Hi so unfortunately, you are not able to pass explicit lists into Regex (at least in most meaningful contexts). You would need to learn some Regex and experiment. Personally, I like testing my Regex on Regex101.com so I can see what is going on. There, you can supply example inputs you want to search as well as the Regex that you are testing. The benefit of this website that I found is that it will actually break down every part of your Regex into English so that you can comprehensively understand what's going on. In regards to your inquiry about lists, I meant you cannot actually insert native Python lists but if the first index of your list is a string for example, then you should be fine. What I can emphasize the most is to test your Regex out and see what works and does not work. That way, if you ever need to use Regex in other programming language, you can quickly search the slight nuances but you will have developed a excellent base to build your foundation from.","",""
"211261070185070602","Bobby#3076","03-May-20 06:11 AM","So, can you only call the csv.reader() function once per file open? Because I'm trying to use it twice, and it doesn't seem to work unless I close the file and reopen it.","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:12 AM","set a variable equal to csv.reader() and you can use it however often you want","",""
"211261070185070602","Bobby#3076","03-May-20 06:14 AM","I did that, but it still doesn't seem to work. I must be doing something wrong.","",""
"211261070185070602","Bobby#3076","03-May-20 06:16 AM","I'm opening the file, setting csv.reader(database) equal to csv_reader, and then extracting the sequences from the top row... then I'm trying to extract the names from the first column, but my names array keeps coming up empty unless I close the file and reopen it.","",""
"211261070185070602","Bobby#3076","03-May-20 06:23 AM","Well, I fixed it by setting a variable equal to the list of the variable that I set equal to csv.reader(database), haha.","",""
"302594211927031809","Yezzy#1486","03-May-20 08:43 AM","so just for the sake of curiosity how many lines of code did u guys use for this problem?","",""
"302594211927031809","Yezzy#1486","03-May-20 08:44 AM","because my code works perfect but its so long and i'm starting to think that i'm stupid","",""
"211261070185070602","Bobby#3076","03-May-20 09:39 AM","I just finished it a few minutes ago and I have 73 lines of code. But I'm 1,000% certain that I didn't do it right, haha. I just banged on and on until it worked.","",""
"211261070185070602","Bobby#3076","03-May-20 09:52 AM","Okay, I just cut it down to 57. How many lines do you have?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 10:02 AM","mine was around 60 or so, 110 if you include all my comments and my habit of creating white space for readability","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 10:02 AM","57 is concise, good job","",""
"405122073652887567","RoiSolomon#4312","03-May-20 11:07 AM","55, 62 with comments","",""
"211261070185070602","Bobby#3076","03-May-20 05:48 PM","I'm down to 53 including comments, 43 without. But I feel like I'm solving it in a really silly way.","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:38 PM","You probably aren't","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:39 PM","I comment literally almost every line, so my comments + white space double the size of a file lol","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:39 PM","But they look good","",""
"211261070185070602","Bobby#3076","03-May-20 06:40 PM","What did you use to find the highest number of recurring sequences?","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:49 PM","Probably not what I should've lol","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:49 PM","I ignored Regex and used a maxConsecutive count, looping the whole string for every substring","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:49 PM","Wasn't very long, just probably slower","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 06:50 PM","If I were to remove all my comments and stuff I'd probably have 55 or so lines","",""
"211261070185070602","Bobby#3076","03-May-20 07:00 PM","I ignored regex too. I basically just set up a for loop (from i = 1 to the length of the DNA sequence in the text file) that said ""if sequence * i is in the text then add one to the count. Otherwise return the count.","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 07:03 PM","I made my loop run to len(sequence) - len(substring)","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 07:03 PM","And actually used a while loop","",""
"168856034138390528","Napoopan Totallatot, Worm King#3698","03-May-20 07:03 PM","Due to how python does for loops","",""
"211261070185070602","Bobby#3076","03-May-20 09:19 PM","That's a good idea. I just replaced mine with a while loop.","",""
"433756010511990784","supercoolperson#3477","04-May-20 12:16 AM","How would I be able to index the comma-separated values in row[] of STRs, as if it were its own list? I am using STRs as the list from the CSV file, and I have results as my list of actual counts. Thanks! (Line 52)","https://cdn.discordapp.com/attachments/637500246087434252/706615262476238958/SPOILER_DNA_4.png",""
"211261070185070602","Bobby#3076","04-May-20 01:28 AM","Hey, I'm not totally sure what you're asking, but could you do something like STR[row][0], STR[row][1], etc?","",""
"625071332278665219","Ivan21#0894","04-May-20 02:19 AM","https://www.reddit.com/r/DNA/comments/fogygk/how_i_used_my_own_dna_data_to_diagnose_and_treat/?utm_source=share&utm_medium=ios_app&utm_name=iossmf","",""
"625071332278665219","Ivan21#0894","04-May-20 02:20 AM","Amazing how this guy exactly did what we learned in this exercise of DNA! It’s just inspiring how what we learn here in cs50 can be applied to 🙂","","👍 (1)"
"433756010511990784","supercoolperson#3477","04-May-20 02:39 AM","@Bobby when I do that I get ""IndexError: list index out of range"" but I don't think it's because it's out of range, since I tried print(STRs[5][4]) just as an arbitrary test, and it still gave me that error","",""
"269227960156946454","GhostDragon#7128","04-May-20 02:40 AM","try STR['row'][1]","",""
"433756010511990784","supercoolperson#3477","04-May-20 02:44 AM","@GhostDragon Like this? It appears that I still get the error...","https://cdn.discordapp.com/attachments/637500246087434252/706652560274096136/SPOILER_DNA_5_-_Edited.png",""
"433756010511990784","supercoolperson#3477","04-May-20 02:47 AM","What I could do is have a variable rownumber that I increase by 1 for each row, and replace my 'row' with rownumber. Then I get the out of range error though","",""
"211261070185070602","Bobby#3076","04-May-20 03:12 AM","Try row without quotes?","",""
"269227960156946454","GhostDragon#7128","04-May-20 03:17 AM","Oh for that it would be row[0] @supercoolperson","",""
"269227960156946454","GhostDragon#7128","04-May-20 03:17 AM","No brackets","",""
"433756010511990784","supercoolperson#3477","04-May-20 03:30 AM","All righty, so I changed the syntax, but I'm still getting out of bounds errors like earlier. (On line 52, I made it compare row[i+1] instead of row[i], because of the name field.) Do I have an indexing issue, or could it be a problem with the storing of my data @Bobby @GhostDragon","https://cdn.discordapp.com/attachments/637500246087434252/706664020307869786/SPOILER_DNA_6_-_Edited.png",""
"269227960156946454","GhostDragon#7128","04-May-20 03:32 AM","how about saying  `for x in results`?","",""
"433756010511990784","supercoolperson#3477","04-May-20 03:52 AM","Hmm... Like this? Still getting out of range though @GhostDragon @Bobby","https://cdn.discordapp.com/attachments/637500246087434252/706669454603321364/SPOILER_DNA_7.png",""
"265198390684549120","Coy#5527","04-May-20 04:38 AM","remove the +1 on x","",""
"265198390684549120","Coy#5527","04-May-20 04:40 AM","You should start the loop from 1 and not 0 because the 0 belongs to the name","",""
"265198390684549120","Coy#5527","04-May-20 04:42 AM","```for x in range(1, len(results))```","","👍 (1)"
"241631396307664897","Urwin#8936","04-May-20 05:00 AM","hi all, got a sinking feeling I didn't load the csv file optimally. here's results and code","",""
"241631396307664897","Urwin#8936","04-May-20 05:00 AM","||[OrderedDict([('name', 'Alice'), ('AGATC', '2'), ('AATG', '8'), ('TATC', '3')]), OrderedDict([('name', 'Bob'), ('AGATC', '4'), ('AATG', '1'), ('TATC', '5')]), OrderedDict([('name', 'Charlie'), ('AGATC', '3'), ('AATG', '2'), ('TATC', '5')])]|| results upon print() check","",""
"241631396307664897","Urwin#8936","04-May-20 05:01 AM","||with open(csvinfile, 'r') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        people.append(row)|| code","",""
"241631396307664897","Urwin#8936","04-May-20 05:02 AM","is this good/decent/blah/straight up wrong","",""
"95907111652839424","dEhiN#6036","04-May-20 09:38 AM","Hey all, a dict value can be any data type, right? If so, could I use a list? So I have a key and a list of values as the value for that key?","",""
"269227960156946454","GhostDragon#7128","04-May-20 04:28 PM","yep","","👍 (1)"
"247805115015102464","MaxMayo#4771","04-May-20 10:18 PM","Definitely @dEhiN so it could be something like

```py
myDict = {""myKey"":[1,2,3]}
```","",""
"95907111652839424","dEhiN#6036","04-May-20 10:20 PM","@MaxMayo 
Thanks!","",""
"247805115015102464","MaxMayo#4771","04-May-20 10:20 PM","No prob!!","",""
"95907111652839424","dEhiN#6036","04-May-20 10:22 PM","@GhostDragon 
Thanks as well! Sorry, I didn't see your reply until now","",""
"175777572993368064","Reptile King#3201","05-May-20 06:27 AM","||lists = max(re.findall((strs[i])+, seq), key=len)||","",""
"175777572993368064","Reptile King#3201","05-May-20 06:27 AM","im so confused","",""
"175777572993368064","Reptile King#3201","05-May-20 06:27 AM","as to why this wont run","",""
"175777572993368064","Reptile King#3201","05-May-20 06:28 AM","im typing this on regex 101 and ('string')+ works fine","",""
"175777572993368064","Reptile King#3201","05-May-20 06:28 AM","but when i use a variable for the string it doesnt work it says invalid syntax","",""
"175777572993368064","Reptile King#3201","05-May-20 06:28 AM","please any help i can get would be great. Im so close to finishing this up but ive been stuck on this pset for like 2 days","",""
"175777572993368064","Reptile King#3201","05-May-20 07:53 AM","nvm i got it","",""
"700526003390382090","higginsmusic#0517","06-May-20 06:55 AM","If I return from a function, can I use it on an indented line, or only from the margin?","",""
"700526003390382090","higginsmusic#0517","06-May-20 06:59 AM","nvm - I assigned the function to a variable.  cleared up the red x","",""
"154786981245747202","Jincrypt#9757","06-May-20 07:57 PM","can someone help me with re.groups()? mine is returning # AttributeError: 'NoneType' object has no attribute 'groups'

*nevermind, i think it has to do with my first result failing to return anything","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:09 PM","Hello fellow students! I got weird little mistake i cant comprehend. In a given code the highlighted is responsible for printing every 4 chars of text, with step of 1. For some reason, if you look at the result to the right, you will notice, the code sees 4 chars sequence and 3 chars sequence as both having the len of 4. Could anybody help with it?","https://cdn.discordapp.com/attachments/637500246087434252/707640203447107674/SPOILER_unknown.png",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:10 PM","I believe it is having smth with EOF denomination, but not sure yet.","",""
"154786981245747202","Jincrypt#9757","06-May-20 08:14 PM","^ have u tried with different sequence text files & are u getting the same errors?","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:22 PM","I ve tryed 1 -4 in sequences folder - all the same. @Jincrypt","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:27 PM","The problem is that it breaks nicely with 2 chars, but not with 3. Like there is some invisible char`s added at the EOF. @Jincrypt","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:29 PM","And that it clearly says that 3  last chars have len 4, as well as 4 last chars.","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:30 PM","And two chars are said to have len of 3.","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:39 PM","Weird thing, that it says there is 4th cmth in 3 char line, but it prints nothing. But  `if  not dna_chunk[3].isalpha(): `  code for break works. But still cannot understand why.","",""
"154786981245747202","Jincrypt#9757","06-May-20 08:52 PM","so looking at the output, i think it's reading '\n' as a character in your last character, which explains the random spacing after ""AGG"". 

one simple way to show that this works is with 
|| if len(dna_chunk) <= 3 or dna_chunk[3] == '\n':
            break||","",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 08:59 PM","Wierd, i rewrote if with not == 4 and now it works.","https://cdn.discordapp.com/attachments/637500246087434252/707652839480229958/SPOILER_unknown.png",""
"627639391229181952","risen_hate / soangrypanda#0710","06-May-20 09:00 PM","Anyways, thank you for helping! @Jincrypt","",""
"154786981245747202","Jincrypt#9757","06-May-20 10:11 PM","i wonder why that works? so much to learn 😩","",""
"241631396307664897","Urwin#8936","06-May-20 10:17 PM","I see the extra line when I print test my input string","",""
"241631396307664897","Urwin#8936","06-May-20 10:17 PM","I'm sure managing the hidden newline character at the end will be some kind of trick","",""
"241631396307664897","Urwin#8936","06-May-20 10:18 PM","but I remember somebody showing you how to do it in the lecture or the short","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 12:00 AM","i m definetelly handling it with isalpha() (as this hidden char is not alpha, lol) yea, probably should re-read notes once again @Urwin","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 12:00 AM","> i wonder why that works? so much to learn 😩
@Jincrypt 
I think this is kinda woodoo magic. @Jincrypt","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 12:01 AM","No other possible explanation.","",""
"154786981245747202","Jincrypt#9757","07-May-20 12:27 AM","Anyone working with or have experience with regex able to help me out?
I'm trying to use a greedy expression as found here ||(Matching Specific Repetitions with Curly Brackets https://automatetheboringstuff.com/chapter7/)||
It works on some but not all short tandem repeats (depends on the sequence file), and i'm getting non-greedy outputs for re.search, but the greedy outputs show up in re.findall
Is there a reason re.search doesn't output the greedy outputs all the time?","",""
"219298751347556352","Arge6#1562","07-May-20 01:19 AM","I have a good idea how I want to do this problem","",""
"219298751347556352","Arge6#1562","07-May-20 01:19 AM","But i'm getting stumped on how to search this string","",""
"219298751347556352","Arge6#1562","07-May-20 01:19 AM","```         find = sequence.find(i)

        counter = 1
        where = sequence.ftell()
        findnext = sequence[where + len(i), where + (2 * len(i))] ```","",""
"219298751347556352","Arge6#1562","07-May-20 01:19 AM","currently doing this nonsense but it feels like I don't know what i'm doing","",""
"692697361616601169","Parminder#9117","07-May-20 07:43 AM","Can anyone tell me how to start solving this problem?","",""
"692697361616601169","Parminder#9117","07-May-20 07:43 AM","Or what should be my approach, step-by-step?","",""
"692697361616601169","Parminder#9117","07-May-20 09:01 AM","Anyone help, just I wanna know how to start?😩","",""
"149435714684059648","Meta#1337","07-May-20 10:37 AM","I need some help. I'm creating a temporary dictionary to compare against and for whatever reason, it's creating the keys in an entirely different order to the CSV dictionary even though I'm creating it... by looping over the CSV dictionary keys.","",""
"149435714684059648","Meta#1337","07-May-20 10:42 AM","I'm getting an error for number 18 where it's getting Harry when it should be getting No Match, but like... every set of strings is in there, so I don't see why","",""
"149435714684059648","Meta#1337","07-May-20 10:54 AM","I'm even testing it in Regex101 directly against the number of instances to the text. I don't understand why that one is no match.","",""
"149435714684059648","Meta#1337","07-May-20 11:03 AM","Got it. God dangit.","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 08:54 PM","Hey mate! Try first opening files and play with their contents. Try to print separate parts that you need. Think abount how you gonna store the info @Parminder","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 08:56 PM","Hey fellow cs50 pursuers! Could you please confirm if STRs in the task are not necessarily 4 chars long? So they can be, like, TAGA, but they also can be TTTTGGAA, etc? And there is no limit to the number of chars?","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 08:58 PM","I mean, i can open csv files, just want to be sure)","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 08:59 PM","Oh geez, I just realized there was a separate channel for dna instead of the c-to-python stuff","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 08:59 PM","@Parminder have you done the previous problem sets?","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:00 PM","If so, you'll want to write down your approach for this one. Just plain words about what you want to do and then look at the lecture notes and online documentation to see how to do it.","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:01 PM","For instance, depending on how you want to work with the data in the csv file and do the comparisons to find a match at the end of the program, you'll need to use either csv.reader or csv.DictReader because they do different things and return different data types","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:02 PM","@risen_hate / soangrypanda yep, the sequences are different lengths so you'll probably want to make your program take whatever value is in the csv file and use it in your search","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:02 PM","opening the csv files and reading documentation on how the different readers work will help learn how to use the data","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:04 PM","Thank you mate! That gonna make the program slower, sad. I just thought to read txt with a little chunk of 4 chars one at a time, but it seems like i will need to read it all and then iterate bunch of times. Maybe can be optimized. Thank you anyways! @CasualGamerCC","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:04 PM","Once you find an approach that works, you'll be able to figure out something else that's better","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:05 PM","Mine is probably like most. It iterates over the entire DNA sequence for the number of different STR strings there are","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:07 PM","My initial plan was to read a chunk of 4, then use it as a key in my mega-dict, then adjust what to read. Repeat. Ain`t gonna work with STRs of different chunks, unfortunately.","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:09 PM","Another issue you'll have is that the chunks could start on any character, not just multiples of the length. You may figure out a way to take the key from the CSV and find the first instance of it, then increment by the length of that key. I'm not sure that it actually saves any time the way the functions are written","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:11 PM","Yeah, that`s a good point. We had smth similar in recover.","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:30 PM","Could i have yet another hint? Do all the STRs of the person need to match, or its enough to have one? So, say, Alice has AAGG of 5 and TTGG of 4, and in a given sample there are AAGG of 5 and  TTGG of 9. Is it a match for Alice?","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:30 PM","It needs to be an exact match for all STRs","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:30 PM","Mate, you are faster then speed of light! Thank you! @CasualGamerCC","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:31 PM","😄 I'm watching the next lecture with Discord aside on a smaller monitor","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:31 PM","How`s it going in SQL world?)","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:31 PM","Looks like it will be nice, but similarly confusing at first like using Python","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:32 PM","Things are almost too easy to implement when you come from C where you had to create most of your tools","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:32 PM","Seems like we need to get used to confutation in programming, right? 🙂","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:34 PM","Certainly better at reading documentation","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:34 PM","> Things are almost too easy to implement when you come from C where you had to create most of your tools
@CasualGamerCC Yes! And you can write it in way too many ways that you just stuck choosing. Is print(f""{}"") better then print("""".fornat())? Who knows.","",""
"202180238162001920","Lukas#2338","07-May-20 09:36 PM","I'm a fan of the first one's syntax","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:36 PM","Me too, but which one is better and is it even a valid question? 🙂","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:37 PM","From what I've read, C when you need speed or have hardware limits","",""
"202180238162001920","Lukas#2338","07-May-20 09:37 PM","well it's easier to read in my opinion","",""
"346081722254753801","CasualGamerCC#0928","07-May-20 09:37 PM","Oh yeah for reading or programming, I dunno but I find C easier to read right now","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:39 PM","I love curly braces really hard. I dunno why everybody want to get rid of them.","",""
"202180238162001920","Lukas#2338","07-May-20 09:42 PM","you can try to add them to python with
```python
from __future__ import braces
```","",""
"627639391229181952","risen_hate / soangrypanda#0710","07-May-20 09:45 PM","Are they going packed with scope? 🙂","",""
"219298751347556352","Arge6#1562","07-May-20 10:35 PM","is anyone good with regex here?","",""
"219298751347556352","Arge6#1562","07-May-20 10:35 PM","could use some help","",""
"219298751347556352","Arge6#1562","07-May-20 10:35 PM","i'm formatting my regex to include a variable but I want to know if i'm doing it right","",""
"219298751347556352","Arge6#1562","07-May-20 10:35 PM","@curiouskiwi","",""
"219298751347556352","Arge6#1562","07-May-20 10:36 PM","``` Regex = re.compile(rf'{i}{1,}')```","",""
"219298751347556352","Arge6#1562","07-May-20 10:36 PM","with i being the variable of the DNA strand","",""
"393854278764068875","curiouskiwi#1671","07-May-20 11:24 PM","I'm not an expert on regex.  Didn't use it for this problem either.","",""
"219298751347556352","Arge6#1562","07-May-20 11:49 PM","oh what did you use?","",""
"393854278764068875","curiouskiwi#1671","07-May-20 11:53 PM","to do what exactly?  To search for a sequence, I just used `find` and `count`","",""
"219298751347556352","Arge6#1562","07-May-20 11:54 PM","yeah the finding of the DNA strands","",""
"219298751347556352","Arge6#1562","07-May-20 11:54 PM","interesting","",""
"219298751347556352","Arge6#1562","07-May-20 11:56 PM","how does count check for consectutive?","",""
"393854278764068875","curiouskiwi#1671","08-May-20 12:04 AM","I haven't actually seen anyone else do it the way I did. 🙂","",""
"393854278764068875","curiouskiwi#1671","08-May-20 12:11 AM","|| count the number of STR occurrences then check if there is actually a substring with that many and if not, keep reducing the number until there is, and that's the number.||","",""
"379219759729999872","joe#9142","08-May-20 09:00 AM","@Arge6 did that regex work? I’d be interested to know if the curly brackets simply start looking for literally “1,” because it’s an F string","",""
"379219759729999872","joe#9142","08-May-20 09:00 AM","If it doesn’t work that way you could achieve the desired result with the + operator which should return 1 or more matches of the preceding pattern","",""
"291096730186022913","RM#5016","08-May-20 09:11 AM","Really not understanding how I'm supposed to code this one: not sure how to count the dna sequences","",""
"379219759729999872","joe#9142","08-May-20 11:22 AM","@RM what have you tried so far?","",""
"219298751347556352","Arge6#1562","08-May-20 05:31 PM","@joe no it's not working atm","",""
"219298751347556352","Arge6#1562","08-May-20 05:31 PM","oh i see","",""
"704024154470613053","telemahos#5167","08-May-20 05:38 PM","my 6.txt, 8,9 and 19.txt were not working and gave me ""No Match""","",""
"282643444076380180","coolbox#5258","08-May-20 06:54 PM","@telemahos are you using ||re.search||? cause i'm having a similar problem","",""
"704024154470613053","telemahos#5167","08-May-20 06:54 PM","yes","",""
"282643444076380180","coolbox#5258","08-May-20 06:54 PM","i believe it's because ||re.search||stops at the first match and returns that as the match object","",""
"282643444076380180","coolbox#5258","08-May-20 06:55 PM","and i'm struggling to make it so that it matches only the greatest find","",""
"704024154470613053","telemahos#5167","08-May-20 06:55 PM","sorry, i'm using findall","",""
"704024154470613053","telemahos#5167","08-May-20 06:56 PM","pattern.findall()","",""
"282643444076380180","coolbox#5258","08-May-20 06:58 PM","hmm i don't know like i was trying to use findall but it returns a list of tuples instead of a single match object","",""
"219298751347556352","Arge6#1562","08-May-20 07:19 PM","coolbox i'm also using re.search","",""
"219298751347556352","Arge6#1562","08-May-20 07:19 PM","i'm struggling as well","",""
"219298751347556352","Arge6#1562","08-May-20 07:20 PM","i tried adding {{1,}}","",""
"219298751347556352","Arge6#1562","08-May-20 07:20 PM","but that didn't do anything","",""
"219298751347556352","Arge6#1562","08-May-20 07:43 PM","@brian are you by chance available for some regex help?","",""
"177606887532003328","fiction2119#5690","08-May-20 08:15 PM","i can't think a way to save the contents retrieved by the csv reader while being easily accessed... do i need to break this list in smaller lists for each person? i tried using a dictionary but dictionaries don't take in indexes so i couldn't loop through them","",""
"219298751347556352","Arge6#1562","08-May-20 08:27 PM","@fiction2119 i made a list = to the keys of the dictionary","",""
"219298751347556352","Arge6#1562","08-May-20 08:27 PM","not sure that helps","",""
"219298751347556352","Arge6#1562","08-May-20 08:27 PM","caveat i'm stuck af","",""
"177606887532003328","fiction2119#5690","08-May-20 08:31 PM","smart. thanks","",""
"177606887532003328","fiction2119#5690","08-May-20 08:32 PM","i wish you luck","",""
"219298751347556352","Arge6#1562","08-May-20 08:32 PM","you as well","",""
"219298751347556352","Arge6#1562","08-May-20 11:41 PM","Omg.  I finished it!!!! I'm done!","",""
"219298751347556352","Arge6#1562","08-May-20 11:44 PM","re.finditor() was a lifesaver","","🥳 (1),👍 (2),☝️ (1)"
"282643444076380180","coolbox#5258","09-May-20 12:37 AM","heeey @Arge6 what did you do?","",""
"282643444076380180","coolbox#5258","09-May-20 12:37 AM","i'm forever stuck with ||re.search|| because it returns on the first match","",""
"282643444076380180","coolbox#5258","09-May-20 12:38 AM","in regex 101 my pattern works because they have a flag called 'global' but on my code it doesn't seem to work","",""
"282643444076380180","coolbox#5258","09-May-20 01:21 AM","duddee @Arge6 thank you so much","",""
"282643444076380180","coolbox#5258","09-May-20 01:21 AM","i read the documentation of the function and used it","",""
"282643444076380180","coolbox#5258","09-May-20 01:21 AM","it looked cryptic at first but using it was a blast","",""
"282643444076380180","coolbox#5258","09-May-20 01:22 AM","you just made my day","",""
"219298751347556352","Arge6#1562","09-May-20 01:34 AM","np","",""
"219298751347556352","Arge6#1562","09-May-20 01:34 AM","yeah, it made my day too","",""
"282643444076380180","coolbox#5258","09-May-20 01:36 AM","hhahaha","",""
"282643444076380180","coolbox#5258","09-May-20 01:36 AM","it just instantly worked with my previous code for everything","",""
"219298751347556352","Arge6#1562","09-May-20 01:57 AM","i had to figure out the iterator part","",""
"219298751347556352","Arge6#1562","09-May-20 01:57 AM","but wasn't bad","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 06:06 AM","hi, is there a reason why check50 would give me 5/21 for submitting dna? I tested each line and got correct responses for all","",""
"393854278764068875","curiouskiwi#1671","09-May-20 06:40 AM","what does check50 say? (when you click the link on your submission page to see the results)","",""
"211261070185070602","Bobby#3076","09-May-20 06:43 AM","I wonder if there's a problem with the style50 check. It's suggesting that I put extra spaces in the DNA code where I'm pretty sure they shouldn't go...","",""
"346081722254753801","CasualGamerCC#0928","09-May-20 06:45 AM","I haven't had any issues with style50 for the python stuff","",""
"346081722254753801","CasualGamerCC#0928","09-May-20 06:46 AM","On filter I had lines that were really long and it suggested breaking the lines into strange fragments. Once I separated the lines where I preferred, it stopped suggesting any changes.","",""
"211261070185070602","Bobby#3076","09-May-20 06:55 AM","Oh, I think I see the problem now. It looked like it wanted me to put blank lines between the comment line and the code below it, but it just wanted me to put extra lines around the geneCounter function. No problem.","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 07:38 AM","","https://cdn.discordapp.com/attachments/637500246087434252/708538354572197898/unknown.png",""
"250157065887023105","Danny Deermouse#7534","09-May-20 07:38 AM","it appears that its failing on the large database, but when i run it in the ide it runs just fine","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 07:38 AM","and i get the correct names or no match","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 08:10 AM","would you like to see the code?","",""
"346081722254753801","CasualGamerCC#0928","09-May-20 12:17 PM","@Danny Deermouse I can try and check it out for you when you get a chance to post it. Probably best to make a pastebin","",""
"704024154470613053","telemahos#5167","09-May-20 12:55 PM","re.finditor() work's for me too","",""
"707514098367332394","nilTheDev#0136","09-May-20 05:53 PM","Hey, I'm little bit confused in the large database there is 8 different kind of STR for each person, in contrast in small database there is 3 different kind of STR for each person. 

My question,
1. should I have to find longest contagious appearances of all of the STRs' in any given DNA, which are available in the DATABASE? Or I just have to find for only 3 (AGATC, AATG, TATC) and match them with the entries of only that three STRs' in the database?","",""
"704024154470613053","telemahos#5167","09-May-20 05:55 PM","@nilTheDev all 8 STR's","",""
"707514098367332394","nilTheDev#0136","09-May-20 05:58 PM","@telemahos Okay so I have to decide by looking at the first row of the DATABASE first for which STRs' longest contiguous appearances should my algorithm look for in any given DNA, right?","",""
"704024154470613053","telemahos#5167","09-May-20 06:01 PM","you can use different functions for the long or small database","",""
"211261070185070602","Bobby#3076","09-May-20 06:29 PM","@nilTheDev Your program will have to find the STRs in the top row, yes. There are ways to code it so that it doesn't matter what those sequences are or how many of them are in the top row.","","👍 (1)"
"218990011041841152","Nox Eternis#0185","09-May-20 06:31 PM","@Bobby im legit stuck on that part cause my brain is already too fried
any clues on how the hell am i supposed to extract them?","",""
"211261070185070602","Bobby#3076","09-May-20 06:41 PM","I struggled with it for a couple weeks. I had no idea how to approach it until it finally clicked in the middle of the night and I jumped up out of bed to code it lol. The thing that helped a lot was realizing that you can extract the entire database into a ""list of lists"" with the line `csvLists = list(csv.reader(db))`. Of course you'll have to open the file (which should be argv[1]) and assign it to the variable db first. From there, csvLists[0] is the top row, csvLists[1] is the second row, and so on.","",""
"211261070185070602","Bobby#3076","09-May-20 06:42 PM","Recall that you can use the [1:] nomenclature to refer to all elements in a list beginning with index 1.","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 07:29 PM","https://pastebin.com/80UxwdqF","",""
"250157065887023105","Danny Deermouse#7534","09-May-20 07:30 PM","@CasualGamerCC @curiouskiwi  here is my code, it works in the ide but when i submit50 it only gives me 5/21","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 12:53 AM","@Danny Deermouse I tried running your code, but it seems to be really slow for large databases. So far it checks out but I've only tried a few cases","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 12:54 AM","i noticed that it was a little slow when searching through the large database but I thought that was just how Python was? is it supposed to be running faster and if so, is it because im using too many for loops? i tried making it run faster but im not sure how i could","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 12:55 AM","I wonder if the speed is the reason check50 is failing. That doesn't make sense to me but I suppose it could be possible. I'll see if I can explain how my code is different from yours and make  a suggestion","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 12:57 AM","One thing, I used regular reader to get the keys to check for in the sequence. I simply copied the first line from the CSV into an array.","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 12:57 AM","Oh, I bet time could be saved in your check against the CSV file. Let me see how I did it differently","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 12:59 AM","So for my check to identify the person, I stored the number of matches in an array and converted it to an integer and checked that against a converted integer value for the line in the csv file (excluding the name)","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:00 AM","Without giving away too much about how I did it, my check against 5.txt would see if my array matched 2233431226184741","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 01:06 AM","Ok i will try to change it","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 01:06 AM","thanks","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:07 AM","This may be helpful, although I made sure to cast my concatenated string as an integer just to make sure it would work (since in C you couldn't directly compare strings)","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:07 AM","https://www.w3schools.com/python/ref_string_join.asp","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:09 AM","Oh, another pitfall. Since it won't join integers you first have to cast your value in your key array as a string... I think you'll figure it out and if not I'll try to provide some more hints later.","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 01:09 AM","ok i will try your suggestions out later tonight","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:09 AM","The STR values in the CSV file are already stored as strings","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 01:09 AM","thank you for your help","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:09 AM","No problem","",""
"346081722254753801","CasualGamerCC#0928","10-May-20 01:10 AM","Other than taking a little longer than mine, it looks like it should work in check50. Hopefully this resolves it","",""
"393854278764068875","curiouskiwi#1671","10-May-20 03:14 AM","@Danny Deermouse as @CasualGamerCC alluded to, check50 is timing out when testing your code.","","👍 (1)"
"250157065887023105","Danny Deermouse#7534","10-May-20 03:15 AM","ok working on getting the program to run faster","","💯 (1)"
"318593003898011650","luk#2240","10-May-20 08:05 AM","||with open(sys.argv[2], ""r"") as database:
    dnareader = csv.reader(database)
    for i in dnareader:
        print(f""{i}"")||","",""
"318593003898011650","luk#2240","10-May-20 08:05 AM","i keep getting NameError: name 'name' is not defined","",""
"318593003898011650","luk#2240","10-May-20 08:05 AM","why is that?","",""
"318593003898011650","luk#2240","10-May-20 08:06 AM","(i imported csv and cs50)","",""
"500327094006317077","goku98#9031","10-May-20 08:14 AM","@luk your database should be your second argument, not third, right?","",""
"318593003898011650","luk#2240","10-May-20 08:14 AM","lol sorry its my first day coding","",""
"318593003898011650","luk#2240","10-May-20 08:14 AM","still get the same error though","",""
"212069163542249472","Ginge#3034","10-May-20 08:15 AM","did you import sys?","",""
"500327094006317077","goku98#9031","10-May-20 08:21 AM","My code doesn't work correctly for sequences/19.txt only. More specifically, instead of 5 occurrences of 'GATA' str, it shows 6. All the others occurrences of str are correct.
Have a look at my code-","",""
"500327094006317077","goku98#9031","10-May-20 08:21 AM","https://pastebin.com/3wp8s0ee","",""
"318593003898011650","luk#2240","10-May-20 09:30 AM","@goku98 on line 26, why is it >= instead of just >","",""
"318593003898011650","luk#2240","10-May-20 09:30 AM","and on line 28, why is count = 0 part of the if statement","",""
"250157065887023105","Danny Deermouse#7534","10-May-20 09:49 AM","i redesigned the algorithm that checks for repeated str strings and now my code is able to check the large databases instantly when before it was taking 10 seconds. its crazy how that works. thanks for the help","","👍 (2)"
"218990011041841152","Nox Eternis#0185","10-May-20 04:53 PM","need clarification on re.finditer

on its documentation, it says it returns an iterator
so if i call re.finditer again? it goes to the next instance of STR?","",""
"218990011041841152","Nox Eternis#0185","10-May-20 04:54 PM","followup: if it does, how do i make sure that it is directly after the first STR?","",""
"487681505188118529","roughweed#9133","10-May-20 05:05 PM","```python
from csv import DictReader
from sys import argv, exit

try:
    file = open(argv[1], ""r"")
    database = DictReader(file)
except:
    print(""Could not open file"")
    exit(1)

try:
    file = open(argv[2], 'r')
    sample = file.read()
except:
    print(""Could not open file"")
    exit(1)


need = len(database.fieldnames)
count = 0
for row in database:
    for i in range(1, need):
        column = database.fieldnames[i]
        if (str(column) * int(row[column])) in sample:
            count += 1
        else:
            count = 0
            break
    if count == need - 1:
        print(row[database.fieldnames[0]])
        exit(0)

print(""No match"")
exit(0)
```
My code looks like this. It answers 18.txt as `Harry` and 20.txt as `Luna`","",""
"487681505188118529","roughweed#9133","10-May-20 05:05 PM","Anybody knows what's wrong here?","",""
"487681505188118529","roughweed#9133","10-May-20 05:08 PM","Nevermind found it.
Seems like it didn't check longest chain, rather checked if the chain is present or not","",""
"318593003898011650","luk#2240","10-May-20 08:06 PM","can't pass sequence 19","",""
"318593003898011650","luk#2240","10-May-20 08:10 PM","i can pass sequence 19","",""
"318593003898011650","luk#2240","10-May-20 08:10 PM","@goku98 on your line 29 if you remove one indentation from count = 0, it should work","",""
"318593003898011650","luk#2240","10-May-20 09:42 PM","if anyone is as new as me to this and wants to tag team a OOP version of DNA project hit me up","",""
"500327094006317077","goku98#9031","11-May-20 08:24 AM","thanks buddy for your time. @luk","",""
"651110562176172045","m.sharifit88#2964","11-May-20 05:02 PM","Who is going to implement dna in c? 😁 😁 😌","",""
"177606887532003328","fiction2119#5690","11-May-20 05:22 PM","that's just sadistic","",""
"177606887532003328","fiction2119#5690","11-May-20 05:22 PM","xd","",""
"651110562176172045","m.sharifit88#2964","11-May-20 05:25 PM","just for curiosity 😀","",""
"468414325753643008","sebasM#9401","11-May-20 05:55 PM","hi @everyone! someone has a text reference or somewhere to read more about elements to apply in this pset? i am new at programming and really having a hard time with this one. Got the open and read files LOL, but trying to figure it out the best way for my loop and print. Thanks for your help","",""
"177606887532003328","fiction2119#5690","11-May-20 06:27 PM","@sebasM maybe try to store your values in some data structure, that's what i did. just try out different values inside the for loops to see what works best so you save what you want to save","",""
"177606887532003328","fiction2119#5690","11-May-20 06:32 PM","Meanwhile i'm stuck with regex... went through some documentation but it's confusing af. I guess you have to use the + sign or * to indicate repetition of a str, but what gets printed in my testing and the text sequence don't match so i guess i'm doing something wrong. The counting itself will be another pain in the ass i bet, any tips?","",""
"468414325753643008","sebasM#9401","11-May-20 06:35 PM","hi @fiction2119  i know! i've been trying many different ways but i finish having no match or errors LOL and I've been working on this for almost three days 😮 and it is pretty much confusing for me at some point! I understand the concepts but quite hard to apply being a newby :/ thanks for you help. Will keep trying! if i find a way, let you know 🙂","",""
"177606887532003328","fiction2119#5690","11-May-20 06:37 PM","sure thing. Good luck","",""
"468414325753643008","sebasM#9401","11-May-20 06:44 PM","👍  you too","",""
"687220471133110275","Hoffe123321123#3141","11-May-20 06:56 PM","> Meanwhile i'm stuck with regex... went through some documentation but it's confusing af. I guess you have to use the + sign or * to indicate repetition of a str, but what gets printed in my testing and the text sequence don't match so i guess i'm doing something wrong. The counting itself will be another pain in the ass i bet, any tips?
@fiction2119 try the approach of curioskiwi","",""
"687220471133110275","Hoffe123321123#3141","11-May-20 06:57 PM","This was his approach : > || count the number of STR occurrences then check if there is actually a substring with that many and if not, keep reducing the number until there is, and that's the number.||","",""
"687220471133110275","Hoffe123321123#3141","11-May-20 06:58 PM","Worked totally fine for me. Now I gonna check my dictionary with the STR   with the data in the csv...","",""
"177606887532003328","fiction2119#5690","11-May-20 07:02 PM","woah. would never think of it, pretty smart. thanks, i'll try that","",""
"177606887532003328","fiction2119#5690","11-May-20 07:03 PM","almost over dude, good luck!","",""
"515140133159436309","Graeme#0328","11-May-20 07:20 PM","Hi, I'm using regex to find the amount of instances of STR, the weird thing is it works 100% for the small csv but returns numbers which differs from a txt's that are held in the large csv. Any pointers?","",""
"515140133159436309","Graeme#0328","11-May-20 07:20 PM","||sequence = open(sys.argv[2], ""r"")
sequence = sequence.read()

AGATC = len(re.findall('AGATC', sequence))||","",""
"515140133159436309","Graeme#0328","11-May-20 07:21 PM","I wonder if the regex statement is miss counting instances because of over lapping with other patters?","",""
"515140133159436309","Graeme#0328","11-May-20 07:33 PM","There is clue in that the STR TTTTTTCT has been returning the correct number, but all the others are off","",""
"699441297244553357","oysteinf93#6468","11-May-20 07:39 PM","hi everyone, I'm having a really weird issue. I am able to run the DNA code and having it print out the results, but when trying to run it with debug50 it gives me the result in the screenshot. Does anyone know what causes this issue?","https://cdn.discordapp.com/attachments/637500246087434252/709444528590815312/unknown.png",""
"515140133159436309","Graeme#0328","11-May-20 07:51 PM","Any pointers to what the info from the re.DEBUG flag means? I get this in the term:","",""
"515140133159436309","Graeme#0328","11-May-20 07:51 PM","LITERAL 65
LITERAL 71
LITERAL 65
LITERAL 84
LITERAL 67

 0. INFO 16 0b11 5 5 (to 17)
      prefix_skip 5
      prefix [0x41, 0x47, 0x41, 0x54, 0x43] ('AGATC')
      overlap [0, 0, 1, 0, 0]
17: LITERAL 0x41 ('A')
19. LITERAL 0x47 ('G')
21. LITERAL 0x41 ('A')
23. LITERAL 0x54 ('T')
25. LITERAL 0x43 ('C')
27. SUCCESS","",""
"266827672221515776","!Tempesto#8078","11-May-20 08:36 PM","So it turns out I been stuck on this problem for like a full day because I was looking (and successfully counting) for every occurrence of the values in the database, not looking for only times where they are repeated and counting those...","",""
"266827672221515776","!Tempesto#8078","11-May-20 08:36 PM","As soon as I figured that out, I solved it instantly","",""
"266827672221515776","!Tempesto#8078","11-May-20 08:37 PM","Brian saved the day because I watched the walkthrough and figured that out (probably should've done that at the beginning. Ah well live and learn)","",""
"266827672221515776","!Tempesto#8078","11-May-20 08:48 PM","","https://cdn.discordapp.com/attachments/637500246087434252/709461955030679643/unknown.png",""
"266827672221515776","!Tempesto#8078","11-May-20 08:48 PM","Happy days","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:21 PM","hello guys","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:22 PM","I'm facing thing problem","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:22 PM","after running dna.py","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:22 PM","","https://cdn.discordapp.com/attachments/637500246087434252/709470594391081001/chrome_bgN6i0TxKF.png",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:23 PM","how many STR should I check for?","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:23 PM","isn't it  3?","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:24 PM","AGAT
TATC
AATG","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 09:28 PM","?","",""
"438378347442208779","shllshckd#5966","11-May-20 10:24 PM","well in the large.csv we have ```name,AGATC,TTTTTTCT,AATG,TCTAG,GATA,TATC,GAAA,TCTG```","",""
"438378347442208779","shllshckd#5966","11-May-20 10:25 PM","so maybe you would want to check for them too? @Muhammed Zagros","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 10:26 PM","got it thank you","",""
"417994379278680064","Muhammed Zagros#9934","11-May-20 10:26 PM","@shllshckd","",""
"438378347442208779","shllshckd#5966","11-May-20 10:26 PM","np levi","","😆 (3)"
"515140133159436309","Graeme#0328","11-May-20 11:39 PM","I must be missing something. using re.findall or string.count(substring) gives me the same total for occurrences of an STR. For example sequences/19.txt = Fred. Fred's AGATC count is 37 according to the large database. But for both re.findall and string.count(substring) it counts 47. I thought I was going nuts so I copy and pasted the sequence in google docs and used command F AGATC and it got a total of 47. Its not that the code is wrong but certainly the way I'm understanding this is. We need to find the amount of times an STR appears in a sequence right?","",""
"515140133159436309","Graeme#0328","11-May-20 11:40 PM","This line in the spec: For each of the STRs (from the first line of the CSV file), your program should compute the longest run of consecutive repeats of the STR in the DNA sequence to identify.","",""
"515140133159436309","Graeme#0328","11-May-20 11:41 PM","Does this mean something like: AGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATC","",""
"515140133159436309","Graeme#0328","11-May-20 11:41 PM","Should only count as one?","",""
"515140133159436309","Graeme#0328","11-May-20 11:44 PM","ah! nvm","",""
"487681505188118529","roughweed#9133","12-May-20 12:39 AM","Ummm... The count in csv file means that that's the longest chain

There are 47 `AGATC`s in Fred's DNA sequence but there's one `AGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATC`. You need to find if it exists in the given txt or not.","",""
"417994379278680064","Muhammed Zagros#9934","12-May-20 01:25 AM","I use .count() method to compare the STRs to the databases but it only reads the data once after that it always returns zero is there any other method to find occurrences of a substring in a string?","",""
"417994379278680064","Muhammed Zagros#9934","12-May-20 02:34 AM","","https://cdn.discordapp.com/attachments/637500246087434252/709548913081974794/f8kAxMMhSj.png",""
"417994379278680064","Muhammed Zagros#9934","12-May-20 02:34 AM","it reads it only once","",""
"487681505188118529","roughweed#9133","12-May-20 03:11 AM","There is no `ali` in the next rows in `line` I guess. If you don't want `count` to reset, keep `count = 0` out of the `for` loop","",""
"417994379278680064","Muhammed Zagros#9934","12-May-20 03:50 AM","@roughweed the problem is it reads the file and there is 8 ali but if I want to read the same file again it stats at the end i guess","",""
"218990011041841152","Nox Eternis#0185","12-May-20 05:59 AM","need clarification on re.finditer

on its documentation, it says it returns an iterator
so when i call it, it will obviously go to the 1st instance of whatever string i need to find (like an STR)

question: how to i make sure that when i call re.finditer again, how do i measure its position relative to its first call","",""
"703906393903857736","chuinzer#6740","12-May-20 08:34 AM","Traceback (most recent call last):
  File ""dna.py"", line 13, in <module>
    with open(argv[1], ""r"") as database:
FileNotFoundError: [Errno 2] No such file or directory: 'databases/large.csv'","",""
"703906393903857736","chuinzer#6740","12-May-20 08:35 AM","can anyone tell me what this is?","",""
"176385130250633217","aznx2oa#1971","12-May-20 08:47 AM","is your current directory ~./../dna/","",""
"703906393903857736","chuinzer#6740","12-May-20 08:53 AM","like this?","",""
"703906393903857736","chuinzer#6740","12-May-20 08:53 AM","~/ $ python dna.py","",""
"176385130250633217","aznx2oa#1971","12-May-20 08:54 AM","no, like: ~/pset6/dna/","",""
"703906393903857736","chuinzer#6740","12-May-20 08:54 AM","how?","",""
"176385130250633217","aznx2oa#1971","12-May-20 08:54 AM","it was in the problemset instructions","",""
"176385130250633217","aznx2oa#1971","12-May-20 08:54 AM","mkdir pset6 etc","",""
"703906393903857736","chuinzer#6740","12-May-20 08:54 AM","cd pset6 and cd dna?","",""
"176385130250633217","aznx2oa#1971","12-May-20 08:55 AM","if you are in ~/ then cd pset6/dna","",""
"703906393903857736","chuinzer#6740","12-May-20 08:55 AM","Thanks bro","",""
